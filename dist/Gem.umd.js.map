{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Gem.umd.js","webpack:///webpack/bootstrap 13d17bc9b9f21ebfb823","webpack:///./Gem.browser.js","webpack:///./~/Gem.js","webpack:///./~/Style.js","webpack:///./~/Components/Canvas.js","webpack:///./~/Components/Block.js","webpack:///./~/Components/Button.js","webpack:///./~/Components/CheckBox.js","webpack:///./~/Components/Image.js","webpack:///./~/Components/List.js","webpack:///./~/Components/Radio.js","webpack:///./~/Components/Select.js","webpack:///./~/Components/Svg.js","webpack:///./~/Components/Table.js","webpack:///./~/Components/TextArea.js","webpack:///./~/Components/TextField.js","webpack:///./~/Components/Text.js","webpack:///./external/jss.js","webpack:///./~/utils.js","webpack:///./~/blockStyleUtils.js","webpack:///./~/EventEmitterB.js","webpack:///./~/domUtils.js","webpack:///./~/devFlag.js","webpack:///./~/Components/Item.js","webpack:///./~/Components/Option.js","webpack:///./~/Components/Header.js","webpack:///./~/Components/Row.js","webpack:///./~/Components/Cell.js","webpack:///../~/build-modules/~/webpack/~/node-libs-browser/~/events/events.js","webpack:///./~/Components/RowlikeGenerator.js","webpack:///../~/proto/proto.js","webpack:///../~/hashmap/hashmap.js","webpack:///../~/observe/observe.js","webpack:///../~/trimArguments/trimArguments.js","webpack:///../~/build-modules/~/webpack/~/node-libs-browser/~/path-browserify/index.js","webpack:///../~/observe/utils.js","webpack:///../~/build-modules/~/webpack/~/node-libs-browser/~/process/browser.js","webpack:///../~/observe/~/proto/proto.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Style","Canvas","Block","Button","CheckBox","Image","List","Radio","Select","Svg","Table","TextArea","TextField","Text","isGem","undefined","add","children","Array","domNode","EventEmitterB","proto","trimArguments","observe","utils","domUtils","blockStyleUtils","devFlag","isDev","dev","components","setOfBrowserEvents","arrayToMap","superclass","getStyle","gem","_style","inherit","styleToInerit","getInheritingStyle","mix","name","init","that","Error","attached","state","parent","_styleSetupInfo","_nativePseudoclassMap","div","build","apply","arguments","attr","className","defaultClassName","ifonHandlers","ifon","event","excludeDomEvents","addEventListener","emit","concat","prototype","slice","ifoff","removeEventListener","label","Object","defineProperty","get","_label","set","v","addAt","length","index","nodes","normalizeAddAtArguments","i","node","splice","beforeChild","appendChild","insertBefore","setAttachStatus","style","addBefore","addBeforeNode","indexOf","remove","removals","normalizeRemoveArguments","sort","a","b","n","r","removeChild","childNodes","attribute","getAttribute","attributes","setAttribute","value","removeAttribute","display","setToVisible","_displayStyle","document","activeElement","setToInFocus","focus","blur","isStyleObject","newStyle","defaultStyle","getDefaultStyle","newCurrentStyle","mixStyles","setCurrentStyle","getSelectionRange","selection","setSelectionRange","attach","detach","proxy","emitter","options","except","computedStyleMap","_currentStyle","_activeStyle","_stateChangeHandler","body","parentNode","createBody","callback","dom","implementation","createDocument","createElement","documentElement","setTimeout","map","removal","parameterIndex","nthChildCheck","component","testFn","nthLastChildCheck","parameter","parseInt","parseNthChildParameter","parts","replace","match","nthChildParameter","constant","variable","cssValue","cssStyleName","cssNumber","toString","getPseudoClassParts","fullPsuedoClass","x","pseudoClassRegex","class","o","componentStyleMap","mapCamelCase","submatch","toLowerCase","cssClassSheetIndex","classname","result","styleNodes","querySelectorAll","sheet","jssModule","defaultSheet","defaultStyleMaybe","keys","HashMap","baseClassName","nextClassNumber","mixedStyles","styleMapConflicts","mainStyleMap","pseudoclassStyleMap","blockSelector","pureNative","pseudoclassInnerStyle","pseudoclassStyles","pseudoclasses","classes","values","pseudoclassStyle","getEmulatedInfo","pseudoclass","fns","jsRenderedPseduoclasses","info","processParameter","mixWithoutCreatingNativePseudoclasses","styleA","styleB","mixInherit","mainStylesMerged","merge","basicProperties","mergeComponentStyleMaps","mergePseudoclasses","stateHandler","setup","kill","isPureNative","mergedStyleMap","key","styleMapping","conditionalMix","allPseudoclassesNative","forEach","allPureNative","mergeStyleMaps","styleMapA","styleMapB","hashmapMerge","has","resultValue","merged","emulatedInfo","setCss","selector","properties","addRule","rules","cssRules","pseudoElementRule","addPseudoElementRule","addRuleToSheet","doubleColonSelector","singleColonSelector","doubleColonPseudoElRegex","exec","toSingleColonPseudoElements","singleColonPseudoElRegex","toDoubleColonPseudoElements","singleColonForPseudoElements","e","toMozDoubleColonPseudoElements","insertRule","setStyleProperties","ruleStyle","setProperty","submatch1","submatch2","submatch3","unCamelCasedProperties","rule","jss","createNativePseudoclasses","nativePseudoclassSelectorMap","jsRenderedPseudoclassIndex","addNativePseudoclassMapItem","cssSelector","styleValue","newNativePseudoclassMap","createPseudoClassRules","cssProperties","styleMapStyle","overwriteBloodyStyles","nativePseudoclassesWritten","pseudoClassCss","propertiesToOverride","defaultStyleProperty","initialStyle","defaultStyleValues","stylesThatInheritByDefault","cssStyle","nativePseudoclassStyles","nativePseudoclassSelectors","pseudoclassKey","fullSelector","join","push","fromString","styleString","context","obj","JSON","parse","transformFunctionStringsToFunctions","substr","Function","styleDefinition","privateOptions","flattenPseudoClassStyles","pseudoClasses","pseudoClassStyle","flattenedStyles","pseudoClassStyleCopy","copy","substyle","subPseudoClass","newCompoundSelector","canonicalizeCompoundPseudoclass","mixedStyle","pseudoclassList","lastKey","styleHashmapMerge","newKey","valueToSet","processFlattenedPseudoclasses","compoundPseudoClassStyles","allEmulated","psuedoclassInfo","emulated","componentStyleMapConflicts","parameterTransform","transformedParameter","individualPseudoclasses","nativeCssInfoCache","flatPseudoClassStyles","pseudoClass","flattenedPseudoclassObject","cacheKey","createNativeCssInfo","styleMap","changeStyleToNonNative","newClasses","setNativeCssInfoCache","containedStyleSelectors","mergeInSelectors","innerStyle","selectors","stylesInfo","styleSelectors","newComputedStyleMap","impure","undef","parentCacheKey","cacheHasStyleMap","styleToReturn","interacts","retryStyle","cancel","evenNewerComputedStyleMap","basicNativeCssRendered","nativePseudoclassMap","toObject","object","property","$inherit","addPseudoclass","lastObject","lastPseudoclass","curObject","curPseudoclass","newProperties","$state","$setup","$kill","transformFunctionsToStrings","stringify","hover","check","startCallback","endCallback","on","start","end","off","checked","nodeName","console","warn","selected","setupState","listener","removeListener","required","observer","MutationObserver","disconnect","last-child","setupObserver","childList","nth-child","parameterCheck","checkAndCallCallbacks","not","orParts","split","part","andParts","mappedName","addPseudoClass","nameForError","RegExp","column-count","fill-opacity","flex-grow","flex-shrink","font-weight","line-height","opacity","order","orphans","widows","z-index","zoom","azimuth","border-collapse","border-spacing","box-sizing","caption-side","direction","elevation","empty-cells","letter-spacing","list-style-image","list-style-position","list-style-type","pitch-range","pitch","position","quotes","richness","speak-header","speak-numeral","speak-punctuation","speak","speak-rate","stress","text-align","text-indent","text-transform","voice-family","volume","white-space","word-spacing","font-family","font-size","font-style","font-variant","visibility","color","cursor","defaultJss","forDocument","defaultClassSheetIndex","_createSheet","log","dedupNumber","testBaseClassName","Gem","height","width","getContext","toImg","toDataURL","contentArgs","text","newValue","curValue","imageSource","src","Item","listInit","ordered","type","listStyleType","item","selectSibling","button","buttons","group","buttonToSelect","setButtonInGroup","_selected","getRandomInt","min","max","Math","floor","random","EventEmitter","randomStart","RadioButton","val","originalSelected","radioGroup","preventDefault","keyCode","selectNext","selectPrevious","oldValue","booleanValue","previouslySelected","Option","option","newOption","nodesToAdd","anyWereSelected","removalIndexes","theSelectedWasRemoved","prepareForValueChange","optionValue","setSelectedQuiet","svgXml","innerHTML","firstChild","headerOrRegularRow","Prototype","args","row","Header","Row","Cell","borderSpacing","tableInit","header","password","whiteSpace","textProperty","getSelectorsAndRules","results","selectorText","getRules","swapAdjSelAttr","swapPseudoElSyntax","removeRule","deleteRule","extend","dest","hasOwnProperty","aggregateStyles","aggregate","declaredProperties","declared","toCamelCase","swap","lastIndex","adjSelAttrRegex","substring","importantIndex","removeProperty","str","toUpperCase","transformCamelCasedPropertyNames","oldProps","newProps","unCamelCase","Jss","doc","head","getElementsByTagName","sheets","styleSheets","getAll","_removeSheet","styleNode","rel","ownerNode","mergeInternal","objects","deep","obj1","obj2","newObjects","arrayify","deepMerge","objectConjunction","objectCopy","array","setMixedStateStyle","mixedStateStyle","changeStyleIfNecessary","pseudoclassStyleInfo","getPseudoclassStyleFor","psuedoclassState","newPreStyleMapStyle","setPreStyleMapStyle","setupInfo","emulationInfo","changed","styleMapConjunction","newActiveStyle","getStyleMapEntryForGem","nativeCssInfo","setActiveStyle","activeStyleChanged","computedStyleMapChanged","setStyleClass","curActiveStyle$setup","newActiveStyle$setup","applyStyleKillFunction","applyStyleSetupFunction","child","getStateStyle","currentStyle","stateParameter","returnedStyle","psuedoclassStyle","compoundKey","j","createDefaultGemStyle","getStyleObject","defaultStyles","nextConstructor","constructor","reversedDefaults","reverse","mergedDefaultStyle","_styleSetupObject","activeStyle","classList","defaultStyleMap","computedStyles","getStyleForComponent","getStyleForLabel","getStyleForGemName","getStyleForBlockName","findStylesForStyleMapKey","startAncestor","styles","curAncestor","nextAncestorToSearchFrom","ancestor","styleMapKey","nextContructor","stylesForKey","reversedStyles","secondaryStyleMap","primaryStyleMap","cachedStyleMap","overridingProperties","atLeastOne","defaultGemStyle","current$state","newCurrentStyle$state","rawStateStyle","subject","newMixedStateStyle","styleObjectMap","styleObject","triggerIfHandlers","handlerListName","triggerIfHandlerList","normalHandlerToAllHandlerProperty","handlerList","addHandlerToList","removeFromHandlerList","removeCallbackFromList","allHandlerListName","list","getTrace","ifoffHandlers","ifonAllHandlers","ifoffAllHandlers","eventName","_events","listeners","removeIfon","removeIfoff","handleIt","only","handler","addListener","triggerIfOn","triggerIfOff","removeAllListeners","triggerIfOffForEvents","iterateThroughLeafNodes","element","nodeStack","pop","nodeType","findHiddenCharacters","beforeCaretIndex","hiddenCharacters","lastCharWasWhiteSpace","textContent","elem","createAttribute","setAttributeNode","containerEl","charIndex","range","createRange","setStart","collapse","foundStart","nextCharIndex","nodeIndex","hiddenCharactersBeforeStart","hiddenCharactersBeforeEnd","setEnd","sel","window","getSelection","removeAllRanges","addRange","isInputOrArea","rangeCount","getRangeAt","startsInElement","contains","startContainer","elementToIterateThrough","startFound","commonAncestorContainer","startContainerFound","visibleCharacterOffset","leaf","startOffset","endContainer","endOffset","selectionStart","selectionEnd","contents","_value","RowlikeGenerator","colspan","cols","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","TypeError","er","len","error","newListener","warned","trace","once","g","fired","ret","listenerCount","elementType","rowInit","cell","noop","prototypeBuilder","namePointer","EvalError","RangeError","ReferenceError","SyntaxError","URIError","normalizeErrorObject","parentIsFunction","prototypeName","F","constructorName","ProtoObjectFactory","protoUndefined","addProperty","ownProperty","ErrorObject","NormalizedError","tmp","message","stack","configurable","IntermediateInheritor","factoryObject","getOwnPropertyDescriptor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","other","clear","multi","chain","fn","hide","prop","enumerable","data","_data","hash","_count","search","_","count","clone","getTime","hashes","_hmuid_","uid","func","ctx","chainMethod","method","parsePropertyList","getPropertyPointer","propertyList","current","setInternal","pointer","internalObservee","union","unionizeEvents","pushInternal","getPropertyValue","originalLength","internalObservees","unionizeList","unionizeListEvents","spliceInternal","countToRemove","removed","appendInternal","arrayToAppend","spliceArgs","oldLength","afterEnd","innerObservee","propertyListDepth","innerChangeHandler","containerChangeHandler","ignorableContainerEvents","ignorableInnerEvents","change","containerChange","changedPropertyDepth","propertyListToAskFor","answers","changeQuestions","changeIsWithinInnerProperty","isWithin","changeCouldRelocateInnerProperty","couldRelocate","innerObserveeEvent","removeUnion","relevantIndex","removedIndexesContainsIndexOfInnerObservee","removedIndexesAreBeforeIndexOfInnerObservee","unioned","ObserveeChild","elements","unshift","shift","append","_observeeParent","removedIndexesAreBeforeIndexOfObserveeChild","theArguments","process","normalizeArray","allowAboveRoot","up","last","filter","xs","f","res","splitPathRe","splitPath","filename","resolve","resolvedPath","resolvedAbsolute","path","cwd","charAt","normalize","isAbsolute","trailingSlash","paths","relative","from","to","trim","arr","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","dir","basename","ext","extname","nextTick","canSetImmediate","setImmediate","canMutationObserver","canPost","postMessage","queue","hiddenDiv","queueList","ev","source","stopPropagation","title","browser","env","argv","binding","chdir"],"mappings":"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","file":"Gem.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Gem\"] = factory();\n\telse\n\t\troot[\"Gem\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Gem\"] = factory();\n\telse\n\t\troot[\"Gem\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar exports = module.exports = __webpack_require__(1)\n\texports.Style = __webpack_require__(2)\n\t\n\texports.Canvas = __webpack_require__(3)\n\texports.Block = __webpack_require__(4)\n\texports.Button = __webpack_require__(5)\n\texports.CheckBox = __webpack_require__(6)\n\texports.Image = __webpack_require__(7)\n\texports.List = __webpack_require__(8)\n\t//exports.MultiSelect = require(\"Components/MultiSelect\") // not ready yet\n\texports.Radio = __webpack_require__(9)\n\texports.Select = __webpack_require__(10)\n\texports.Svg = __webpack_require__(11)\n\texports.Table = __webpack_require__(12)\n\texports.TextArea = __webpack_require__(13)\n\texports.TextField = __webpack_require__(14)\n\texports.Text = __webpack_require__(15)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar EventEmitterB = __webpack_require__(19)\n\tvar proto = __webpack_require__(29);\n\tvar trimArguments = __webpack_require__(32)\n\tvar observe = __webpack_require__(31)\n\t\n\tvar utils = __webpack_require__(17)\n\tvar domUtils = __webpack_require__(20)\n\tvar blockStyleUtils = __webpack_require__(18)\n\t\n\tvar devFlag = __webpack_require__(21)\n\t\n\tvar Style = __webpack_require__(2)\n\tStyle.isDev = function() {return devFlag.dev}\n\t\n\tvar components = {};\n\t\n\tvar setOfBrowserEvents = utils.arrayToMap([\n\t    'abort','afterprint','animationend','animationiteration','animationstart','audioprocess','beforeprint','beforeunload',\n\t    'beginEvent','blocked','blur','cached','canplay','canplaythrough','change','chargingchange','chargingtimechange',\n\t    'checking','click','close','compassneedscalibration','complete','compositionend','compositionstart','compositionupdate','contextmenu',\n\t    'copy','cut','dblclick','decivelight','devicemotion','deviceorientation','deviceproximity','dischargingtimechange','DOMContentLoaded',\n\t    'downloading','drag','dragend','dragenter','dragleave','dragover','dragstart','drop','durationchange','emptied','ended','endEvent',\n\t    'error','focus','focusin','focusout','fullscreenchange','fullscreenerror','gamepadconnected','gamepaddisconnected','hashchange',\n\t    'input','invalid','keydown','keypress','keyup','languagechange','levelchange','load','loadeddata','loadedmetadata','loadend',\n\t    'loadstart','message','mousedown','mouseenter','mouseleave','mousemove','mouseout','mouseover','mouseup','noupdate','obsolete',\n\t    'offline','online','open','orientationchange','pagehide','pageshow','paste','pause','pointerlockchange','pointerlockerror','play',\n\t    'playing','popstate','progress','ratechange','readystatechange','repeatEvent','reset','resize','scroll','seeked','seeking','select',\n\t    'show','stalled','storage','submit','success','suspend','SVGAbort','SVGError','SVGLoad','SVGResize','SVGScroll','SVGUnload','SVGZoom',\n\t    'timeout','timeupdate','touchcancel','touchend','touchenter','touchleave','touchmove','touchstart','transitionend','unload',\n\t    'updateready','upgradeneeded','userproximity','versionchange','visibilitychange','volumechange','waiting','wheel'\n\t])\n\t\n\t// events:\n\t    // newParent - emits this when a component gets a new parent\n\t    // parentRemoved - emits this when a component is detached from its parent\n\tvar Gem = module.exports = proto(EventEmitterB,function(superclass) {\n\t\n\t    // static properties\n\t\n\t    this.name = 'Gem'\n\t\n\t    // constructor\n\t\tthis.init = function() {\n\t        var that = this\n\t\n\t        if(this.name === 'Gem') {\n\t            throw new Error(\"The 'name' property is required for Gem (it must be set to something that isn't 'Gem')\")\n\t        }\n\t\n\t        superclass.init.call(this)\n\t\n\t        this.attached = false\n\t        if(this.children === undefined) this.children = [] // allow inheriting objects to create their own children array before calling this constructor\n\t        this.state = observe({})\n\t        this.parent = undefined;\n\t        this._styleSetupInfo = []\n\t        this._nativePseudoclassMap = {}\n\t\n\t\t\tif (this.id !== undefined) {\n\t\t\t\tcomponents[this.id] = this;\n\t\t\t}\n\t\n\t        if(this.domNode === undefined) {\n\t            this.domNode = domUtils.div()\n\t        }\n\t\n\t        this.build.apply(this, arguments)\n\t\n\t        //if(devFlag.dev) {\n\t            this.attr('gem', this.name)\n\t        //}\n\t\n\t\n\t        this.domNode.className += ' '+Style.defaultClassName // add the default class\n\t        /*if(this._style === undefined) { // if a style wasn't set by this.build\n\t            this.style = undefined // initialize style to its gem or inherited default\n\t        }*/\n\t\n\t        // set up dom event handlers\n\t        var ifonHandlers={}\n\t        that.ifon(function(event) {\n\t            if(event in setOfBrowserEvents && (that.excludeDomEvents === undefined || !(event in that.excludeDomEvents))) {\n\t                that.domNode.addEventListener(event, ifonHandlers[event]=function() {\n\t                    that.emit.apply(that, [event].concat(Array.prototype.slice.call(arguments)))\n\t                })\n\t            }\n\t        })\n\t        that.ifoff(function(event) {\n\t            if(event in setOfBrowserEvents && (that.excludeDomEvents === undefined || !(event in that.excludeDomEvents))) {\n\t                that.domNode.removeEventListener(event,ifonHandlers[event])\n\t            }\n\t        })\n\t\t}\n\t\n\t    // sub-constructor - called by the constructor\n\t    // can be overridden as a constructor that requires less boilerplate\n\t    this.build = function() {}\n\t\n\t\n\t\t// instance properties\n\t\n\t\n\t\tthis.domNode;\n\t    this.label;        // a static label that can be used for styling\n\t    this.excludeDomEvents;\n\t    this.children;     // a list of child components that are a part of a Gem object (these are used so Styles can be propogated down to child components)\n\t\n\t\n\t    Object.defineProperty(this, 'label', {\n\t        get: function() {\n\t            return this._label\n\t        }, set: function(v) {\n\t            if(this._label === undefined) {\n\t                this._label = v\n\t\n\t                //if(devFlag.dev) {\n\t                    this.attr('label', this._label)\n\t                //}\n\t            } else {\n\t                throw new Error(\"A Gem's label can only be set once (was already set to: \"+this._label+\")\")\n\t            }\n\t        }\n\t    })\n\t\n\t    // adds elements to the components main domNode\n\t    // arguments can be one of the following:\n\t        // component, component, component, ...\n\t        // listOfGems\n\t    this.add = function() {\n\t        this.addAt.apply(this, [this.domNode.children.length].concat(trimArguments(arguments)))\n\t\t}\n\t\n\t    // adds nodes at a particular index\n\t    // nodes can be one of the following:\n\t        // component, component, component, ...\n\t        // listOfGems\n\t    // todo: look into using document fragments to speed this up when multiple nodes are being added\n\t    this.addAt = function(index/*, nodes...*/) {\n\t        var nodes = normalizeAddAtArguments.apply(this, arguments)\n\t\n\t        for (var i=0;i<nodes.length;i++) {\n\t\t\t\tvar node = nodes[i];\n\t\n\t            // remove the node from its current parent if necessary\n\t            if(node.parent !== undefined) {\n\t                throw new Error('Node at index '+i+' already has a parent. Remove the node from its parent before adding it somewhere else.')\n\t            }\n\t\n\t            this.children.splice(index+i, 0, node)\n\t\n\t            if(!isGem(node)) {\n\t                throw new Error(\"node is not a Gem\")\n\t            }\n\t\n\t            var beforeChild = this.children[1+i+index]\n\t            if(beforeChild === undefined) {\n\t                this.domNode.appendChild(node.domNode)\n\t            } else {\n\t                this.domNode.insertBefore(node.domNode, beforeChild.domNode)\n\t            }\n\t\n\t            node.parent = this;\n\t            node.emit('newParent')\n\t\t\t}\n\t\n\t        if(this.attached) {\n\t            for (var i=0;i<nodes.length;i++) {\n\t                var node = nodes[i]\n\t                blockStyleUtils.setAttachStatus(node,true) // must be done before setting the style (unsure why at the moment)\n\t                node.style = node._style // rerender its style\n\t            }\n\t        }\n\t    }\n\t\n\t\t// add a list of nodes before a particular node\n\t    // if beforeChild is undefined, this will append the given nodes\n\t    // arguments can be one of the following:\n\t        // component, component, component, ...\n\t        // listOfGems\n\t    this.addBefore = this.addBeforeNode = function(beforeChild) {\n\t        var nodes = trimArguments(arguments).slice(1)\n\t        if(beforeChild === undefined) {\n\t            this.add.apply(this, nodes)\n\t        } else {\n\t            var index = this.children.indexOf(beforeChild)\n\t            this.addAt.apply(this, [index].concat(nodes))\n\t        }\n\t    }\n\t\n\t\n\t    // arguments can be one of the following:\n\t        // component, component, component, ...\n\t        // index, index, index, ... - each index is the numerical index to remove\n\t        // arrayOfComponents\n\t        // arrayOfIndexes\n\t    this.remove = function() {\n\t        var removals = normalizeRemoveArguments.apply(this, arguments)\n\t        removals = removals.sort(function(a,b) {\n\t            return b-a // reverse sort (so that removing multiple indexes doesn't mess up)\n\t        })\n\t\n\t        for(var n=0; n<removals.length; n++) {\n\t            var r = removals[n]\n\t            var c = this.children[r]\n\t\n\t            if(c === undefined) {\n\t                throw new Error(\"There is no child at index \"+r)\n\t            }\n\t\n\t            c.parent = undefined\n\t            this.children.splice(r, 1)\n\t            this.domNode.removeChild(this.domNode.childNodes[r])\n\t\n\t            c.emit('parentRemoved')\n\t            if(this.attached) {\n\t                c.emit(\"detach\")\n\t            }\n\t        }\n\t    }\n\t\n\t    // sets or gets an attribute on the components domNode\n\t    // parameter sets:\n\t    // if one argument is passed, the attribute's value is returned (if there is no attribute, undefined is returned)\n\t    // if there are two arguments passed, the attribute is set\n\t        // if 'value' is undefined, the attribute is removed\n\t    this.attr = function(/*attribute, value OR attributeObject*/) {\n\t        if(arguments.length === 1) {\n\t            if(arguments[0] instanceof Object) {\n\t                var attributes = arguments[0]\n\t                for(var attribute in attributes) {\n\t                    domUtils.setAttribute(this.domNode, attribute, arguments[0][attribute])\n\t                }\n\t            } else {\n\t                var attribute = this.domNode.getAttribute(arguments[0])\n\t                if(attribute === null) {\n\t                    return undefined // screw null\n\t                } else {\n\t                    return attribute\n\t                }\n\t            }\n\t        } else {\n\t            var attribute = arguments[0]\n\t            if(arguments[1] !== undefined) {\n\t                var value = arguments[1]\n\t                domUtils.setAttribute(this.domNode, arguments[0], value)\n\t            } else {\n\t                this.domNode.removeAttribute(attribute)\n\t            }\n\t        }\n\t    }\n\t\n\t    Object.defineProperty(this, 'visible', {\n\t        // returns true if the element is visible\n\t        get: function() {\n\t            return this.domNode.style.display !== 'none';\n\t\n\t        // sets whether or not the element is visible\n\t        }, set: function(setToVisible) {\n\t            if(setToVisible) {\n\t                if (this._displayStyle !== undefined) {\n\t                    this.domNode.style.display = this._displayStyle // set back to its previous inline style\n\t                    this._displayStyle = undefined\n\t                } else {\n\t                    this.domNode.style.display = ''\n\t                }\n\t            } else {\n\t                if(this.domNode.style.display !== '' && this.domNode.style.display !== 'none') { // domNode has inline style\n\t                    this._displayStyle = this.domNode.style.display\n\t                }\n\t\n\t                this.domNode.style.display = 'none'\n\t            }\n\t        }\n\t    })\n\t\n\t\n\t    Object.defineProperty(this, 'focus', {\n\t        // returns true if the element is in focus\n\t        get: function() {\n\t            return document.activeElement === this.domNode\n\t\n\t        // sets whether or not the element is in focus (setting it to true gives it focus, setting it to false blurs it)\n\t        }, set: function(setToInFocus) {\n\t            if(setToInFocus) {\n\t                this.domNode.focus()\n\t            } else {\n\t                this.domNode.blur()\n\t            }\n\t        }\n\t    })\n\t\n\t    Object.defineProperty(this, 'style', {\n\t        get: function() {\n\t            return this._style\n\t\n\t        // sets the style, replacing one if one already exists\n\t        }, set: function(style) {\n\t            // get active style\n\t                // mix the gem-default style with ..\n\t                // .. the current style\n\t                // .. style returned by the $state of current style\n\t                // .. $$pseudoclasses of current + $state styles\n\t\n\t            if(style === undefined || blockStyleUtils.isStyleObject(style)) {\n\t                this._style = style\n\t            } else {\n\t                this._style = Style(style)\n\t            }\n\t\n\t            if(this.attached) {\n\t                var newStyle = getStyle(this)  // must be called after setting _style\n\t                var defaultStyle = this.getDefaultStyle()\n\t\n\t                var newCurrentStyle = blockStyleUtils.mixStyles(defaultStyle, newStyle)\n\t                blockStyleUtils.setCurrentStyle(this, newCurrentStyle, defaultStyle)\n\t            }\n\t        }\n\t    })\n\t\n\t    Object.defineProperty(this, 'selectionRange', {\n\t        // returns the visible character selection range inside the element\n\t        // returns an array like [offsetStart, offsetEnd]\n\t        get: function() {\n\t            return domUtils.getSelectionRange(this.domNode)\n\t\n\t        // sets the visible character selection range\n\t        }, set: function(selection) {\n\t            domUtils.setSelectionRange(this.domNode, selection[0], selection[1])\n\t        }\n\t    })\n\t\n\t    this.attach = function(domNode) {\n\t        if(domNode !== undefined)\n\t            attach(domNode, this)\n\t        else\n\t            attach(this)\n\t    }\n\t    this.detach = function(domNode) {\n\t        if(domNode !== undefined)\n\t            detach(domNode, this)\n\t        else\n\t            detach(this)\n\t    }\n\t\n\t    this.proxy = function(emitter, options) {\n\t        if(options === undefined) options = {except:[]}\n\t        if(options.except !== undefined) {\n\t            options.except = options.except.concat(['newParent','parentRemoved'])\n\t        }\n\t\n\t        return superclass.proxy.apply(this,[emitter,options])\n\t    }\n\t\n\t\n\t\t// private instance variables/functions\n\t\n\t    this.computedStyleMap;  // a map of style objects computed from the Styles set on a given component and its parent components\n\t    this._nativePseudoclassMap; // a map of Gem names to a set of native pseudoclass styles and their css selector base (eg: {GemA: {'.style1:required .style2': styleObject}}\n\t\n\t\tthis._style;             // the object's explicit Style object (undefined if it inherits a style)\n\t    this._currentStyle;      // the object's current Style that will only change if its parent's activeStyle changes, or if a style is explicitly reset on the gem\n\t    this._activeStyle;       // the active style depending on pseudoclasses, $state, and defaultStyle\n\t\n\t    this._displayStyle;      // temporarily stores an inline display style while the element is hidden (for use when 'show' is called)\n\t    this._styleSetupInfo   // place to put states for setup functions (used for css pseudoclass emulation)\n\t    this._stateChangeHandler // the handler being used for $state style changes\n\t\n\t    this.attached           // set to true if the gem has been attached to the document (or if one of its ancestors has been)\n\t\n\t\n\t    // returns the default style of the current Gem based on the 'defaultStyle' property set on its constructor (this.constructor)\n\t    // if there is more than one default style, they are merged in order\n\t    // if there is no default style, undefined is returned\n\t    this.getDefaultStyle = function() {\n\t        return blockStyleUtils.getDefaultStyle(this)\n\t    }\n\t\n\t    // gets the high-level style of the gem, either from the gem's explicit style, or inherits from its parent's style map\n\t    function getStyle(gem) {\n\t        if(gem._style !== undefined) {            // use the gem's explicit style if possible\n\t            if(gem._style.inherit) {\n\t                var styleToInerit = blockStyleUtils.getInheritingStyle(gem)\n\t                if(styleToInerit !== undefined)\n\t                    return styleToInerit.mix(gem._style, false)\n\t            }\n\t            // else\n\t            return gem._style\n\t\n\t        } else {     // otherwise use the parent's computedStyleMap\n\t            return blockStyleUtils.getInheritingStyle(gem)\n\t        }\n\t    }\n\t});\n\t\n\t\n\tObject.defineProperty(module.exports, 'dev', {\n\t    get: function() {\n\t        return devFlag.dev\n\t    }, set: function(v) {\n\t        devFlag.dev = v\n\t    }\n\t})\n\t\n\t// appends components to the passed domNode (default: body)\n\tvar attach = module.exports.attach = function(/*[domNode,] component or components*/) {\n\t    if(arguments.length > 1) {\n\t        var domNode = arguments[0]\n\t        var components = arguments[1]\n\t    } else {\n\t        if(document.body === null) throw new Error(\"Your document does not have a body.\")\n\t        var domNode = document.body\n\t        var components = arguments[0]\n\t    }\n\t\n\t    if(!(components instanceof Array)) {\n\t        var components = [components]\n\t    }\n\t\n\t    for(var n=0; n<components.length; n++) {\n\t        domNode.appendChild(components[n].domNode)\n\t\n\t        blockStyleUtils.setAttachStatus(components[n], true) // must be done before setting the style (unsure why at the moment)\n\t        components[n].style = components[n]._style   // force style rendering\n\t    }\n\t\n\t\n\t}\n\t// removes components from their parents\n\tvar detach = module.exports.detach = function(components) {\n\t    if(!(components instanceof Array)) {\n\t        components = [components]\n\t    }\n\t\n\t    for(var n=0; n<components.length; n++) {\n\t        var gem = components[n]\n\t        gem.domNode.parentNode.removeChild(gem.domNode)\n\t\n\t        blockStyleUtils.setAttachStatus(gem, false)\n\t    }\n\t}\n\t\n\t// creates a body tag (only call this if document.body is null)\n\t\n\tmodule.exports.createBody = function(callback) {\n\t    var dom = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n\t    var body = dom.createElement(\"body\")\n\t    dom.documentElement.appendChild(body)\n\t    setTimeout(function() {  // set timeout is needed because the body tag is only added after javascript goes back to the scheduler\n\t        callback()\n\t    },0)\n\t}\n\t\n\t\n\t\n\t\n\t// returns a list of indexes to remove from Gem.remove's arguments\n\t/*private*/ var normalizeRemoveArguments = module.exports.normalizeRemoveArguments = function() {\n\t    var that = this\n\t\n\t    if(arguments[0] instanceof Array) {\n\t        var removals = arguments[0]\n\t    } else {\n\t        var removals = Array.prototype.slice.call(arguments)\n\t    }\n\t\n\t    return removals.map(function(removal, parameterIndex) {\n\t        if(isGem(removal)) {\n\t            var index = that.children.indexOf(removal)\n\t            if(index === -1) {\n\t                throw new Error(\"The Gem passed at argument index \"+parameterIndex+\" is not a child of this Gem.\")\n\t            }\n\t            return index\n\t        } else {\n\t            return removal\n\t        }\n\t\n\t    })\n\t}\n\t\n\t// returns a list of nodes to add\n\t/*private*/ var normalizeAddAtArguments = module.exports.normalizeAddAtArguments = function() {\n\t    if(arguments.length === 2) {\n\t        if(arguments[1] instanceof Array) {\n\t            return arguments[1]\n\t        } else {\n\t            return [arguments[1]]\n\t        }\n\t    } else { // > 2\n\t        return trimArguments(arguments).slice(1)\n\t    }\n\t}\n\t\n\tfunction isGem(c) {\n\t    return c.add !== undefined && c.children instanceof Array && c.domNode !== undefined\n\t}\n\tfunction isDomNode(node) {\n\t    return node.nodeName !== undefined\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar jssModule = __webpack_require__(16)\n\tvar proto = __webpack_require__(29)\n\tvar HashMap = __webpack_require__(30)\n\t\n\tvar utils = __webpack_require__(17)\n\t\n\tvar baseClassName = '_ComponentStyle_' // the base name for generated class names\n\tvar nextClassNumber = 0\n\t\n\t\n\tvar mixedStyles = new HashMap() // maps from a pair of Style objects to the resulting mixed style\n\t\n\t// creates a style object\n\tvar Style = module.exports = proto(function() {\n\t\n\t    // static properties\n\t\n\t    // transforms the output of Style.toString() back into a Style object\n\t    this.fromString = function(styleString, context) {\n\t        if(context === undefined) context = {}\n\t        var obj = JSON.parse(styleString)\n\t\n\t        var transformFunctionStringsToFunctions = function(obj) {\n\t            for(var p in obj) {\n\t                var x = obj[p]\n\t                if(x instanceof Object) {\n\t                    transformFunctionStringsToFunctions(x)\n\t                } else if(typeof(x) === 'string' && x.substr(0,8) === 'function') {\n\t                    if(context.Style === undefined) {\n\t                        context.Style = Style\n\t                    }\n\t\n\t                    var keys=[], values=[]\n\t                    for(var key in context) {\n\t                        keys.push(key)\n\t                        values.push(context[key])\n\t                    }\n\t\n\t                    obj[p] = Function(keys, 'return '+x).apply(undefined, values)\n\t                }\n\t            }\n\t        }\n\t\n\t        transformFunctionStringsToFunctions(obj)\n\t\n\t        return Style(obj)\n\t    }\n\t\n\t    // instance properties\n\t\n\t    this.defaultClassName = '_default_'     // the name of the default class (used to prevent style inheritance)\n\t\n\t    // styleDefinition is an object where key-value pairs can be any of the following:\n\t    // <cssPropertyName>: the value should be a valid css value for that style attribute\n\t    // <ComponentName>: the value can either be a Style object or a nested styleDefinition object\n\t    // $setup: the value is a function to be run on a component when the style is applied to it\n\t    // $kill: the value is a function to be run on a component when a style is removed from it\n\t    // $state: the value should be a state handler function\n\t    // $<label>: the value should be a nested styleDefinition object that does not contain any label styles.\n\t    // $inherit: this style should inherit from whatever style would otherwise have been in its placed if it was undefined\n\t    this.init = function(styleDefinition, privateOptions) {\n\t        if(isStyleObject(styleDefinition))\n\t            return styleDefinition\n\t        // else\n\t\n\t        if(privateOptions === undefined) privateOptions = {}\n\t\n\t        this.className = baseClassName+nextClassNumber\n\t        nextClassNumber++\n\t\n\t        this.componentStyleMap = {}\n\t        this.nativeCssInfoCache = new HashMap\n\t//        this.pureStyleInteractionCache = new HashMap\n\t        this.nativePseudoclassesWritten = {}\n\t        this.basicProperties = {}\n\t        if(Style.isDev()) this.nativePseudoclassStyles = {}\n\t\n\t        var flatPseudoClassStyles = new HashMap\n\t        for(var key in styleDefinition) {\n\t            var value = styleDefinition[key]\n\t\n\t            if(key === '$setup') {\n\t                if(!(value instanceof Function)) throw new Error(\"$setup key must be a function ('setup' can't be used as a label)\")\n\t                this.setup = value\n\t\n\t            } else if(key === '$kill') {\n\t                if(!(value instanceof Function)) throw new Error(\"$kill key must be a function ('kill' can't be used as a label)\")\n\t                this.kill = value\n\t\n\t            } else if(key === '$state') {\n\t                if(!(value instanceof Function)) throw new Error(\"$state key must be a function ('$state' can't be used as a label)\")\n\t                this.stateHandler = value\n\t\n\t            } else if(key === '$inherit') {\n\t                this.inherit = true\n\t\n\t            } else if(key.indexOf('$$') === 0) { // pseudo-class style\n\t                var parts = getPseudoClassParts(key.substr(2))\n\t                var pseudoClass = mapCamelCase(parts.class)\n\t                if(parts.parameter !== undefined) {\n\t                    pseudoClass+='('+parts.parameter+\")\"\n\t                }\n\t\n\t                if(pseudoClass === '') {\n\t                    throw new Error(\"Empty pseudo-class name not valid (style key '$$')\")\n\t                }\n\t\n\t                var flattenedPseudoclassObject = flattenPseudoClassStyles([pseudoClass], Style(value))\n\t\n\t                // mix in the resulting compound pseudoclass styles with what has already been found\n\t                flattenedPseudoclassObject.forEach(function(style, key) {\n\t                    styleHashmapMerge(flatPseudoClassStyles, key, style)\n\t                })\n\t\n\t            } else if(key === '$') {\n\t                throw new Error(\"Empty label name not valid (style key '$')\")\n\t            } else if(value instanceof Object || isStyleObject(value)) {  // $label or Gem style\n\t                this.componentStyleMap[key] = Style(value)  // turn the object description into a full fledged style object (or pass back the object if its already a Style)\n\t            } else if(value === undefined) {\n\t                // ignore\n\t            } else {\n\t                var cssStyle = key\n\t                var cssStyleName = mapCamelCase(cssStyle)\n\t                this.basicProperties[cssStyleName] = cssValue(cssStyleName, value)\n\t            }\n\t        }\n\t\n\t        this.pseudoclasses = processFlattenedPseudoclasses(flatPseudoClassStyles, this.componentStyleMap)\n\t        this.pureNative = isPureNative(this)\n\t\n\t\n\t        // takes in a list of pseudoClassRules and changes any nesting like {$$hover: {$$focus: {}}} into something like {hover: {}, ['hover','focus']: {}}\n\t        // returns a new HashMap where\n\t            // each key is the list of pseudoclasses that need to apply for that style to take effect, and\n\t            // each value is a Style object\n\t        // also does some validation\n\t        // pseudoClasses - an array of pseudoclasses\n\t        // pseudoClassStyle - a Style object representing the style inside the pseudoclass\n\t        function flattenPseudoClassStyles(pseudoClasses, pseudoClassStyle) {\n\t\n\t            if(pseudoClassStyle.stateHandler !== undefined) {\n\t                throw new Error('$state style functions are not valid directly inside psuedoclasses')\n\t            }\n\t\n\t            var flattenedStyles = new HashMap\n\t            var pseudoClassStyleCopy = pseudoClassStyle.copy() // copy so you're not clobbering a style something else relies on\n\t\n\t            var pseudoclasses = pseudoClassStyleCopy.pseudoclasses\n\t\n\t            // remove the pseudoclasses\n\t            pseudoClassStyleCopy.pseudoclasses = {classes:new HashMap,emulatedInfo:{}}//{native:new HashMap,emulated:new HashMap,emulatedInfo:{}, emulatedOrder:[]}\n\t\n\t            // write the top-level pseudoClass\n\t            flattenedStyles.set(pseudoClasses, pseudoClassStyleCopy)\n\t\n\t            // create flattened styles (with merged in styles from its parent pseudoclass\n\t\n\t            pseudoclasses.classes.forEach(function(substyle, subPseudoClass){\n\t                var newCompoundSelector = canonicalizeCompoundPseudoclass(pseudoClasses.concat(subPseudoClass))\n\t                var mixedStyle = pseudoClassStyleCopy.mix(substyle, false)\n\t                flattenedStyles.set(newCompoundSelector, mixedStyle)\n\t            })\n\t\n\t            return flattenedStyles\n\t        }\n\t\n\t        // pseudoclassList - the list of pseudoclasses that make up the key\n\t        // mutates pseudoclassList into a canonicalized list\n\t        function canonicalizeCompoundPseudoclass(pseudoclassList) {\n\t            pseudoclassList.sort()  // some string sort to canonicalize the list of pseudoclasses (not really important how it sorts exactly, just that its consistent)\n\t\n\t            // remove duplicates\n\t            var lastKey = pseudoclassList[0]\n\t            for(var n=1; n<pseudoclassList.length;) {\n\t                if(pseudoclassList[n] === lastKey) {\n\t                    pseudoclassList.splice(n,1)\n\t                } else {\n\t                    n++\n\t                }\n\t            }\n\t\n\t            return pseudoclassList\n\t        }\n\t\n\t\n\t        // merges two hashmaps together, where if the same key is set in both hashmaps, the values (being Style objects) are mixed together (styles in b overriding)\n\t        // mutates map\n\t        function styleHashmapMerge(map, newKey, newStyle) {\n\t            if(map.has(newKey)) {\n\t                var valueToSet = map.get(newKey).mix(newStyle, false)\n\t            } else {\n\t                var valueToSet = newStyle\n\t            }\n\t\n\t            map.set(newKey, valueToSet)\n\t        }\n\t\n\t        // returns an object containing the following properties\n\t            // classes - a hashmap object\n\t                // each key is a canonicalized array of pseudoclasses for only emulatable pseudoclasses, and\n\t                // each value is a Style object\n\t            // emulatedInfo - an object where\n\t                // each key is an individual psuedoclass selector (like the elements in a canonicalized pseudoclass list), and\n\t                // each value is an object containing the properties:\n\t                    // fns - the emulated psuedoclass functions `check`, `setup`, and `kill`\n\t                    // parameter - the psuedoclass parameter to pass into `check` and `setup`\n\t        // compoundPseudoClassStyles - a hashmap where\n\t            // each key is a canonicalized array of pseudoclasses, and\n\t            // each value is a Style object\n\t        function processFlattenedPseudoclasses(compoundPseudoClassStyles, componentStyleMap) {\n\t\n\t            var pseudoclasses = new HashMap\n\t            compoundPseudoClassStyles.forEach(function(pseudoclassStyle, key) {\n\t                if(pseudoclassStyle.pureNative) {\n\t                    // make sure the pseudoclasses are all natively renderable (any js-rendered pseudoclass that isn't marked 'emulated' is not natively emulatable)\n\t                    var allEmulated = true\n\t                    for(var n=0; n<key.length; n++) {\n\t                        var parts = getPseudoClassParts(key[n])\n\t                        var psuedoclassInfo = jsRenderedPseduoclasses[parts.class]\n\t                        if(psuedoclassInfo !== undefined && !psuedoclassInfo.emulated) {\n\t                            allEmulated = false\n\t                            break\n\t                        }\n\t                    }\n\t\n\t                    var componentStyleMapConflicts = false\n\t                    if(allEmulated) {\n\t                        componentStyleMapConflicts = styleMapConflicts(componentStyleMap, pseudoclassStyle.componentStyleMap)\n\t                    }\n\t\n\t                    pseudoclassStyle.pureNative = allEmulated && !componentStyleMapConflicts\n\t                }\n\t\n\t                for(var n=0; n<key.length; n++) {\n\t                    var parts = getPseudoClassParts(key[n])\n\t                    var psuedoclassInfo = jsRenderedPseduoclasses[parts.class]\n\t                    if(psuedoclassInfo !== undefined && psuedoclassInfo.parameterTransform !== undefined) {\n\t                        var transformedParameter = psuedoclassInfo.parameterTransform(parts.parameter)\n\t                        key[n] = parts.class+\"(\"+transformedParameter+\")\"\n\t                    }\n\t                }\n\t\n\t                pseudoclasses.set(key, pseudoclassStyle)\n\t            })\n\t\n\t            var emulatedInfo={}\n\t            pseudoclasses.forEach(function(pseudoclassStyle,individualPseudoclasses) {\n\t                if(!pseudoclassStyle.pureNative) {\n\t                    individualPseudoclasses.forEach(function(pseudoclass) {\n\t                        if(!(pseudoclass in emulatedInfo)) {\n\t                            emulatedInfo[pseudoclass] = getEmulatedInfo(pseudoclass)\n\t                        }\n\t                    })\n\t                }\n\t            })\n\t\n\t            return {classes: pseudoclasses, emulatedInfo:emulatedInfo}\n\t        }\n\t    }\n\t\n\t    // returns true if there are any styleMap conflicts, which is when any inner style of pseudoclassStyleMap collides with a non-pure style in mainStyleMap\n\t    function styleMapConflicts(mainStyleMap, pseudoclassStyleMap) {\n\t        for(var blockSelector in mainStyleMap) {\n\t            if(blockSelector in pseudoclassStyleMap) {\n\t                if(!mainStyleMap[blockSelector].pureNative) {\n\t                    return true\n\t                } else {\n\t                    var pseudoclassInnerStyle = pseudoclassStyleMap[blockSelector]\n\t                    if(styleMapConflicts(mainStyleMap, pseudoclassInnerStyle.componentStyleMap)) {\n\t                        return true\n\t                    }\n\t\n\t                    var pseudoclassStyles = pseudoclassInnerStyle.pseudoclasses.classes.values()\n\t                    for(var n=0; n<pseudoclassStyles.length; n++) {\n\t                        var pseudoclassStyle = pseudoclassStyles[n]\n\t                        if(styleMapConflicts(mainStyleMap, pseudoclassStyle.componentStyleMap)) {\n\t                            return true\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        return false\n\t    }\n\t\n\t\n\t    // returns true if there are any styleMap conflicts, which is when any inner style of pseudoclassStyleMap collides with a non-pure style in mainStyleMap\n\t    function styleMapConflicts(mainStyleMap, pseudoclassStyleMap) {\n\t        for(var blockSelector in pseudoclassStyleMap) {\n\t            if(blockSelector in mainStyleMap) {\n\t                if(!mainStyleMap[blockSelector].pureNative) {\n\t                    return true\n\t                }\n\t            }\n\t\n\t            var pseudoclassInnerStyle = pseudoclassStyleMap[blockSelector]\n\t            if(styleMapConflicts(mainStyleMap, pseudoclassInnerStyle.componentStyleMap)) {\n\t                return true\n\t            }\n\t\n\t            var pseudoclassStyles = pseudoclassInnerStyle.pseudoclasses.classes.values()\n\t            for(var n=0; n<pseudoclassStyles.length; n++) {\n\t                var pseudoclassStyle = pseudoclassStyles[n]\n\t                if(styleMapConflicts(mainStyleMap, pseudoclassStyle.componentStyleMap)) {\n\t                    return true\n\t                }\n\t            }\n\t        }\n\t\n\t        return false\n\t    }\n\t\n\t    // returns either\n\t        // this style if styleB is undefined, or\n\t        // a new Style object that merges styleB's properties into the current one such that styleB's properties override the current Style's properties\n\t    // mixInherit - (default: true) if false, doesn't mix in the 'inherit' property\n\t    this.mix = function(styleB, mixInherit) {\n\t        if(mixInherit === undefined) mixInherit = true\n\t        if(styleB === undefined || styleB === this)\n\t            return this\n\t        if(!isStyleObject(styleB)) styleB = Style(styleB)\n\t\n\t        var cacheKey = [this,styleB,mixInherit]\n\t        var mixedStyle = mixedStyles.get(cacheKey)\n\t        if(mixedStyle === undefined) {     // note: mixedStyle can only be undefined if the two style have never been mixed before\n\t            var mixedStyle = mixWithoutCreatingNativePseudoclasses(this, styleB, mixInherit)\n\t            mixedStyles.set(cacheKey, mixedStyle)\n\t        }\n\t\n\t        return mixedStyle\n\t    }\n\t\n\t    // returns a copy of the style with a new className\n\t    this.copy = function () {\n\t        return mixWithoutCreatingNativePseudoclasses(this, Style(), true)\n\t    }\n\t\n\t    // returns an object with the members\n\t        // fns - the functions for the given pseudoclass\n\t        // parameter - the processed parameter to pass into fns.setup\n\t    // pseudoclass - a pseudoclass selector (eg \"not(:required)\")\n\t    function getEmulatedInfo(pseudoclass) {\n\t        var parts = getPseudoClassParts(pseudoclass)\n\t        var fns = jsRenderedPseduoclasses[parts.class]\n\t\n\t        if(fns ===  undefined) {\n\t            throw new Error(\"Pseudoclass \"+parts.class+\" isn't emulated, but has a style that can't be rendered in pure css\")\n\t        }\n\t\n\t        var info = {fns: fns}\n\t        if(parts.parameter !== undefined) {\n\t            if(fns.processParameter !== undefined) {\n\t                info.parameter = fns.processParameter(parts.parameter)\n\t            } else {\n\t                info.parameter = parts.parameter\n\t            }\n\t        }\n\t\n\t        return info\n\t    }\n\t\n\t    // returns an object\n\t        // either with the properties:\n\t            // style - style that has native css properties (basic and pseudoclass) set for it and its block's computedStyleMap\n\t                // this return value *can* be this style itself if there are no interactions with the passed styleMap\n\t            // styleMap - a potentially new styleMap that has copied or inserted styles needed for native psuedoclass rendering\n\t            // nativePsuedoclassMap - a new pseudoclassMap to set on the block\n\t        // OR with the proeprties:\n\t            // cancel:true - exists if a pure native psuedoclass style can't be rendered native because of a collision with a computedStyleMap style that isn't pure native\n\t            // style - the new style to get the pseudoclass style from (and then set with setPreStyleMapStyle)\n\t    // styleMap - a map of style selectors (Gem names or labels) to Styles who's classNames will be used to create the native css\n\t        // intended to be a style map that comes from a block's computedStyleMap property\n\t        // the computedStyleMap can affect how sub-pseudoclass selectors are written\n\t    // nativePseudoclassSelectorMap - an object where each key is a base css-selector, and each value is a Style object\n\t    // jsRenderedPseudoclassIndex - if this style is a js-redered/emulated psueodclass, this is its index inside its parent style's pseudoclasses.classes map, otherwise the value will be 0\n\t    this.createNativeCssInfo = function(gem, styleMap, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle) {\n\t        if(this.inherit) {\n\t            var parentCacheKey = gem.parent\n\t        }\n\t        var cacheKey = [parentCacheKey, styleMap, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle]\n\t        var cacheHasStyleMap = this.nativeCssInfoCache.has(cacheKey)\n\t        if(cacheHasStyleMap) {\n\t            return this.nativeCssInfoCache.get(cacheKey)\n\t        }\n\t        // else\n\t        var styleToReturn = this // can change below if there is an interaction with the styleMap\n\t        if(this.pureNative && this.pseudoclasses.classes.keys().length !== 0) { // only care about pseudoclass interactions if it has pseudoclasses\n\t            var styleSelectors = containedStyleSelectors(this)\n\t            var info = stylesInfo(styleSelectors, styleMap)\n\t            var interacts = info.impure.length > 0\n\t            if(!interacts) {\n\t//                var pureStyleInteractionCacheItem = this.pureStyleInteractionCache.get(info.undef)\n\t//                if(pureStyleInteractionCacheItem === undefined) {\n\t                    var evenNewerComputedStyleMap = utils.merge({},styleMap) // copy\n\t                    for(var key in evenNewerComputedStyleMap) {\n\t                        if(key in styleSelectors) {\n\t                            evenNewerComputedStyleMap[key] = evenNewerComputedStyleMap[key].copy() // copy to ensure that a unique className is created (so that native pseudoclasses don't have the possibility of merging weirdly)\n\t                        }\n\t                    }\n\t                    for(var n=0; n<info.undef.length; n++) {\n\t                        evenNewerComputedStyleMap[info.undef[n]] = Style()  // empty style who's className will be used to create native pseudoclass styles\n\t                    }\n\t\n\t                    styleToReturn = this.copy()    // a new style className is needed to avoid potential incorrect css overlap\n\t                    styleMap = evenNewerComputedStyleMap\n\t//                    this.pureStyleInteractionCache.set(info.undef, {style:styleToReturn, map: styleMap})\n\t//                } else {\n\t//                    styleToReturn = pureStyleInteractionCacheItem.style\n\t//                    styleMap = pureStyleInteractionCacheItem.map\n\t//                }\n\t            } else {\n\t                var retryStyle = this.copy()\n\t                changeStyleToNonNative(retryStyle)\n\t\n\t                var result = {cancel: true, retryStyle: retryStyle}\n\t                setNativeCssInfoCache(this.nativeCssInfoCache, result)\n\t                return result\n\t            }\n\t        }\n\t\n\t        if(!styleToReturn.basicNativeCssRendered) {\n\t            setCss('.'+styleToReturn.className, styleToReturn.basicProperties)\n\t            styleToReturn.basicNativeCssRendered = true\n\t        }\n\t\n\t        var newNativePseudoclassMap = createNativePseudoclasses(gem, styleToReturn, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle)\n\t\n\t        var result = {style: styleToReturn, styleMap: styleMap, nativePseudoclassMap: newNativePseudoclassMap}\n\t        setNativeCssInfoCache(this.nativeCssInfoCache, result)\n\t        return result\n\t\n\t\n\t        // mutates the passed style so that its not native\n\t        function changeStyleToNonNative(style) {\n\t            style.pureNative = false\n\t            var newClasses = new HashMap\n\t            style.pseudoclasses.classes.forEach(function(pseudoclassStyle, individualPseudoclasses) {\n\t                //if(style.pureNative) { // all of these will be pureNative, or style wouldn't be\n\t                    var copy = pseudoclassStyle.copy()\n\t                    copy.pureNative = false\n\t                    newClasses.set(individualPseudoclasses, copy)\n\t\n\t                    individualPseudoclasses.forEach(function(pseudoclass) {\n\t                        if(!(pseudoclass in pseudoclassStyle.pseudoclasses.emulatedInfo)) {\n\t                            style.pseudoclasses.emulatedInfo[pseudoclass] = getEmulatedInfo(pseudoclass)\n\t                        }\n\t                    })\n\t\n\t                /*} else {\n\t                    newClasses.set(individualPseudoclasses, style)\n\t                }*/\n\t            })\n\t\n\t            style.pseudoclasses.classes = newClasses\n\t\n\t            return style\n\t        }\n\t\n\t        function setNativeCssInfoCache(nativeCssInfoCache, value) {\n\t            nativeCssInfoCache.set(cacheKey, value)\n\t        }\n\t\n\t        // returns the label and block selectors within the style (recursive)\n\t        // the grabs from both componentStyleMap and psuedoclasses.native[x].componentStyleMap\n\t        function containedStyleSelectors(style) {\n\t            var result = {}\n\t            for(var key in style.componentStyleMap) {\n\t                var innerStyle = style.componentStyleMap[key]\n\t                mergeInSelectors(key, innerStyle)\n\t            }\n\t\n\t            style.pseudoclasses.classes.forEach(function(pseudoclassStyle) {\n\t                if(pseudoclassStyle.pureNative) {\n\t                    for(var key in pseudoclassStyle.componentStyleMap) {\n\t                        var innerStyle = pseudoclassStyle.componentStyleMap[key]\n\t                        mergeInSelectors(key, innerStyle)\n\t                    }\n\t                }\n\t            })\n\t\n\t            return result\n\t\n\t\n\t            function mergeInSelectors(key, innerStyle) {\n\t                result[key] = true\n\t\n\t                var selectors = containedStyleSelectors(innerStyle)\n\t                utils.merge(result, selectors)\n\t            }\n\t        }\n\t\n\t        // returns info about what styles in styleSelectors and in newComputedStyleMap are:\n\t            // impure in newComputedStyleMap\n\t            // not defined in newComputedStyleMap\n\t        function stylesInfo(styleSelectors, newComputedStyleMap) {\n\t            var impure = []\n\t            var undef = []\n\t            for(var key in styleSelectors) {\n\t                var style = newComputedStyleMap[key]\n\t                if(style === undefined) {\n\t                    undef.push(key)\n\t                } else if(!style.pureNative) {\n\t                    impure.push(key)\n\t                }\n\t            }\n\t            return {impure:impure,undef:undef}\n\t        }\n\t    }\n\t\n\t    this.toObject = function() {\n\t        var object = {}\n\t        for(var property in this.basicProperties) {\n\t            object[property] = this.basicProperties[property]\n\t        }\n\t\n\t        if(this.inherit)\n\t            object.$inherit = true\n\t\n\t        for(var selector in this.componentStyleMap) {\n\t            object[selector] = this.componentStyleMap[selector].toObject()\n\t        }\n\t\n\t        var addPseudoclass = function(pseudoclassList, style) {\n\t            var curObject = object, lastObject, lastPseudoclass\n\t            pseudoclassList.forEach(function(pseudoclass) {\n\t                var curPseudoclass = '$$'+pseudoclass\n\t                if(curObject[curPseudoclass] === undefined) {\n\t                    curObject[curPseudoclass] = {}\n\t                }\n\t\n\t                lastPseudoclass = curPseudoclass\n\t                lastObject = curObject\n\t                curObject = curObject[lastPseudoclass]\n\t            })\n\t\n\t            var newProperties = style.toObject()\n\t            for(var key in newProperties) {\n\t                lastObject[lastPseudoclass][key] = newProperties[key] // merge\n\t            }\n\t\n\t        }\n\t\n\t        if(this.pseudoclasses.classes !== undefined) {\n\t            this.pseudoclasses.classes.forEach(function(style, pseudoclassList) {\n\t                addPseudoclass(pseudoclassList, style)\n\t            })\n\t        }\n\t\n\t        if(this.stateHandler !== undefined) {\n\t            object.$state = this.stateHandler\n\t        }\n\t        if(this.setup !== undefined) {\n\t            object.$setup = this.setup\n\t        }\n\t        if(this.kill !== undefined) {\n\t            object.$kill = this.kill\n\t        }\n\t\n\t        return object\n\t    }\n\t\n\t    // converts the style into a JSON string\n\t    // note that $state, $setup, and $kill functions are also stored as strings\n\t    this.toString = function() {\n\t        var obj = this.toObject()\n\t\n\t        var transformFunctionsToStrings = function(obj) {\n\t            for(var p in obj) {\n\t                var x = obj[p]\n\t                if(x instanceof Function) {\n\t                    obj[p] = x.toString()\n\t                } else if(x instanceof Object) {\n\t                    transformFunctionsToStrings(x)\n\t                }\n\t            }\n\t        }\n\t\n\t        transformFunctionsToStrings(obj)\n\t\n\t        return JSON.stringify(obj)\n\t    }\n\t\n\t    // instance properties\n\t\n\t    this.className          // the css classname for this style\n\t    this.componentStyleMap; // maps a Component name to a Style object for that component\n\t    this.setup;             // run some javascript on any element this class is applied to\n\t    this.kill;              // a function to run on removal of the style (should reverse setup)\n\t\n\t\n\t    // private properties\n\t\n\t    this.nativeCssInfoCache; // instance property that stores a map between a styleMap and a potentially modified pair: {style:<Style object>, styleMap: <computedStyleMap>}\n\t    this.basicNativeCssRendered; // contains true if the css class has been written to a stylesheet\n\t\n\t\n\t    // creates a new style with styleB mixed into styleA (styleB overrides)\n\t    // does not create native pseudoclass styles\n\t    // mixInherit - if true, mixes in the 'inherit' property, if false, 'inherit' will get undefined (same as inherit===false)\n\t    function mixWithoutCreatingNativePseudoclasses(styleA, styleB, mixInherit) {\n\t        // mix css properties and non-emulated pseudoclass properties\n\t        var mainStylesMerged = utils.merge({}, styleA.basicProperties, styleB.basicProperties)\n\t        var newStyle = Style(mainStylesMerged)\n\t\n\t        // mix block and label properties\n\t        newStyle.componentStyleMap = mergeComponentStyleMaps(styleA, styleB)\n\t\n\t        // mix pseudoclass properties\n\t        newStyle.pseudoclasses = mergePseudoclasses(styleA, styleB)\n\t\n\t        // mix $state\n\t        if(styleB.stateHandler !== undefined) {\n\t            newStyle.stateHandler = styleB.stateHandler\n\t        } else {\n\t            newStyle.stateHandler = styleA.stateHandler\n\t        }\n\t\n\t        // mix $setup and $kill                                                                                                                                                                                                                                                                 waaahhh hah hah haaaaaaa\n\t        if(styleB.setup !== undefined) {\n\t            newStyle.setup = styleB.setup\n\t        } else {\n\t            newStyle.setup = styleA.setup\n\t        }\n\t        if(styleB.kill !== undefined) {\n\t            newStyle.kill = styleB.kill\n\t        } else {\n\t            newStyle.kill = styleA.kill\n\t        }\n\t\n\t        if(mixInherit) {\n\t            newStyle.inherit = styleA.inherit || styleB.inherit\n\t        }\n\t\n\t        newStyle.pureNative = isPureNative(newStyle)\n\t\n\t        return newStyle\n\t    }\n\t\n\t    // returns a new component style map where styleB overrides styleA\n\t    // handles the 'inherit' option on styles\n\t    function mergeComponentStyleMaps(styleA, styleB) {\n\t        var mergedStyleMap = utils.merge({}, styleA.componentStyleMap)\n\t        for(var key in styleB.componentStyleMap) {\n\t            var styleMapping = styleB.componentStyleMap[key] // a Style object\n\t\n\t            mergedStyleMap[key] = conditionalMix(mergedStyleMap[key], styleMapping)\n\t        }\n\t\n\t        return mergedStyleMap\n\t    }\n\t\n\t    // conditionally mixes two styles\n\t    // returns b mixed into a if b inherits\n\t    // otherwise returns b\n\t    function conditionalMix(a,b) {\n\t        if(b === undefined)\n\t            return a\n\t\n\t        if(b.inherit) {\n\t            if(a === undefined)\n\t                return b\n\t            else\n\t                return a.mix(b, false)\n\t        } else {\n\t            return b\n\t        }\n\t    }\n\t\n\t    // returns true if the style can be rendered with pure css (no javascript needed)\n\t    function isPureNative(style) {\n\t        if(style.setup === undefined && style.kill === undefined && style.stateHandler === undefined\n\t        ) {\n\t            var allPseudoclassesNative = true\n\t            style.pseudoclasses.classes.forEach(function(style) {\n\t                if(!style.pureNative) allPseudoclassesNative = false\n\t            })\n\t            if(!allPseudoclassesNative) {\n\t                return false\n\t            }\n\t\n\t            var allPureNative = true\n\t            for(var key in style.componentStyleMap) {\n\t                if(style.componentStyleMap[key].pureNative !== true) {\n\t                    allPureNative = false\n\t                    break\n\t                }\n\t            }\n\t            if(!allPureNative) {\n\t                return false\n\t            }\n\t\n\t            return true\n\t        }\n\t    }\n\t\n\t    // mixes together the pseudoclass properties of two styles\n\t    // handles changing native pseudoclass handling to emulated (and vice versa)\n\t    function mergePseudoclasses(styleA, styleB) {\n\t        var merged = mergeStyleMaps(styleA.pseudoclasses.classes, styleB.pseudoclasses.classes)\n\t        var emulatedInfo = utils.merge({}, styleA.pseudoclasses.emulatedInfo, styleB.pseudoclasses.emulatedInfo)\n\t\n\t        return {classes: merged, emulatedInfo:emulatedInfo}\n\t\n\t\n\t        // returns a new map with mapA and mapB merged, where mapB's styles override\n\t        function mergeStyleMaps(styleMapA, styleMapB) {\n\t            var result = utils.hashmapMerge(new HashMap, styleMapA)\n\t            styleMapB.forEach(function(v, key) {\n\t                if(result.has(key)) {\n\t                    var resultValue = result.get(key).mix(styleMapB.get(key), true)\n\t                } else {\n\t                    var resultValue = styleMapB.get(key)\n\t                }\n\t\n\t                result.set(key, resultValue)\n\t            })\n\t\n\t            return result\n\t        }\n\t    }\n\t\n\t    var singleColonForPseudoElements = false; // may be changed if its detected that the browser does this\n\t    var doubleColonPseudoElRegex =      /(::)(before|after|first-line|first-letter|selection)/;\n\t    var singleColonPseudoElRegex = /([^:])(:)(before|after|first-line|first-letter|selection)/;\n\t\n\t    // creates a css selector with the passed properties\n\t    function setCss(selector, properties) {\n\t        var unCamelCasedProperties = {}\n\t        for (key in properties) {\n\t            unCamelCasedProperties[mapCamelCase(key)] = properties[key]\n\t        }\n\t\n\t        var rule = addRule(jss.defaultSheet, selector)\n\t        setStyleProperties(rule, properties);\n\t\n\t\n\t\n\t        function addRule(sheet, selector) {\n\t\t        var rules = sheet.cssRules || sheet.rules || [];\n\t\t        var index = rules.length;\n\t\n\t            var pseudoElementRule = addPseudoElementRule(sheet, selector, rules, index);\n\t            if (!pseudoElementRule) {\n\t                addRuleToSheet(sheet, selector, index);\n\t            }\n\t\n\t\t        return rules[index].style\n\t\t    }\n\t\n\t        // Handles single colon syntax for older browsers and bugzilla.mozilla.org/show_bug.cgi?id=949651\n\t        function addPseudoElementRule(sheet, selector, rules, index) {\n\t            var doubleColonSelector;\n\t            var singleColonSelector;\n\t\n\t            if (doubleColonPseudoElRegex.exec(selector)) {\n\t                doubleColonSelector = selector;\n\t                singleColonSelector = toSingleColonPseudoElements(selector);\n\t            } else if (singleColonPseudoElRegex.exec(selector)) {\n\t                doubleColonSelector = toDoubleColonPseudoElements(selector);\n\t                singleColonSelector = selector;\n\t            } else {\n\t                return false; // Not dealing with a pseudo element\n\t            }\n\t\n\t            if (!singleColonForPseudoElements) {\n\t                // Assume modern browser and then check if successful\n\t                try {\n\t                    addRuleToSheet(sheet, doubleColonSelector, index);\n\t                } catch(e) {\n\t                    // if there's an error, assume its because the selector was deemed invalid (firefox), so try -moz- extension\n\t                    addRuleToSheet(sheet, toMozDoubleColonPseudoElements(selector), index);\n\t                }\n\t                if (rules.length <= index) {\n\t                    singleColonForPseudoElements = true;\n\t                }\n\t            }\n\t            if (singleColonForPseudoElements) {\n\t                addRuleToSheet(sheet, singleColonSelector, index);\n\t            }\n\t\n\t            return true;\n\t        }\n\t\n\t        function addRuleToSheet(sheet, selector, index) {\n\t\t        if (sheet.insertRule) {\n\t\t            sheet.insertRule(selector + ' { }', index);\n\t\t        } else {\n\t\t            sheet.addRule(selector, null, index);\n\t\t        }\n\t\t    }\n\t\n\t        function setStyleProperties(ruleStyle, properties) {\n\t\t        for (var key in properties) {\n\t                ruleStyle.setProperty(key, properties[key])\n\t\t        }\n\t\t    }\n\t\n\t        function toDoubleColonPseudoElements(selector) {\n\t            return selector.replace(singleColonPseudoElRegex, function (match, submatch1, submatch2, submatch3) {\n\t                return submatch1 + '::' + submatch3;\n\t            });\n\t        }\n\t        function toMozDoubleColonPseudoElements(selector) {\n\t            return selector.replace(singleColonPseudoElRegex, function (match, submatch1, submatch2, submatch3) {\n\t                return submatch1 + '::-moz-' + submatch3;\n\t            });\n\t        }\n\t        function toSingleColonPseudoElements(selector) {\n\t            return selector.replace(doubleColonPseudoElRegex, function(match, submatch1, submatch2) {\n\t                return ':' + submatch2;\n\t            })\n\t        }\n\t    }\n\t\n\t\n\t    // creates the css styles necessary to render the native pseudoclass styles of this style (and contained styles that can be rendered native)\n\t    // intended to be called only once per style\n\t    // styleMap - A block's new computedStyleMap. Selectors that also exist in native pseudoclasses of the style have already been created or copied (so you can be sure creating css class styles for them won't conflict with anything)\n\t    // jsRenderedPseudoclassIndex - the index of the active pseudoclass style - needed for deciding what native css needs to be overridden by `style`\n\t        // if this is 0, no overriding needs to happen (so 0 is also set when there's no active js-rendered/emulated pseudoclass)\n\t    function createNativePseudoclasses(gem, style, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle) {\n\t        if(nativePseudoclassSelectorMap === undefined) nativePseudoclassSelectorMap = {}\n\t\n\t        var nativePseudoclassSelectors = []\n\t        //var nativePseudoclassPropertiesToOverride = {}   // stores what style properties for what pseudoclasses needs to be overridden by an emulated style\n\t        var newNativePseudoclassMap = {} // a mapping from a Gem name to a nativePseudoclassSelectorMap\n\t        var index = 0\n\t        style.pseudoclasses.classes.forEach(function(pseudoclassStyle, pseudoclassKey) {\n\t            var fullSelector = '.'+style.className+':'+pseudoclassKey.join(':')\n\t            if(pseudoclassStyle.pureNative) {\n\t                // create css styles for top-level css properties of the native psuedoclass\n\t                createPseudoClassRules(fullSelector, pseudoclassStyle.basicProperties, style, false)\n\t                nativePseudoclassSelectors.push(pseudoclassKey.join(':'))\n\t\n\t                for(var blockSelector in pseudoclassStyle.componentStyleMap) {\n\t                    addNativePseudoclassMapItem(blockSelector, fullSelector, pseudoclassStyle.componentStyleMap[blockSelector])\n\t                }\n\t            } else if(index === jsRenderedPseudoclassIndex) {\n\t                // create overriding css styles for top-level css properties of the emulated psuedoclass (so that emulated and native pseudoclasses mix properly)\n\t                for(var n=0; n<nativePseudoclassSelectors.length; n++) {\n\t                    var selector = nativePseudoclassSelectors[n]\n\t                    createPseudoClassRules(fullSelector+\":\"+selector, style.basicProperties, style, true)\n\t                }\n\t            }\n\t\n\t            index++\n\t        })\n\t\n\t        var blockStyleUtils = __webpack_require__(18)\n\t        for(var selector in nativePseudoclassSelectorMap) {\n\t            var pseudoclassStyle = nativePseudoclassSelectorMap[selector]\n\t            if(pseudoclassStyle.inherit) {\n\t                pseudoclassStyle = blockStyleUtils.getInheritingStyle(gem).mix(pseudoclassStyle, false)\n\t            }\n\t\n\t            var fullSelector = selector+' '+'.'+style.className\n\t\n\t            // create css styles for the top-level style when inside a pure native pseudoclass style of its parent\n\t            createPseudoClassRules(fullSelector, pseudoclassStyle.basicProperties, style, true)\n\t\n\t            for(var blockSelector in pseudoclassStyle.componentStyleMap) {\n\t                addNativePseudoclassMapItem(blockSelector, fullSelector, pseudoclassStyle.componentStyleMap[blockSelector])\n\t            }\n\t\n\t            // create css styles for pseudoclass styles when inside a pure native pseudoclass style of its parent\n\t            pseudoclassStyle.pseudoclasses.classes.forEach(function(pseudoclassStyle, pseudoclassKey) {\n\t                if(pseudoclassStyle.pureNative) {\n\t                    createPseudoClassRules(fullSelector+':'+pseudoclassKey.join(':'), pseudoclassStyle.basicProperties, style, true)\n\t                }\n\t            })\n\t        }\n\t\n\t        return newNativePseudoclassMap\n\t\n\t\n\t        function addNativePseudoclassMapItem(blockSelector, cssSelector, styleValue) {\n\t            if(newNativePseudoclassMap[blockSelector] === undefined)\n\t                newNativePseudoclassMap[blockSelector] = {}\n\t            newNativePseudoclassMap[blockSelector][cssSelector] = styleValue\n\t        }\n\t\n\t        // cssProperties - The css rules to apply (should only contain native css properties). CamelCase and certain integer values will be converted.\n\t        // overwriteBloodyStyles - if true, styles from styleMapStyle are overridden with the default (either a block's default or the base default)\n\t        function createPseudoClassRules(selector, cssProperties,  /*temporary*/ styleMapStyle, overwriteBloodyStyles) {\n\t            if(!style.nativePseudoclassesWritten[selector]) {\n\t                var pseudoClassCss = {}\n\t\n\t                if(overwriteBloodyStyles) {\n\t                    // overwrite styles that would bleed over from the styleMapStyle\n\t\n\t                    var propertiesToOverride = Object.keys(styleMapStyle.basicProperties)\n\t                    styleMapStyle.pseudoclasses.classes.forEach(function(style) {\n\t                        propertiesToOverride = propertiesToOverride.concat(Object.keys(style.basicProperties))\n\t                    })\n\t\n\t                    for(var n=0; n<propertiesToOverride.length; n++) {\n\t                        var key = propertiesToOverride[n]\n\t                        if(defaultStyle) {\n\t                            var defaultStyleProperty = defaultStyle.basicProperties[key]\n\t                        }\n\t\n\t                        var initialStyle = defaultStyleProperty || defaultStyleValues[key]\n\t                                           || (key in stylesThatInheritByDefault ? 'inherit' : 'initial') // todo: write a function to calculate the inital value, since 'initial' isn't supported in IE (of course) - tho it will be eventually since its becoming apart of css3\n\t                        pseudoClassCss[key] = initialStyle\n\t                    }\n\t                }\n\t\n\t                for(var key in cssProperties) {\n\t                    var value = cssProperties[key]\n\t\n\t                    var cssStyle = key\n\t                    var cssStyleName = mapCamelCase(cssStyle)\n\t                    pseudoClassCss[cssStyleName] = cssValue(cssStyleName, value)\n\t                }\n\t\n\t                // create immediate pseudo class style\n\t                setCss(selector, pseudoClassCss) // create the css class with the pseudoClass\n\t                if(this.nativePseudoclassStyles !== undefined) {\n\t                    styleMapStyle.nativePseudoclassStyles[selector] = pseudoClassCss\n\t                }\n\t\n\t                style.nativePseudoclassesWritten[selector] = true\n\t            }\n\t        }\n\t    }\n\t})\n\t\n\t\n\t// private\n\t\n\t\n\t// a map of pseudoclass names and how they are emulated with javascript\n\t// each pseudoclass sets up the following functions:\n\t    // check - a function that checks if that pseudoclass currently applies to the component when its called\n\t    // setup - calls a callback when the pseudoClass starts and stops applying\n\t        // should return an object that will be passed to the kill function (as its 'state' parameter)\n\t    // kill - cleans up anything set up in the 'setup' function\n\t    // processParameter - takes the pseudoclass parameter and returns some object representing it that will be used by the setup and check functions\n\tvar jsRenderedPseduoclasses = {\n\t    hover: {\n\t        emulated: true,\n\t        check: function(component) {\n\t            var nodes = document.querySelectorAll( \":hover\" )\n\t            for(var n=0; n<nodes.length; n++) {\n\t                if(nodes[n] === component.domNode) {\n\t                    return true\n\t                }\n\t            }\n\t            return false\n\t        },\n\t        setup: function(component, startCallback, endCallback) {\n\t            component.on(\"mouseover\", function() {\n\t                startCallback()\n\t            })\n\t            component.on(\"mouseout\", endCallback)\n\t\n\t            return {start: startCallback, end: endCallback}\n\t        },\n\t        kill: function(component, state) {\n\t            component.off(\"mouseover\", state.start)\n\t            component.off(\"mouseout\", state.end)\n\t        }\n\t    },\n\t    checked: {\n\t        emulated: true,\n\t        check: function(component) {\n\t            if(component.domNode.nodeName !== 'INPUT' && component.domNode.nodeName !== 'OPTION') {\n\t                console.warn(\"The pseudoclass 'checked' can only apply to 'input' nodes (Button, CheckBox, RadioButton, or TextField) or 'option' nodes (Option)\")\n\t                return false\n\t            }\n\t            return component.selected\n\t        },\n\t        setup: function(component, startCallback, endCallback) {\n\t            var setupState = {}\n\t            component.on(\"change\", setupState.listener = function() {\n\t                if(component.selected) {\n\t                    startCallback()\n\t                } else {\n\t                    endCallback()\n\t                }\n\t            })\n\t\n\t            return setupState\n\t        },\n\t        kill: function(component, state) {\n\t            component.removeListener(\"change\", state.listener)\n\t        }\n\t    },\n\t    required: {\n\t        emulated: true,\n\t        check: function(component) {\n\t            if(component.domNode.nodeName !== 'INPUT') {\n\t                console.warn(\"The pseudoclass 'required' can only apply to 'input' nodes (Button, CheckBox, RadioButton, or TextField)\")\n\t                return false\n\t            }\n\t            return component.attr('required') !== undefined\n\t        },\n\t        setup: function(component, startCallback, endCallback) {\n\t            var observer = new MutationObserver(function() {\n\t                if(component.attr('required') !== undefined) {\n\t                    startCallback()\n\t                } else {\n\t                    endCallback()\n\t                }\n\t            })\n\t\n\t            observer.observe(component.domNode, {attributes: true})\n\t\n\t            return {observer: observer}\n\t        },\n\t        kill: function(component, state) {\n\t            state.observer.disconnect()\n\t        }\n\t    },\n\t    'last-child': {\n\t        emulated: true,\n\t        check: function(component) {\n\t            return nthLastChildCheck(component, '1')\n\t        },\n\t        setup: function(component, startCallback, endCallback) {\n\t            var observer = new MutationObserver(function() {\n\t                if(nthLastChildCheck(component, '1')) {\n\t                    startCallback()\n\t                } else {\n\t                    endCallback()\n\t                }\n\t            })\n\t\n\t            var setupObserver = function() {\n\t                // note that since this uses the component parent rather than domNode.parentNode, this won't work for components added to non-component nodes (and there's no good way to do it, because you would have to poll for parent changes)\n\t                observer.observe(component.parent.domNode, {childList: true})\n\t            }\n\t\n\t            if(component.parent !== undefined) {\n\t                setupObserver()\n\t            }\n\t\n\t            component.on('newParent', function() {\n\t                setupObserver()\n\t            })\n\t            component.on('parentRemoved', function() {\n\t                observer.disconnect()\n\t            })\n\t\n\t            return {observer: observer}\n\t        },\n\t        kill: function(component, state) {\n\t            state.observer.disconnect()\n\t        }\n\t    },\n\t    'nth-child': {\n\t        emulated: true,\n\t        parameterTransform: function(parameter) {\n\t            var parts = parseNthChildParameter(parameter)\n\t            if(parts.variable === 0) {\n\t                return parts.constant+''\n\t            } else if(parts.constant === 0) {\n\t                return parts.variable+'n'\n\t            } else {\n\t                return parts.variable+'n+'+parts.constant\n\t            }\n\t        },\n\t\n\t        check: function(component, parameterCheck) {\n\t            return nthChildCheck(component, parameterCheck)\n\t        },\n\t        setup: function(component, startCallback, endCallback, parameterCheck) {\n\t\n\t            var checkAndCallCallbacks = function() {\n\t                if(nthChildCheck(component, parameterCheck)) {\n\t                    startCallback()\n\t                } else {\n\t                    endCallback()\n\t                }\n\t            }\n\t\n\t            var observer = new MutationObserver(function() {\n\t                checkAndCallCallbacks()\n\t            })\n\t\n\t            var setupObserver = function() {\n\t                // note that since this uses the component parent rather than domNode.parentNode, this won't work for components added to non-component nodes (and there's no good way to do it, because you would have to poll for parent changes)\n\t                observer.observe(component.parent.domNode, {childList: true})\n\t            }\n\t\n\t            if(component.parent !== undefined) {\n\t                setupObserver()\n\t            }\n\t\n\t            component.on('newParent', function() {\n\t                setupObserver()\n\t                checkAndCallCallbacks()\n\t            })\n\t            component.on('parentRemoved', function() {\n\t                observer.disconnect()\n\t                checkAndCallCallbacks()\n\t            })\n\t\n\t            return {observer: observer}\n\t        },\n\t        kill: function(component, state) {\n\t            state.observer.disconnect()\n\t        },\n\t\n\t        // returns a function that takes an index and tell you if that index applies to the nthChildParameter\n\t        processParameter: function(parameter) {\n\t            var parts = parseNthChildParameter(parameter)\n\t            if(parts.variable === 0) {\n\t                return function(index) {\n\t                    return index+1 === parts.constant\n\t                }\n\t            } else {\n\t                return function(index) {\n\t                    return ((index+1-parts.constant)/parts.variable) % 1 === 0\n\t                }\n\t            }\n\t        }\n\t    },\n\t\n\t    // not's parameter is a statement consisting of pseudoclasses separated either by : or ,\n\t    // $$not(pseudoclass1&pseudoclass2,psuedoclass3) translates to the css :not(:pseudoclass1:pseudoclass2,:psuedoclass3)\n\t    not: {\n\t        emulated: true,\n\t        parameterTransform: function(parameter) {\n\t            var orParts = parameter.split(',')\n\t            return orParts.map(function(part) {\n\t                var andParts = part.split(':')\n\t                return andParts.map(function(part) {\n\t                    var parts = getPseudoClassParts(part)\n\t                    var mappedName = mapCamelCase(parts.class)\n\t                    if(parts.parameter !== undefined) {\n\t                        return mappedName+'('+parts.parameter+')'\n\t                    } else {\n\t                        return mappedName\n\t                    }\n\t                }).join(':')\n\t            }).join(',')\n\t        },\n\t\n\t        check: function(component, parameterCheck) {\n\t            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n\t        },\n\t        setup: function(component, startCallback, endCallback, parameterCheck) {\n\t            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n\t        },\n\t        kill: function(component, state) {\n\t            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n\t        },\n\t\n\t        // returns a function that takes an index and tell you if that index applies to the nthChildParameter\n\t        processParameter: function(parameter) {\n\t            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n\t        }\n\t    }\n\t}\n\t\n\t// name is the name of the new pseudoclass\n\t// options is an object with the members:\n\t    // check(component) - returns true if the pseudoclass applies to the component\n\t    // setup(component, startCallback, endCallback, parameter) - a function that should call startCallback when the pseudoclass starts applying, and endCallback when it stops applying\n\t        // parameter - the parameter passed to the pseudoclass (e.g. in :not(:first-child), \":first-child\" is the parameter)\n\t    // kill - a function that cleans up any event listeners or anything else set up in the 'setup' function\n\t    // processParameter - a function that processes the pseudoclass parameter and returns some object the 'setup' function will get as its 4th argument\n\t        // if this is undefined, the pseudoclass will throw an exception for styles that have a parameter for it\n\t    // emulated - if true, it means that there is a corresponding native pseudoclass that can be used if the style can be rendered with pure css\n\tmodule.exports.addPseudoClass = function(name, options) {\n\t    var mappedName = mapCamelCase(name)\n\t    if(jsRenderedPseduoclasses[mappedName] !== undefined) {\n\t        var nameForError = '\"'+mappedName+'\"'\n\t        if(mappedName !== name) {\n\t            nameForError+= \" (mapped from '\"+name+\"')\"\n\t        }\n\t        throw new Error(\"The pseudoclass \"+nameForError+\" is already defined.\")\n\t    }\n\t    // else\n\t    jsRenderedPseduoclasses[mappedName] = options\n\t}\n\t\n\t\n\tfunction nthChildCheck(component, testFn) {\n\t    if(component.domNode.parentNode === null)\n\t        return false\n\t\n\t    var children = component.domNode.parentNode.children                    // must be domNode.parentNode, because child nodes may not be Components\n\t    var index = Array.prototype.indexOf.call(children, component.domNode)\n\t    return testFn(index)\n\t}\n\t\n\tfunction nthLastChildCheck(component, parameter) {\n\t    if(component.domNode.parentNode === null)\n\t        return false\n\t\n\t    var children = component.domNode.parentNode.children                    // must be domNode.parentNode, because child nodes may not be Components\n\t    var index = children.length - parseInt(parameter)\n\t    return children[index] === component.domNode\n\t}\n\t\n\tvar nthChildParameter = new RegExp(\n\t    '^' // begin\n\t        +'('\n\t            +'('\n\t                +'(-?\\\\d*)'        // constant\n\t                +'(([+-]\\\\d*)n?)?' // first-order term\n\t            +')|'\n\t            +'('\n\t                +'(-?\\\\d)*n?' // first-order term first\n\t                +'([+-]\\\\d*)?' // then constant\n\t            +')'\n\t        +')'\n\t    +'$' // the EYND\n\t)\n\t\n\t// returns the variable and constnat parts of the parameter\n\tfunction parseNthChildParameter(parameter) {\n\t    var parts = parameter.replace(/\\s/g, '').match(nthChildParameter)\n\t    if(parts === null)\n\t        throw new Error(\"nth-child parameter '\"+parameter+\"' isn't valid\")\n\t\n\t    if(parts[2] !== undefined) {\n\t        var constant = parts[3]\n\t        var variable = parts[5]\n\t    } else {\n\t        var constant = parts[8]\n\t        var variable = parts[7]\n\t    }\n\t\n\t\n\t\n\t    if(constant === undefined) constant = 0\n\t    else                       constant = parseInt(constant)\n\t    if(variable === undefined) variable = 0\n\t    else                       variable = parseInt(variable)\n\t\n\t    return {variable: variable, constant: constant}\n\t}\n\t\n\t\n\t// maps a style value to a css value\n\t// style values that are numbers are mapped to strings, usually with px postfix\n\tfunction cssValue(cssStyleName, value) {\n\t    // If a number was passed in, add 'px' to the (except for certain CSS properties) [also taken from jquery's code]\n\t    if(typeof(value) === \"number\" && cssNumber[cssStyleName] === undefined) {\n\t        return value+\"px\"\n\t    } else {\n\t        return value.toString()\n\t    }\n\t}\n\t\n\tvar pseudoClassRegex = new RegExp( // /^([^(]*)(\\((.*)\\))?$/\n\t    \"([^(]*)\"        // anything that's not an open paren\n\t    +\"(\\\\((.*)\\\\))?\" // optionally some arbitrary string inside parens\n\t    +\"$\"             // THE EYND!\n\t)\n\t\n\t// pulls apart the pseudoclass name from its (optional) parameter\n\t// e.g. pulls out 'nth-child' and '2+3n' from 'nth-child(2+3n)'\n\tfunction getPseudoClassParts(fullPsuedoClass) {\n\t    var x = fullPsuedoClass.match(pseudoClassRegex)\n\t    if(x === null) throw new Error(\"Pseudoclass '\"+fullPsuedoClass+\"' is invalid\")\n\t    return {class: x[1], parameter: x[3]}\n\t}\n\t\n\t\n\t// taken from jquery's code\n\tvar cssNumber = {\n\t    \"column-count\": 1,\n\t    \"fill-opacity\": 1,\n\t    \"flex-grow\": 1,\n\t    \"flex-shrink\": 1,\n\t    \"font-weight\": 1,\n\t    \"line-height\": 1,\n\t    \"opacity\": 1,\n\t    \"order\": 1,\n\t    \"orphans\": 1,\n\t    \"widows\": 1,\n\t    \"z-index\": 1,\n\t    \"zoom\": 1\n\t}\n\t\n\tfunction isStyleObject(o) {\n\t    return o !== undefined && o.componentStyleMap !== undefined\n\t}\n\t\n\t\n\t//var asciiA = 'A'.charCodeAt(0), asciiZ = 'Z'.charCodeAt(0), difference = 'a'.charCodeAt(0) - asciiA\n\tfunction mapCamelCase(cssStyleName) {\n\t    return cssStyleName.replace(/([A-Z])/g, function(match, submatch) {          // this is from jss\n\t        return '-' + submatch.toLowerCase();\n\t    })\n\t\n\t    /*for(var n=0; n<cssStyleName.length; n++) {\n\t        var ascii = cssStyleName.charCodeAt(n)\n\t        if(asciiA <= ascii && ascii <= asciiZ) { // found capital letter\n\t            cssStyleName = cssStyleName.slice(0, n) + '-'+String.fromCharCode(ascii+difference) + cssStyleName.slice(n+1)\n\t            n++ // increment a second time for the dash\n\t        }\n\t    }\n\t\n\t    return cssStyleName*/\n\t}\n\t\n\t// maps all the styles that are inherited by descendant nodes to their default values\n\t// source: http://stackoverflow.com/questions/5612302/which-css-styles-are-inherited\n\tvar defaultStyleValues = {\n\t    'azimuth': 'center',\n\t    'border-collapse': 'separate',\n\t    'border-spacing': '0',\n\t    'box-sizing': 'border-box',\n\t    'caption-side': 'top',\n\t    //'color': 'black',         // let this inherit\n\t    //'cursor': 'auto',         // let this one inherit - its weird otherwise\n\t    'direction': 'ltr',\n\t     display: 'inline-block', // changes the default display to inline-block\n\t    'elevation': '',\n\t    'empty-cells': 'show',\n\t    // 'font-family': '',       // let this inherit\n\t    // 'font-size': 'medium',   // let this inherit\n\t    //'font-style': 'normal',   // let this inherit\n\t    //'font-variant': 'normal', // let this inherit\n\t    //'font-weight': 'normal',  // let this inherit\n\t    'letter-spacing': 'normal',\n\t    'line-height': 'normal',\n\t    'list-style-image': 'none',\n\t    'list-style-position': 'outside',\n\t    'list-style-type': 'disc',\n\t    'orphans': '2',\n\t    'pitch-range': '',\n\t    'pitch': '',\n\t     position: 'relative', // changes the default positioning so that absolute is relative to its parent by default\n\t    'quotes': '',\n\t    'richness': '',\n\t    'speak-header': '',\n\t    'speak-numeral': '',\n\t    'speak-punctuation': '',\n\t    'speak': '',\n\t    'speak-rate': '',\n\t    'stress': '',\n\t    'text-align': 'left',\n\t    'text-indent': '0',\n\t    'text-transform': 'none',\n\t    //'visibility': 'visible',    // let this inherit - otherwise you just hide the container and not the contents\n\t    'voice-family': '',\n\t    'volume': '',\n\t    'white-space': 'normal',\n\t    'widows': '2',\n\t    'word-spacing': 'normal'\n\t}\n\t\n\tvar stylesThatInheritByDefault = {\n\t    'font-family':1, 'font-size':1, 'font-style':1, 'font-variant':1, 'font-weight':1, 'visibility':1, 'color':1, 'cursor':1\n\t}\n\t\n\t\n\t\n\t\n\t// returns index of the passed css classname, or undefined if sheet containing that class isn't found\n\tfunction cssClassSheetIndex(classname) {\n\t    var result = undefined\n\t\n\t    var styleNodes = document.querySelectorAll(\"style\")\n\t    for(var n=0; n<styleNodes.length; n++) {\n\t        var sheet = styleNodes[n].sheet\n\t        jssModule.defaultSheet = sheet\n\t\n\t        var defaultStyleMaybe = jssModule.get(classname)\n\t        if(Object.keys(defaultStyleMaybe).length > 0) {\n\t            result = n\n\t            break\n\t        }\n\t    }\n\t\n\t    jssModule.defaultSheet = undefined\n\t    return result\n\t}\n\t\n\t\n\tvar defaultJss = jssModule.forDocument(document) // must be created before the jss object (so that the styles there override the styles in the default sheet)\n\tvar jss = jssModule.forDocument(document)\n\t\n\tvar defaultClassSheetIndex = cssClassSheetIndex('.'+Style.defaultClassName)\n\tif(defaultClassSheetIndex === undefined) {\n\t    defaultJss.defaultSheet = defaultJss._createSheet() // create its sheet first (before the regular jss sheet)\n\t\n\t    jss.defaultSheet = jss._createSheet()\n\t} else {\n\t    // if the default styleclass *already* exists, it probably means that blocks.js is being loaded twice\n\t    console.log(\"Warning: the default-styles class name for blocks.js looks like its already in use. This probably means you have two versions of blocks.js loaded. If so, Gem.js will continue to work, but your app will be a bit bloated. If something other than block.js created that class, blocks.js may break that style.\")\n\t\n\t    var styleNodes = document.querySelectorAll(\"style\")\n\t    defaultJss.defaultSheet = styleNodes[defaultClassSheetIndex].sheet\n\t    jss.defaultSheet = styleNodes[defaultClassSheetIndex+1].sheet\n\t\n\t    // make sure the baseClassName isn't already taken\n\t    var dedupNumber = 0\n\t    while(true) {\n\t        var testBaseClassName = baseClassName+dedupNumber\n\t        if(cssClassSheetIndex('.'+testBaseClassName+dedupNumber+0) !== undefined) {\n\t            dedupNumber++\n\t        } else {\n\t            break;\n\t        }\n\t    }\n\t\n\t    baseClassName = testBaseClassName+dedupNumber\n\t}\n\t\n\tdefaultJss.set('.'+Style.defaultClassName, defaultStyleValues) // creates default css class in order to prevent inheritance\n\t\n\tdefaultJss.set('input', { // chrome and firefox user agent stylesheets mess with this otherwise\n\t    cursor: 'inherit'\n\t})\n\tdefaultJss.set('img', { // images should retain content-box sizing, since pixel perfect width on images is important so you avoid resizing the image\n\t    'box-sizing': 'content-box'\n\t})\n\t\n\t\n\t/*private*/ module.exports.isDev; // should be set by Gem\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\tvar Style = __webpack_require__(2)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t    //static properties\n\t\n\t    this.name = 'Canvas'\n\t\n\t    this.init = function(/*[label,] height, width*/) {\n\t        if(arguments.length === 2) {\n\t            var height = arguments[0]\n\t            var width = arguments[1]\n\t        } else {\n\t            var label = arguments[0]\n\t            var height = arguments[1]\n\t            var width = arguments[2]\n\t        }\n\t\n\t        this.domNode = document.createElement('canvas') // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\n\t        this.label = label\n\t        this.height = height\n\t        this.width = width\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t    }\n\t\n\t    // instance properties\n\t\n\t    Object.defineProperty(this, 'width', {\n\t        get: function() {\n\t            return this.domNode.width\n\t        }, set: function(v) {\n\t            this.domNode.width = v\n\t        }\n\t    })\n\t    Object.defineProperty(this, 'height', {\n\t        get: function() {\n\t            return this.domNode.height\n\t        }, set: function(v) {\n\t            this.domNode.height = v\n\t        }\n\t    })\n\t\n\t    this.context = function() {\n\t        return this.domNode.getContext.apply(this.domNode, arguments)\n\t    }\n\t\n\t    this.toImg = this.toDataURL = function() {\n\t        return this.domNode.toDataURL()\n\t    }\n\t});\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tvar domUtils = __webpack_require__(20)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t    this.name = 'Block'\n\t\n\t\n\t\t// instance properties\n\t\n\t    // NOTE: all the basic Gems override `init` instead of `build` so users don't have to call the build superclass constructor in their `build` constructors\n\t\tthis.init = function (/*[label,] content*/) {\n\t        if(typeof(arguments[0]) !== 'string' && arguments[0] !== undefined) {\n\t            var contentArgs = arguments\n\t        } else {\n\t            var label = arguments[0]\n\t            var contentArgs = Array.prototype.slice.call(arguments, 1)\n\t        }\n\t\n\t        this.children = [] // need children before calling add\n\t        this.domNode = domUtils.div() // need the domNode before setting the label\n\t\n\t        this.label = label\n\t\t\tif(contentArgs !== undefined)\n\t            this.add.apply(this,contentArgs)\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t})\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t    // static variables\n\t\n\t    this.name = 'Button'\n\t\n\t\n\t    // instance properties\n\t\n\t\tthis.init = function(/*[label,] text*/) {\n\t        if(arguments.length >= 2) {\n\t            var label = arguments[0]\n\t            var text = arguments[1]\n\t        } else {\n\t            var text = arguments[0]\n\t        }\n\t\n\t        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\n\t        this.label = label\n\t\t\tthis.attr('type','button')\n\t\t\tthis.text = text\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t    Object.defineProperty(this, 'text', {\n\t        get: function() {\n\t            return this.attr('value')\n\t        },\n\t        set: function(text) {\n\t            this.attr('value', text)\n\t        }\n\t    })\n\t\n\t})\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\t// static variables\n\t    this.name = 'CheckBox'\n\t\n\t\t// instance methods\n\t\tthis.init = function(label) {\n\t        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        this.label = label\n\t\t\tthis.attr('type','checkbox')\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t    Object.defineProperty(this, 'selected', {\n\t        // returns whether or not the checkbox is checked\n\t        get: function() {\n\t            return this.domNode.checked\n\t        },\n\t        // sets the value of the checkbox to the passed value (true for checked)\n\t        set: function(checked) {\n\t            var newValue = checked === true\n\t            var curValue = this.domNode.checked\n\t            if(curValue === newValue) return;  // do nothing if nothing's changing\n\t\n\t            this.domNode.checked = newValue\n\t            this.emit('change') // the browser has no listenable event that is triggered on change of the 'checked' property\n\t        }\n\t    })\n\t})\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t    //static properties\n\t\n\t    this.name = 'Image'\n\t\n\t    this.init = function(/*[label,] imageSource*/) {\n\t        if(arguments.length === 1) {\n\t            var imageSource = arguments[0]\n\t        } else {\n\t            var label = arguments[0]\n\t            var imageSource = arguments[1]\n\t        }\n\t\n\t        this.domNode = document.createElement('img') // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        this.label = label\n\t        if(imageSource !==  undefined) this.src = imageSource\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t    }\n\t\n\t    // instance properties\n\t\n\t    Object.defineProperty(this, 'src', {\n\t        get: function() {\n\t            return this.domNode.src\n\t        }, set: function(v) {\n\t            this.domNode.src = v\n\t        }\n\t    })\n\t});\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(29)\n\t\n\tvar Gem = __webpack_require__(1)\n\tvar Style = __webpack_require__(2)\n\t\n\tvar Item = __webpack_require__(22);\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t\tthis.Item = Item\n\t\n\t    this.name = 'List'\n\t\n\t\t// instance properties\n\t\n\t\tthis.init = function(/*[label,] [ordered,] listInit*/) {\n\t\t\tif(arguments[0] instanceof Array) {\n\t            var listInit = arguments[0]\n\t        } else {\n\t            if(arguments[1] instanceof Array) {\n\t                var listInit = arguments[1]\n\t            } else if(arguments[2] instanceof Array) {\n\t                var listInit = arguments[2]\n\t            }\n\t\n\t            if(typeof(arguments[0]) === 'boolean') {\n\t                var ordered = arguments[0]\n\t            } else {\n\t                if(typeof(arguments[1]) === 'boolean') {\n\t                    var ordered = arguments[1]\n\t                } else {\n\t                    var ordered = false // default\n\t                }\n\t\n\t                if(typeof(arguments[0]) === 'string') {\n\t                    var label = arguments[0]\n\t                }\n\t            }\n\t        }\n\t\n\t        if(ordered) {\n\t            var type = 'ol'\n\t        } else {\n\t            var type = 'ul'\n\t            this.defaultStyle = Style({\n\t                listStyleType: 'decimal'\n\t            })\n\t        }\n\t\n\t\n\t        this.domNode = document.createElement(type) // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        this.label = label\n\t\n\t        this.children = [] // need children before calling add\n\t        if(listInit !== undefined) {\n\t            for(var n=0; n<listInit.length; n++) {\n\t                this.item(listInit[n])\n\t            }\n\t        }\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t\tthis.item = function() {\n\t\t\tvar item = Item.apply(this, arguments)\n\t        this.add(item)\n\t        return item\n\t\t}\n\t});\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(29)\n\tvar EventEmitter = __webpack_require__(27).EventEmitter\n\t\n\tvar Gem = __webpack_require__(1)\n\t\n\tvar randomStart = getRandomInt(0,999999) // a random number used to start off the numbers given to radio button names (using a random number in case there are somehow two different instances of blocks.js on the page)\n\t\n\t// A group of radio buttons\n\tmodule.exports = proto(EventEmitter, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t    this.name = 'Radio'\n\t\n\t\t// instance properties\n\t\n\t\n\t    // required - If true, a radio button must always be selected. Otherwise, radio buttons can be deselected by clicking on them.\n\t\tthis.init = function(required) {\n\t        //this.selected\n\t        this.required = required === true || required === undefined\n\t        this.buttons = {} // maps values to the buttons that have each value\n\t        this.randomStart = randomStart++\n\t\t}\n\t\n\t    // returns a new radio button\n\t    this.button = function(/*[label,] value*/) {\n\t        if(arguments.length >= 2) {\n\t            var label = arguments[0]\n\t            var value = arguments[1]\n\t        } else {\n\t            var value = arguments[0]\n\t        }\n\t\n\t        if(this.buttons[value] !== undefined) {\n\t            throw new Error(\"Can't give a RadioButton the same value as another in the group (value: '\"+value+\"')\")\n\t        }\n\t\n\t        var button = RadioButton(this, label, value, \"_radioblock\"+this.randomStart)\n\t        this.buttons[value] = button\n\t\n\t        if(this.required && this._selected === undefined) {\n\t            button.selected = true\n\t        }\n\t\n\t        return button\n\t    }\n\t\n\t    // returns the RadioButton in the group that's selected (or undefined if none are selected)\n\t    Object.defineProperty(this, 'selected', {\n\t        get: function() {\n\t            return this._selected\n\t        },\n\t        set: function() {\n\t            throw new Error(\"Can't set selected on a Radio object\")\n\t        }\n\t    })\n\t\n\t    Object.defineProperty(this, 'val', {\n\t        // returns the value of the selected radio button in the group (undefined if none are selected)\n\t        get: function() {\n\t            var selected = this._selected\n\t            if(selected === undefined) return undefined\n\t            // else\n\t            return selected.attr('value')\n\t        },\n\t\n\t        // sets the value of the checkbox to the passed value (true for checked)\n\t        // throws an exception if none of the radio buttons have that value\n\t        // throws an exception if an unset is attempted for a required Radio set\n\t        set: function(value) {\n\t            if(value === undefined) {\n\t                var selected = this._selected\n\t                if(selected !== undefined) {\n\t                    selected.selected = false\n\t                }\n\t            } else {\n\t                var button = this.buttons[value]\n\t                if(button === undefined) throw new Error(\"There is no RadioButton in the group with the value: '\"+value+\"'\")\n\t\n\t                button.selected = true\n\t            }\n\t        }\n\t    })\n\t\n\t\n\t    // arguments can be one of the following:\n\t        // RadioButton, RadioButton, RadioButton, ...\n\t        // value, value, value, ... - each value is the value of the RadioButton to remove\n\t        // arrayOfRadioButtons\n\t        // arrayOfValues\n\t    this.remove = function() {\n\t        if(arguments[0] instanceof Array) {\n\t            var removals = arguments[0]\n\t        } else {\n\t            var removals = arguments\n\t        }\n\t\n\t        for(var n=0; n<removals.length; n++) {\n\t            var r = removals[n]\n\t\n\t            if(r instanceof RadioButton) {\n\t                var button = r\n\t                var value = r.val\n\t\n\t                if(this.buttons[value] !== r) {\n\t                    throw new Error(\"The button passed at index \"+n+\" is not part of the group.\")\n\t                }\n\t            } else {\n\t                var button = this.buttons[r]\n\t                var value = r\n\t\n\t                if(button === undefined) {\n\t                    throw new Error(\"There is no RadioButton in the group with the value: '\"+value+\"'\")\n\t                }\n\t            }\n\t\n\t            var originalSelected = this.selected\n\t            if(this.selected === button) {\n\t                this._selected = undefined\n\t            }\n\t\n\t            this.buttons[value].group = undefined // fully remove it from the group\n\t            delete this.buttons[value]\n\t        }\n\t\n\t        if(this.required && this.selected === undefined) {\n\t            for(var v in this.buttons) {\n\t                this.buttons[v].selected = true // just select the first one\n\t                break; // yes this doesn't loop\n\t            }\n\t        } else if(originalSelected !== this.selected) {\n\t            this.emit('change')\n\t        }\n\t    }\n\t\n\t})\n\t\n\tvar RadioButton = proto(Gem, function(superclass) {\n\t    this.name = 'RadioButton'\n\t\n\t    this.init = function(radioGroup, label, value, name) {\n\t        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        superclass.init.call(this) // superclass constructor\n\t\n\t        this.label = label\n\t        this.group = radioGroup\n\t\n\t        this.attr('type', 'radio')\n\t        this.attr('name', name) // the name is needed so that using tab to move through page elements can tab between different radio groups\n\t        this.val = value\n\t\n\t        var that = this\n\t\t\tthis.on(\"mousedown\",function(event) {\n\t            event.preventDefault()           // this needs to be here otherwise the radio button can't be changed\n\t\n\t\t\t\tif(that.group.required) {\n\t                if(that.selected === false) {\n\t                    that.selected = true\n\t                }\n\t            } else {\n\t                that.selected = !that.selected // toggle\n\t            }\n\t\t\t})\n\t        this.on(\"click\",function(event) {\n\t            event.preventDefault()         // this needs to be here otherwise the radio button can't be *unset*\n\t        })\n\t        this.on(\"keydown\",function(event) {\n\t            if(event.keyCode === 40 || event.keyCode === 39) { // down or right\n\t                event.preventDefault()         // this needs to be here otherwise the radio button strangely calls the click handler which causes things to mess up\n\t                that.selectNext()\n\t            } else if(event.keyCode === 38 || event.keyCode === 37) { // up or left\n\t                event.preventDefault()         // this needs to be here otherwise the radio button strangely calls the click handler which causes things to mess up\n\t                that.selectPrevious()\n\t            }\n\t        })\n\t    }\n\t\n\t    Object.defineProperty(this, 'val', {\n\t        // returns the value attribute of the checkbox\n\t        get: function() {\n\t            return this.attr('value')\n\t        },\n\t\n\t        // sets the value attribute of the checkbox\n\t        set: function(value) {\n\t            if(this.group.buttons[value] !== undefined) {\n\t                throw new Error(\"Can't give a RadioButton the same value as another in the group (value: '\"+value+\"')\")\n\t            }\n\t\n\t            var oldValue = this.val\n\t            this.attr('value', value)\n\t            if(oldValue !== undefined) delete this.group.buttons[oldValue]\n\t            this.group.buttons[value] = this\n\t        }\n\t    })\n\t\n\t\n\t    Object.defineProperty(this, 'selected', {\n\t        // returns whether or not the checkbox is checked\n\t        get: function() {\n\t            return this.domNode.checked\n\t        },\n\t\n\t        // sets the selected state of the checkbox to the passed value (true for checked)\n\t        set: function(value) {\n\t            var booleanValue = value === true\n\t            if(this.selected === value) return; // ignore if there's no change\n\t\n\t            if(booleanValue) {\n\t                var previouslySelected = this.group.selected\n\t                setButtonInGroup(this.group, this)\n\t                if(previouslySelected !== undefined)\n\t                    previouslySelected.emit('change')\n\t            } else {\n\t                if(this.group.required) throw new Error(\"Can't unset this Radio set, a value is required.\")\n\t                this.domNode.checked = false\n\t                this.group._selected = undefined\n\t            }\n\t            this.emit('change') // the browser has no listenable event that is triggered on change of the 'checked' property\n\t            this.group.emit('change')\n\t        }\n\t    })\n\t\n\t    this.selectNext = function() {\n\t        selectSibling(this,1)\n\t    }\n\t    this.selectPrevious = function() {\n\t        selectSibling(this,-1)\n\t    }\n\t\n\t})\n\t\n\t// direction can be +1 or -1\n\tfunction selectSibling(button, direction) {\n\t    var buttons = button.group.buttons\n\t    var values = Object.keys(buttons)\n\t    var index = values.indexOf(button.attr('value'))\n\t    if(direction === 1 && index === values.length-1) {\n\t        var buttonToSelect = buttons[values[0]]\n\t    } else if(direction === -1 && index === 0) {\n\t        var buttonToSelect = buttons[values[values.length-1]]\n\t\n\t    } else {\n\t        var buttonToSelect = buttons[values[index+direction]]\n\t    }\n\t\n\t    buttonToSelect.selected = true\n\t    buttonToSelect.focus()\n\t}\n\t\n\tfunction setButtonInGroup(group, button) {\n\t    var selected = group._selected\n\t    if(selected !== undefined) selected.domNode.checked = false\n\t    button.domNode.checked = true\n\t    group._selected = button\n\t}\n\t\n\tfunction getRandomInt(min, max) {\n\t  return Math.floor(Math.random() * (max - min)) + min;\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tvar Option = __webpack_require__(23)\n\t\n\t// emits a 'change' event when its 'val' changes\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static variables\n\t\n\t    this.name = 'Select'\n\t\n\t    this.Option = Option\n\t\n\t\tthis.init = function(/*[label,] options*/) {\n\t        if(arguments[0] instanceof Object) {\n\t            var options = arguments[0]\n\t        } else {\n\t            var label = arguments[0]\n\t            var options = arguments[1]\n\t        }\n\t\n\t        this.domNode = document.createElement(\"select\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        this.label = label\n\t\n\t        this.children = [] // need children before calling add\n\t        this.options = {}\n\t\t\tfor(var value in options) {\n\t\t\t\tthis.option(value, options[value])\n\t\t\t}\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t\n\t\t// instance methods\n\t\n\t    Object.defineProperty(this, 'val', {\n\t        // returns the value that is selected\n\t        get: function() {\n\t            for(var value in this.options) {\n\t                if(this.options[value].selected) {\n\t                    return this.options[value].val\n\t                }\n\t            }\n\t        },\n\t\n\t        set: function(value) {\n\t            var option = this.options[value]\n\t            if(option === undefined || option.val !== value) throw new Error(\"There is no Option in the Select with the value: '\"+value+\"'\")\n\t            option.selected = true\n\t        }\n\t    })\n\t\t\n\t\tthis.option = function(/*[label,] value,text*/) {\n\t        if(arguments.length === 2) {\n\t            var value = arguments[0]\n\t            var text = arguments[1]\n\t        } else if(arguments.length === 3) {\n\t            var label = arguments[0]\n\t            var value = arguments[1]\n\t            var text = arguments[2]\n\t        } else {\n\t            throw new Error(\"Invalid number of arguments\")\n\t        }\n\t\n\t        var newOption = Option(label, value,text)\n\t        this.add(newOption)\n\t\n\t        return newOption\n\t\n\t\t}\n\t\n\t    // same interface as Gem.addAt\n\t    /*override*/ this.addAt = function(index/*, nodes...*/) {\n\t        var that = this\n\t\n\t        var nodesToAdd = Gem.normalizeAddAtArguments.apply(this, arguments)\n\t\n\t        // validation first\n\t        nodesToAdd.forEach(function(option) {\n\t            if(that.options[option.val] !== undefined) {\n\t                throw new Error(\"Can't give an Option the same value as another in the Select (value: '\"+option.val+\"')\")\n\t            }\n\t        })\n\t\n\t        superclass.addAt.call(this, index, nodesToAdd)\n\t\n\t        // Select specific state modifications - this must be done after the superclass call in case an error is thrown from it\n\t        var anyWereSelected = false\n\t        nodesToAdd.forEach(function(option) {\n\t            if(option.selected) anyWereSelected = true\n\t            that.options[option.val] = option\n\t\n\t            // set up Select events\n\t            // todo: remove events when the Option is removed\n\t\n\t            option.on(\"mousedown\",function(event) {\n\t                option.parent.val = option.val      // select this one\n\t            })\n\t        })\n\t\n\t        if(anyWereSelected) {\n\t            this.emit('change')\n\t        }\n\t    }\n\t\n\t    // same interface as Gem.remove\n\t    /*override*/ this.remove = function() {\n\t        var that = this\n\t\n\t        var removalIndexes = Gem.normalizeRemoveArguments.apply(this, arguments)\n\t        var removals = removalIndexes.map(function(index) {\n\t            return that.children[index]\n\t        })\n\t\n\t        superclass.remove.call(this, removalIndexes)\n\t\n\t        // Select specific state modifications - this must be done after the superclass call in case an error is thrown from it\n\t        var theSelectedWasRemoved = false\n\t        removals.forEach(function(option) {\n\t            if(option.selected) theSelectedWasRemoved = true\n\t            delete that.options[option.val]\n\t        })\n\t\n\t        if(theSelectedWasRemoved) {\n\t            //this.children[0].selected = true // I think the browser does this automatically??\n\t            this.emit('change')\n\t        }\n\t    }\n\t\n\t\n\t    // private\n\t\n\t    this.prepareForValueChange = function(values) {\n\t        var value = values[0]\n\t\n\t        for(var optionValue in this.options) {\n\t            if(optionValue !== value) {\n\t                var option = this.options[optionValue]\n\t                if(option.selected === true) {\n\t                    option.setSelectedQuiet(false)\n\t                }\n\t            }\n\t        }\n\t    }\n\t})\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(29)\r\n\tvar Gem = __webpack_require__(1)\r\n\t\r\n\tmodule.exports = proto(Gem, function(superclass) {\r\n\t\t// static variables\r\n\t    this.name = 'Svg'\r\n\t\r\n\t\t// instance methods\r\n\t\tthis.init = function(/*[label,] svgXml*/) {\r\n\t        if(arguments.length === 1) {\r\n\t            var svgXml = arguments[0]\r\n\t        } else {\r\n\t            var label = arguments[0]\r\n\t            var svgXml = arguments[1]\r\n\t        }\r\n\t\r\n\t        var div = document.createElement('div')\r\n\t        div.innerHTML = svgXml\r\n\t        this.domNode = div.firstChild\r\n\t\r\n\t        this.label = label\r\n\t\r\n\t        superclass.init.call(this)\r\n\t\t}\r\n\t})\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(29)\n\t\n\tvar Gem = __webpack_require__(1)\n\tvar Style = __webpack_require__(2)\n\t\n\tvar Header = __webpack_require__(24);\n\tvar Row = __webpack_require__(25);\n\tvar Cell = __webpack_require__(26);\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t    this.name = 'Table'\n\t\n\t    this.defaultStyle = Style({\n\t        borderSpacing: 0\n\t    })\n\t\n\t    this.Row = Row\n\t\tthis.Header = Header\n\t    this.Cell = Cell\n\t\n\t\n\t\t// instance properties\n\t\n\t\tthis.init = function(/*[label,] tableInit*/) {\n\t\t\tif(arguments[0] instanceof Array) {\n\t            var tableInit = arguments[0]\n\t        } else {\n\t            var label = arguments[0]\n\t            var tableInit = arguments[1]\n\t        }\n\t\n\t        this.domNode = document.createElement(\"table\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        this.label = label\n\t\n\t        this.children = [] // need children before calling add\n\t        if(tableInit !== undefined) {\n\t            for(var n=0; n<tableInit.length; n++) {\n\t                this.row(tableInit[n])\n\t            }\n\t        }\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\t\n\t\tthis.header = function(/*[]label,] listOfBlocksOrText*/) {\n\t        return headerOrRegularRow(this, Header, arguments)\n\t\t}\n\t\n\t\tthis.row = function() {\n\t\t\treturn headerOrRegularRow(this, Row, arguments)\n\t\t}\n\t});\n\t\n\tfunction headerOrRegularRow(that, Prototype, args) {\n\t    var row = Prototype.apply(undefined, args)\n\t    that.add(row)\n\t    return row\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static variables\n\t\n\t    this.name = 'TextArea'\n\t\n\t\tthis.init = function(label) {\n\t        this.domNode = document.createElement(\"textarea\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t        this.label = label\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t\n\t\t// instance properties\n\t\n\t\n\t    Object.defineProperty(this, 'val', {\n\t        // returns the value of the Option\n\t        get: function() {\n\t            return this.domNode.value\n\t        },\n\t\n\t        // sets the value of the Option\n\t        set: function(value) {\n\t            if(this.val === value) return; // do nothing if there's no change\n\t\n\t            this.domNode.value = value\n\t            this.emit('change')\n\t        }\n\t    })\n\t});\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\t\n\tvar domUtils = __webpack_require__(20)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t    this.name = 'TextField'\n\t\n\t\tthis.init = function(/*[label,] password*/) {\n\t        if(arguments.length === 1) {\n\t            var password = arguments[0]\n\t        } else if(arguments.length > 1) {\n\t            var label = arguments[0]\n\t            var password = arguments[1]\n\t        }\n\t\n\t        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\n\t\t\tthis.label = label\n\t\t\t//domUtils.setAttribute(this.domNode,'type','text');  // NOTE: IE fucks this up, and since 'text' is the default type for an input node, lets just forget abat it\n\t        if(password)\n\t\t\t    this.attr('type','password')\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t\n\t\t// instance properties\n\t\n\t    Object.defineProperty(this, 'val', {\n\t        // returns the value of the Option\n\t        get: function() {\n\t            return this.domNode.value\n\t        },\n\t\n\t        // sets the value of the Option\n\t        set: function(value) {\n\t            if(this.val === value) return; // do nothing if there's no change\n\t\n\t            this.domNode.value = value\n\t            this.emit('change')\n\t        }\n\t    })\n\t\n\t});\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(29)\n\t\n\tvar Gem = __webpack_require__(1)\n\tvar Style = __webpack_require__(2)\n\t\n\tvar domUtils = __webpack_require__(20)\n\t\n\t\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t    //static properties\n\t\n\t    this.name = 'Text'\n\t\n\t    this.defaultStyle = Style({\n\t        whiteSpace: 'pre-wrap' // so whitespace is displayed (e.g. multiple spaces don't collapse)\n\t    })\n\t\n\t    this.init = function(/*[label,] text*/) {\n\t        if(arguments.length === 1) {\n\t            var text = arguments[0]\n\t        } else {\n\t            var label = arguments[0]\n\t            var text = arguments[1]\n\t        }\n\t\n\t        if (text === undefined) text = ''\n\t\n\t        this.domNode = domUtils.div() // need the domNode before setting the label\n\t\n\t        this.label = label\n\t        this.text = text\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t    }\n\t\n\t    // instance properties\n\t\n\t    Object.defineProperty(this, 'text', {\n\t        get: function() {\n\t            return this.domNode[domUtils.textProperty]\n\t        }, set: function(v) {\n\t             this.domNode[domUtils.textProperty] = v\n\t        }\n\t    })\n\t});\n\t\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * JSS v0.6 - JavaScript Stylesheets\n\t * https://github.com/Box9/jss\n\t *\n\t * Copyright (c) 2011, David Tang\n\t * MIT Licensed (http://www.opensource.org/licenses/mit-license.php)\n\t */\n\tvar jss = (function() {\n\t    var adjSelAttrRegex = /((?:\\.|#)[^\\.\\s#]+)((?:\\.|#)[^\\.\\s#]+)/g;\n\t    var doubleColonPseudoElRegex = /(::)(before|after|first-line|first-letter|selection)/;\n\t    var singleColonPseudoElRegex = /([^:])(:)(before|after|first-line|first-letter|selection)/;\n\t    var singleColonForPseudoElements; // flag for older browsers\n\t\n\t    function getSelectorsAndRules(sheet) {\n\t        var rules = sheet.cssRules || sheet.rules || [];\n\t        var results = {};\n\t        for (var i = 0; i < rules.length; i++) {\n\t            // Older browsers and FF report pseudo element selectors in an outdated format\n\t            var selectorText = toDoubleColonPseudoElements(rules[i].selectorText);\n\t            if (!results[selectorText]) {\n\t                results[selectorText] = [];\n\t            }\n\t            results[selectorText].push({\n\t                sheet: sheet,\n\t                index: i,\n\t                style: rules[i].style\n\t            });\n\t        }\n\t        return results;\n\t    }\n\t\n\t    function getRules(sheet, selector) {\n\t        var rules = sheet.cssRules || sheet.rules || [];\n\t        var results = [];\n\t        // Browsers report selectors in lowercase\n\t        selector = selector.toLowerCase();\n\t        for (var i = 0; i < rules.length; i++) {\n\t            var selectorText = rules[i].selectorText;\n\t            // Note - certain rules (e.g. @rules) don't have selectorText\n\t            if (selectorText && (selectorText == selector || selectorText == swapAdjSelAttr(selector) || selectorText == swapPseudoElSyntax(selector))) {\n\t                results.push({\n\t                    sheet: sheet,\n\t                    index: i,\n\t                    style: rules[i].style\n\t                });\n\t            }\n\t        }\n\t        return results;\n\t    }\n\t\n\t    function addRule(sheet, selector) {\n\t        var rules = sheet.cssRules || sheet.rules || [];\n\t        var index = rules.length;\n\t        var pseudoElementRule = addPseudoElementRule(sheet, selector, rules, index);\n\t\n\t        if (!pseudoElementRule) {\n\t            addRuleToSheet(sheet, selector, index);\n\t        }\n\t\n\t        return {\n\t            sheet: sheet,\n\t            index: index,\n\t            style: rules[index].style\n\t        };\n\t    };\n\t\n\t    function addRuleToSheet(sheet, selector, index) {\n\t        if (sheet.insertRule) {\n\t            sheet.insertRule(selector + ' { }', index);\n\t        } else {\n\t            sheet.addRule(selector, null, index);\n\t        }\n\t    }\n\t\n\t    // Handles single colon syntax for older browsers and bugzilla.mozilla.org/show_bug.cgi?id=949651\n\t    function addPseudoElementRule(sheet, selector, rules, index) {\n\t        var doubleColonSelector;\n\t        var singleColonSelector;\n\t\n\t        if (doubleColonPseudoElRegex.exec(selector)) {\n\t            doubleColonSelector = selector;\n\t            singleColonSelector = toSingleColonPseudoElements(selector);\n\t        } else if (singleColonPseudoElRegex.exec(selector)) {\n\t            doubleColonSelector = toDoubleColonPseudoElements(selector);\n\t            singleColonSelector = selector;\n\t        } else {\n\t            return false; // Not dealing with a pseudo element\n\t        }\n\t\n\t        if (!singleColonForPseudoElements) {\n\t            // Assume modern browser and then check if successful\n\t            addRuleToSheet(sheet, doubleColonSelector, index);\n\t            if (rules.length <= index) {\n\t                singleColonForPseudoElements = true;\n\t            }\n\t        }\n\t        if (singleColonForPseudoElements) {\n\t            addRuleToSheet(sheet, singleColonSelector, index);\n\t        }\n\t\n\t        return true;\n\t    }\n\t\n\t    function toDoubleColonPseudoElements(selector) {\n\t        return selector.replace(singleColonPseudoElRegex, function (match, submatch1, submatch2, submatch3) {\n\t            return submatch1 + '::' + submatch3;\n\t        });\n\t    }\n\t\n\t    function toSingleColonPseudoElements(selector) {\n\t        return selector.replace(doubleColonPseudoElRegex, function(match, submatch1, submatch2) {\n\t            return ':' + submatch2;\n\t        })\n\t    }\n\t\n\t    function removeRule(rule) {\n\t        var sheet = rule.sheet;\n\t        if (sheet.deleteRule) {\n\t            sheet.deleteRule(rule.index);\n\t        } else if (sheet.removeRule) {\n\t            sheet.removeRule(rule.index);\n\t        }\n\t    }\n\t\n\t    function extend(dest, src) {\n\t        for (var key in src) {\n\t            if (!src.hasOwnProperty(key))\n\t                continue;\n\t            dest[key] = src[key];\n\t        }\n\t        return dest;\n\t    }\n\t\n\t    function aggregateStyles(rules) {\n\t        var aggregate = {};\n\t        for (var i = 0; i < rules.length; i++) {\n\t            extend(aggregate, declaredProperties(rules[i].style));\n\t        }\n\t        return aggregate;\n\t    }\n\t\n\t    function declaredProperties(style) {\n\t        var declared = {};\n\t        for (var i = 0; i < style.length; i++) {\n\t            declared[style[i]] = style[toCamelCase(style[i])];\n\t        }\n\t        return declared;\n\t    }\n\t\n\t    // IE9 stores rules with attributes (classes or ID's) adjacent in the opposite order as defined\n\t    // causing them to not be found, so this method swaps [#|.]sel1[#|.]sel2 to become [#|.]sel2[#|.]sel1\n\t    function swapAdjSelAttr(selector) {\n\t        var swap = '';\n\t        var lastIndex = 0;\n\t\n\t        while ((match = adjSelAttrRegex.exec(selector)) != null) {\n\t            if (match[0] === '')\n\t                break;\n\t            swap += selector.substring(lastIndex, match.index);\n\t            swap += selector.substr(match.index + match[1].length, match[2].length);\n\t            swap += selector.substr(match.index, match[1].length);\n\t            lastIndex = match.index + match[0].length;\n\t        }\n\t        swap += selector.substr(lastIndex);\n\t\n\t        return swap;\n\t    };\n\t\n\t    // FF and older browsers store rules with pseudo elements using single-colon syntax\n\t    function swapPseudoElSyntax(selector) {\n\t        if (doubleColonPseudoElRegex.exec(selector)) {\n\t            return toSingleColonPseudoElements(selector);\n\t        }\n\t        return selector;\n\t    }\n\t\n\t    function setStyleProperties(rule, properties) {\n\t        for (var key in properties) {\n\t            var value = properties[key];\n\t            var importantIndex = value.indexOf(' !important');\n\t\n\t            // Modern browsers seem to handle overrides fine, but IE9 doesn't\n\t            rule.style.removeProperty(key);\n\t            if (importantIndex > 0) {\n\t                rule.style.setProperty(key, value.substr(0, importantIndex), 'important');\n\t            } else {\n\t                rule.style.setProperty(key, value);\n\t            }\n\t        }\n\t    }\n\t\n\t    function toCamelCase(str) {\n\t        return str.replace(/-([a-z])/g, function (match, submatch) {\n\t            return submatch.toUpperCase();\n\t        });\n\t    }\n\t\n\t    function transformCamelCasedPropertyNames(oldProps) {\n\t        var newProps = {};\n\t        for (var key in oldProps) {\n\t            newProps[unCamelCase(key)] = oldProps[key];\n\t        }\n\t        return newProps;\n\t    }\n\t\n\t    function unCamelCase(str) {\n\t        return str.replace(/([A-Z])/g, function(match, submatch) {\n\t            return '-' + submatch.toLowerCase();\n\t        });\n\t    }\n\t\n\t    var Jss = function(doc) {\n\t        this.doc = doc;\n\t        this.head = this.doc.head || this.doc.getElementsByTagName('head')[0];\n\t        this.sheets = this.doc.styleSheets || [];\n\t    };\n\t\n\t    Jss.prototype = {\n\t        // Returns JSS rules (selector is optional)\n\t        get: function(selector) {\n\t            if (!this.defaultSheet) {\n\t                return {};\n\t            }\n\t            if (selector) {\n\t                return aggregateStyles(getRules(this.defaultSheet, selector));\n\t            }\n\t            var rules = getSelectorsAndRules(this.defaultSheet);\n\t            for (selector in rules) {\n\t                rules[selector] = aggregateStyles(rules[selector]);\n\t            }\n\t            return rules;\n\t        },\n\t        // Returns all rules (selector is required)\n\t        getAll: function(selector) {\n\t            var properties = {};\n\t            for (var i = 0; i < this.sheets.length; i++) {\n\t                extend(properties, aggregateStyles(getRules(this.sheets[i], selector)));\n\t            }\n\t            return properties;\n\t        },\n\t        // Adds JSS rules for the selector based on the given properties\n\t        set: function(selector, properties) {\n\t            if (!this.defaultSheet) {\n\t                this.defaultSheet = this._createSheet();\n\t            }\n\t            properties = transformCamelCasedPropertyNames(properties);\n\t            var rules = getRules(this.defaultSheet, selector);\n\t            if (!rules.length) {\n\t                rules = [addRule(this.defaultSheet, selector)];\n\t            }\n\t            for (var i = 0; i < rules.length; i++) {\n\t                setStyleProperties(rules[i], properties);\n\t            }\n\t        },\n\t        // Removes JSS rules (selector is optional)\n\t        remove: function(selector) {\n\t            if (!this.defaultSheet)\n\t                return;\n\t            if (!selector) {\n\t                this._removeSheet(this.defaultSheet);\n\t                delete this.defaultSheet;\n\t                return;\n\t            }\n\t            var rules = getRules(this.defaultSheet, selector);\n\t            for (var i = 0; i < rules.length; i++) {\n\t                removeRule(rules[i]);\n\t            }\n\t            return rules.length;\n\t        },\n\t        _createSheet: function() {\n\t            var styleNode = this.doc.createElement('style');\n\t            styleNode.type = 'text/css';\n\t            styleNode.rel = 'stylesheet';\n\t            this.head.appendChild(styleNode);\n\t            return styleNode.sheet;\n\t        },\n\t        _removeSheet: function(sheet) {\n\t            var node = sheet.ownerNode;\n\t            node.parentNode.removeChild(node);\n\t        }\n\t    };\n\t\n\t    var exports = new Jss(document);\n\t    exports.forDocument = function(doc) {\n\t        return new Jss(doc);\n\t    };\n\t    return exports;\n\t})();\n\t\n\ttypeof module !== 'undefined' && module.exports && (module.exports = jss); // CommonJS support\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// utilities needed by the configuration (excludes dependencies the configs don't need so the webpack bundle is lean)\n\t\n\t//require('hashmap') // here to mark hashmapMerge's dependency on this module\n\tvar path = __webpack_require__(33)\n\t\n\t\n\t// Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n\t// any number of objects can be passed into the function and will be merged into the first argument in order\n\t// returns obj1 (now mutated)\n\tvar merge = exports.merge = function(obj1, obj2/*, moreObjects...*/){\n\t    return mergeInternal(arrayify(arguments), false)\n\t}\n\t\n\t// like merge, but traverses the whole object tree\n\t// the result is undefined for objects with circular references\n\tvar deepMerge = exports.deepMerge = function(obj1, obj2/*, moreObjects...*/) {\n\t    return mergeInternal(arrayify(arguments), true)\n\t}\n\t\n\t// merges two hashmaps together just like merge does for regular objects\n\t// non-deep merge\n\texports.hashmapMerge = function(obj1, obj2/*, moreObjects...*/) {\n\t    obj2.forEach(function(value, key) {\n\t        obj1.set(key, obj2.get(key))\n\t    })\n\t\n\t    if(arguments.length > 2) {\n\t        var newObjects = [obj1].concat(Array.prototype.slice.call(arguments, 2))\n\t        return exports.hashmapMerge.apply(this, newObjects)\n\t    } else {\n\t        return obj1\n\t    }\n\t}\n\t\n\t// returns a new object where properties of b are merged onto a (a's properties may be overwritten)\n\texports.objectConjunction = function(a, b) {\n\t    var objectCopy = {}\n\t    merge(objectCopy, a)\n\t    merge(objectCopy, b)\n\t    return objectCopy\n\t}\n\t\n\t// turns an array of values into a an object where those values are all keys that point to 'true'\n\texports.arrayToMap = function(array) {\n\t    var result = {}\n\t    array.forEach(function(v) {\n\t        result[v] = true\n\t    })\n\t    return result\n\t}\n\t\n\tfunction mergeInternal(objects, deep) {\n\t    var obj1 = objects[0]\n\t    var obj2 = objects[1]\n\t\n\t    for(var key in obj2){\n\t       //if(Object.hasOwnProperty.call(obj2, key)) {\n\t            if(deep && obj1[key] instanceof Object && obj2[key] instanceof Object) {\n\t                mergeInternal([obj1[key], obj2[key]], true)\n\t            } else {\n\t                obj1[key] = obj2[key]\n\t            }\n\t       //}\n\t    }\n\t\n\t    if(objects.length > 2) {\n\t        var newObjects = [obj1].concat(objects.slice(2))\n\t        return mergeInternal(newObjects, deep)\n\t    } else {\n\t        return obj1\n\t    }\n\t}\n\t\n\t\n\tfunction arrayify(a) {\n\t    return Array.prototype.slice.call(a, 0)\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// some functionality that is needed by Gem.js but is related to styling (some things are also needed by Style.js)\n\t\n\tvar HashMap = __webpack_require__(30)\n\t\n\tvar Style = __webpack_require__(2)\n\tvar utils = __webpack_require__(17)\n\t\n\tvar defaultStyleMap = new HashMap() // maps from a proto class to its computed default style\n\tvar computedStyles = new HashMap() // stores a map from styleMap components, to the combined style map\n\t\n\t\n\t// gets the right style from the styleMap, depending on the gem's `name` and `label` (`label` styles take precedence)\n\t// takes the component's inheritance tree into account (relies on the gem.constructor.parent property)\n\tvar getStyleMapEntryForGem = exports.getStyleForComponent = function (styleMap, gem) {\n\t    if(styleMap === undefined)\n\t        return undefined\n\t\n\t    return getStyleForLabel(styleMap, gem) || getStyleForGemName(styleMap, gem)\n\t}\n\t\n\tvar getStyleForLabel = exports.getStyleForLabel = function(styleMap, gem) {\n\t    if(gem.label !== undefined && '$'+gem.label in styleMap) {\n\t        return styleMap['$'+gem.label]\n\t    }\n\t}\n\tvar getStyleForGemName = exports.getStyleForBlockName = function(styleMap, gem) {\n\t    var constructor = gem.constructor\n\t    while(constructor !== undefined) {\n\t        var style = styleMap[constructor.name]\n\t        if(style !== undefined) {\n\t            return style\n\t        } else {\n\t            constructor = constructor.parent\n\t        }\n\t    }\n\t}\n\t\n\t// gets the possibly inheriting style from the styleMap for `gem`\n\t// gem - the gem to get the style for\n\t// ancestor - the gem to get the computedStyleMap from\n\tvar getInheritingStyle = exports.getInheritingStyle = function(gem) {\n\t    var ancestor = gem.parent\n\t    if(ancestor === undefined || ancestor.computedStyleMap === undefined) return undefined\n\t\n\t    if(gem.label !== undefined) {\n\t        var styleMapKey = '$'+gem.label\n\t        var nextContructor = gem.constructor\n\t    } else {\n\t        var styleMapKey = gem.constructor.name\n\t        var nextContructor = gem.constructor.parent\n\t    }\n\t\n\t    var nextAncestorToSearchFrom = ancestor\n\t    var styles = [], inherit = true\n\t    while(nextAncestorToSearchFrom !== undefined) {    // find styles from the most specific name to the least specific\n\t        var stylesForKey = findStylesForStyleMapKey(nextAncestorToSearchFrom, styleMapKey)\n\t        styles = styles.concat(stylesForKey.styles)\n\t        nextAncestorToSearchFrom = stylesForKey.nextAncestorToSearchFrom\n\t        inherit = stylesForKey.inherit\n\t\n\t        if(nextContructor === undefined || !inherit) {\n\t            break\n\t        } else {\n\t            if(styleMapKey === 'Gem') {\n\t                break // we're done - no need to check anything higher in the prototype chain than Gem\n\t            }\n\t\n\t            styleMapKey = nextContructor.name\n\t            nextContructor = nextContructor.parent\n\t        }\n\t    }\n\t\n\t    var reversedStyles = styles.reverse() // reverse so later styles override earlier styles\n\t    var styleToReturn = reversedStyles[0]\n\t    for(var n=1; n<reversedStyles.length; n++) {\n\t        styleToReturn = styleToReturn.mix(reversedStyles[n], false)\n\t    }\n\t\n\t    return styleToReturn\n\t\n\t\n\t    function findStylesForStyleMapKey(startAncestor, key) {\n\t        var styles = [], inherit = true\n\t        var curAncestor = startAncestor, nextAncestorToSearchFrom = startAncestor\n\t        while(curAncestor !== undefined) {                                // find styles from the closest parent to the farthest\n\t            if(curAncestor.computedStyleMap !== undefined) {\n\t                var style = curAncestor.computedStyleMap[key]\n\t            }\n\t            if(style !== undefined) {\n\t                if(styles.indexOf(style) === -1) {\n\t                    styles.push(style)\n\t                }\n\t                nextAncestorToSearchFrom = curAncestor\n\t\n\t                inherit = style.inherit\n\t                if(!inherit) {\n\t                    break\n\t                }\n\t            }\n\t\n\t            curAncestor = curAncestor.parent\n\t        }\n\t\n\t        return {styles:styles, nextAncestorToSearchFrom: nextAncestorToSearchFrom, inherit:inherit}\n\t    }\n\t}\n\t\n\t// returns the conjunction of two style maps\n\t// gets it from the computedStyles cache if its already in there\n\tvar styleMapConjunction = exports.styleMapConjunction = function (secondaryStyleMap, primaryStyleMap) {\n\t    if(secondaryStyleMap === undefined) return primaryStyleMap\n\t    if(primaryStyleMap === undefined) return secondaryStyleMap\n\t\n\t    var cachedStyleMap = computedStyles.get([secondaryStyleMap, primaryStyleMap])\n\t    if(cachedStyleMap === undefined) {\n\t        if(secondaryStyleMap  === undefined) {\n\t            cachedStyleMap = primaryStyleMap\n\t        } else if(primaryStyleMap === undefined) {\n\t            cachedStyleMap = secondaryStyleMap\n\t        } else {\n\t            var overridingProperties = {}, atLeastOne = false\n\t            for(var key in primaryStyleMap) {\n\t                if(secondaryStyleMap[key] !== primaryStyleMap[key]) {\n\t                    overridingProperties[key] = primaryStyleMap[key]\n\t                    atLeastOne = true\n\t                }\n\t            }\n\t\n\t            if(atLeastOne) {\n\t                cachedStyleMap = utils.objectConjunction(secondaryStyleMap, overridingProperties)\n\t            } else { // the styleMaps are different objects, but contain the same thing\n\t                cachedStyleMap = secondaryStyleMap\n\t            }\n\t        }\n\t\n\t        if(cachedStyleMap === undefined) cachedStyleMap = false // switch it out with false so it can be recognized\n\t        computedStyles.set([secondaryStyleMap, primaryStyleMap], cachedStyleMap)\n\t    }\n\t\n\t    if(cachedStyleMap === false) {\n\t        return undefined\n\t    }\n\t    return cachedStyleMap\n\t}\n\t\n\t\n\t\n\texports.getDefaultStyle = function(gem)  {\n\t    // attempt to get from the cache\n\t    var defaultGemStyle = defaultStyleMap.get(gem.constructor)\n\t    if(defaultGemStyle === undefined) {\n\t        defaultGemStyle = createDefaultGemStyle(gem)\n\t        if(defaultGemStyle === undefined) defaultGemStyle = false\n\t        defaultStyleMap.set(gem.constructor, defaultGemStyle)\n\t    }\n\t\n\t    if(defaultGemStyle === false) {\n\t        return undefined\n\t    }\n\t    return defaultGemStyle\n\t}\n\t\n\t// returns a new style with style b mixed into style a (works even if they're both undefined)\n\tvar mixStyles = exports.mixStyles = function(a,b) {\n\t    if(a === undefined)\n\t        return b\n\t    else\n\t        return a.mix(b, false)\n\t}\n\t\n\t\n\t\n\t\n\t\n\t// sets the currentStyle of a gem and makes all the appropriate changes to render a new active style for the gem and its children\n\texports.setCurrentStyle = function(gem, newCurrentStyle, defaultStyle) {\n\t\n\t    var current$state = gem._currentStyle === undefined? undefined: gem._currentStyle.stateHandler\n\t    var newCurrentStyle$state = newCurrentStyle === undefined? undefined: newCurrentStyle.stateHandler\n\t    if(current$state !== newCurrentStyle$state) {     // if the $state function remains the same, we don't gotta do nothin (about switching state functions at least)\n\t        if(gem._stateChangeHandler !== undefined) {  // remove the old handler if necessary\n\t            gem.state.removeListener('change', gem._stateChangeHandler)\n\t            gem._stateChangeHandler = undefined\n\t        }\n\t\n\t        if(newCurrentStyle$state !== undefined) {     // add a new handler if necessary\n\t            gem.state.on('change', gem._stateChangeHandler = function() {\n\t                var rawStateStyle = getStateStyle(gem._currentStyle, gem.state.subject)\n\t                setMixedStateStyle(gem, mixStyles(gem._currentStyle, rawStateStyle))\n\t            })\n\t        }\n\t    }\n\t\n\t    gem._currentStyle = newCurrentStyle\n\t    var rawStateStyle = getStateStyle(newCurrentStyle, gem.state.subject)\n\t\n\t    var newMixedStateStyle = mixStyles(newCurrentStyle, rawStateStyle)\n\t    setMixedStateStyle(gem, newMixedStateStyle, defaultStyle)\n\t}\n\t\n\t\n\t// handles reseting a gem's active style when its state style changes\n\t// renders the pseudoclass style\n\tfunction setMixedStateStyle(gem, mixedStateStyle, defaultStyle) {\n\t    var psuedoclassState = {}\n\t\n\t    // if a pseudoclass can no longer apply, undo its setup\n\t    for(var pseudoClass in gem._styleSetupInfo) {\n\t        if(mixedStateStyle === undefined || !(pseudoClass in mixedStateStyle.pseudoclasses.emulatedInfo)) {\n\t            var setupInfo = gem._styleSetupInfo[pseudoClass]\n\t            setupInfo.kill(gem, setupInfo.state)\n\t            delete gem._styleSetupInfo[pseudoClass]\n\t        }\n\t    }\n\t\n\t    // setup new pseudoclasses\n\t    if(mixedStateStyle !== undefined) {\n\t        for(var pseudoClass in mixedStateStyle.pseudoclasses.emulatedInfo) {\n\t            if(!(pseudoClass in gem._styleSetupInfo)) {                     // if this exact pseudoclass is already setup, no need to do anything\n\t                ;(function(pseudoClass, emulationInfo){   // close over those variables (so they keep the value they had when the function was setup)\n\t                    var setupState = emulationInfo.fns.setup(gem, function() { // start\n\t                        var changed = psuedoclassState[pseudoClass] !== true\n\t                        if(changed) {\n\t                            psuedoclassState[pseudoClass] = true\n\t                            changeStyleIfNecessary()\n\t                        }\n\t                    }, function() { // end\n\t                        var changed = psuedoclassState[pseudoClass] !== false\n\t                        if(changed) {\n\t                            psuedoclassState[pseudoClass] = false\n\t                            changeStyleIfNecessary()\n\t                        }\n\t                    }, emulationInfo.parameter)\n\t\n\t                    gem._styleSetupInfo[pseudoClass] = {state: setupState, kill: emulationInfo.fns.kill}\n\t\n\t                })(pseudoClass, mixedStateStyle.pseudoclasses.emulatedInfo[pseudoClass])\n\t            }\n\t        }\n\t    }\n\t\n\t    // build up the pseudoclass state - depending on what pseudoclasses might become applicable\n\t    if(mixedStateStyle !== undefined) {\n\t        for(var pseudoclassKey in mixedStateStyle.pseudoclasses.emulatedInfo) {\n\t            var info = mixedStateStyle.pseudoclasses.emulatedInfo[pseudoclassKey]\n\t            psuedoclassState[pseudoclassKey] = info.fns.check(gem, info.parameter)\n\t        }\n\t    }\n\t\n\t    // set current pseudoclass style\n\t    changeStyleIfNecessary()\n\t\n\t\n\t    function changeStyleIfNecessary() {\n\t        var pseudoclassStyleInfo = getPseudoclassStyleFor(mixedStateStyle, psuedoclassState)\n\t//        if(pseudoclassStyleInfo.style !== undefined && pseudoclassStyleInfo.style.inherit) {\n\t//            pseudoclassStyleInfo.style = getInheritingStyle(gem).mix(pseudoclassStyleInfo.style, false)\n\t//        }\n\t\n\t        var newPreStyleMapStyle = mixStyles(mixedStateStyle, pseudoclassStyleInfo.style)\n\t        setPreStyleMapStyle(gem, newPreStyleMapStyle, pseudoclassStyleInfo.index, defaultStyle)\n\t    }\n\t}\n\t\n\t// sets the style before being modified by the gem's parent's computedStyleMap\n\t// handles removing the state listener and calling $kill on the old activeStyle\n\tfunction setPreStyleMapStyle(gem, newPreStyleMapStyle, jsRenderedPseudoclassIndex, defaultStyle) {\n\t    if(gem.parent !== undefined && newPreStyleMapStyle !== undefined)\n\t        var newComputedStyleMap = styleMapConjunction(gem.parent.computedStyleMap, newPreStyleMapStyle.componentStyleMap)\n\t    else if(gem.parent !== undefined)\n\t        var newComputedStyleMap = gem.parent.computedStyleMap\n\t    else if(newPreStyleMapStyle !== undefined)\n\t        var newComputedStyleMap = newPreStyleMapStyle.componentStyleMap\n\t    else\n\t        var newComputedStyleMap = undefined\n\t\n\t    var newActiveStyle = undefined // can be changed below\n\t    var cancel = false\n\t    if(newPreStyleMapStyle !== undefined) {\n\t        if(gem.parent !== undefined) var nativePseudoclassMap = gem.parent._nativePseudoclassMap\n\t        else                           var nativePseudoclassMap = {}\n\t\n\t        var nativePseudoclassSelectorMap = getStyleMapEntryForGem(nativePseudoclassMap, gem)\n\t        var nativeCssInfo = newPreStyleMapStyle.createNativeCssInfo(gem, newComputedStyleMap, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle)\n\t\n\t        if(nativeCssInfo.cancel) {\n\t            cancel = true\n\t            setMixedStateStyle(gem, nativeCssInfo.retryStyle)\n\t\n\t        } else {\n\t            newActiveStyle = nativeCssInfo.style\n\t            newComputedStyleMap = nativeCssInfo.styleMap // even newer!\n\t            gem._nativePseudoclassMap = nativeCssInfo.nativePseudoclassMap\n\t        }\n\t    }\n\t\n\t    if(!cancel) {\n\t        setActiveStyle(gem, newActiveStyle, newComputedStyleMap)\n\t    }\n\t}\n\t\n\t// sets the active style on the gem and on the gem's children\n\t// also sets the gem's new computedStyleMap\n\tfunction setActiveStyle(gem, newActiveStyle, newComputedStyleMap) {\n\t    var activeStyleChanged = newActiveStyle !== gem._activeStyle\n\t    var computedStyleMapChanged = gem.computedStyleMap !== newComputedStyleMap\n\t\n\t    if(activeStyleChanged) {\n\t        setStyleClass(gem, newActiveStyle)\n\t\n\t        var curActiveStyle$setup = gem._activeStyle === undefined? undefined: gem._activeStyle.setup\n\t        var newActiveStyle$setup = newActiveStyle === undefined? undefined: newActiveStyle.setup\n\t        if(curActiveStyle$setup !== newActiveStyle$setup) {\n\t            applyStyleKillFunction(gem)\n\t            applyStyleSetupFunction(gem, newActiveStyle)\n\t        }\n\t\n\t        gem._activeStyle = newActiveStyle\n\t    }\n\t\n\t\n\t    gem.computedStyleMap = newComputedStyleMap\n\t\n\t    // propogate styles to children\n\t    gem.children.forEach(function(child) {\n\t        if(computedStyleMapChanged || !child.attached) {\n\t            setAttachStatus(child, true)\n\t            child.style = child.style  // force a re-render on each child\n\t        }\n\t    })\n\t}\n\t\n\tvar setAttachStatus = exports.setAttachStatus = function(node, attached) {\n\t    node.attached = attached\n\t    if(attached) {\n\t        node.emit('attach')\n\t    } else {\n\t        node.emit('detach')\n\t        node.children.forEach(function(child) {\n\t            setAttachStatus(child, false)\n\t        })\n\t    }\n\t}\n\t\n\t\n\t// given a style and an object representing some state, returns the state given by the style's $state function\n\t// returns undefined if it doesn't have a state function\n\t// handles caching state styles (an optimization)\n\tfunction getStateStyle(currentStyle, stateParameter) {\n\t    if(currentStyle === undefined || currentStyle.stateHandler === undefined) return undefined\n\t\n\t    var returnedStyle = currentStyle.stateHandler(stateParameter)\n\t\n\t    // todo: figure out if this style has been returned before, and if so, use the already-generated style (mostly so that that style can take advantage of other cached combinations)\n\t\n\t    return returnedStyle\n\t}\n\t\n\t// returns an object with the properties:\n\t    // style - the jsRendered pseudoclass style for the gem's relevant pseudoclass state\n\t    // index - the index of the pseudoclass (jsRenderedPseudoclassIndex)\n\t// returns undefined if no emulated pseudoclass style applies or if only native pseudoclass stylings apply\n\t// state - an object that will be mutated with the current state for each pseudoclass\n\tfunction getPseudoclassStyleFor(style, state) {\n\t    if(style === undefined) return {index:0}\n\t\n\t    var index = 0, result={index:0}\n\t    style.pseudoclasses.classes.forEach(function(psuedoclassStyle, compoundKey) {\n\t        if(!psuedoclassStyle.pureNative) {\n\t            for(var j=0; j<compoundKey.length; j++) {\n\t                var pseudoclass = compoundKey[j]\n\t                if(!state[pseudoclass]) {\n\t                    break;\n\t                }\n\t            }\n\t\n\t            if(j === compoundKey.length) {\n\t                result = {index: index, style: psuedoclassStyle}\n\t            }\n\t        }\n\t\n\t        index++\n\t    })\n\t\n\t    return result\n\t}\n\t\n\t\n\t\n\t// finds the default style for a gem, mixes it with the appropriate ancestor styles, and returns the result\n\tfunction createDefaultGemStyle(that) {\n\t    if(that.defaultStyle !== undefined) {\n\t        var defaultStyle = getStyleObject(that.defaultStyle)\n\t    }\n\t\n\t    // get list of default styles\n\t    var defaultStyles = []\n\t    var nextConstructor = that.constructor\n\t    while(nextConstructor !== undefined) {\n\t        if(nextConstructor.defaultStyle !== undefined) {\n\t            defaultStyles.push(nextConstructor.defaultStyle)\n\t        }\n\t        nextConstructor = nextConstructor.parent\n\t    }\n\t\n\t    // generate merged default style\n\t    var reversedDefaults = defaultStyles.reverse()\n\t    var mergedDefaultStyle = reversedDefaults[0]\n\t    for(var n=1; n<reversedDefaults.length; n++) {\n\t        mergedDefaultStyle = mergedDefaultStyle.mix(reversedDefaults[n], false)\n\t    }\n\t\n\t    return mergedDefaultStyle\n\t}\n\t\n\t\n\t// applies setup appropriately\n\tfunction applyStyleSetupFunction(component, style) {\n\t    if(style !== undefined && style.setup !== undefined) {\n\t        component._styleSetupObject = style.setup(component, style) // call setup on the component\n\t    } else {\n\t        component._styleSetupObject = undefined\n\t    }\n\t}\n\t// applies kill appropriately\n\tfunction applyStyleKillFunction(component) {\n\t    var activeStyle = component._activeStyle\n\t    if(activeStyle !== undefined && activeStyle.setup !== undefined) {\n\t        if(activeStyle.kill === undefined)\n\t            throw new Error('style has been unset but does not have a \"kill\" function to undo its \"setup\" function')\n\t\n\t        activeStyle.kill(component, component._styleSetupObject)\n\t    }\n\t}\n\t\n\t\n\t// sets the style, replacing one if one already exists\n\tfunction setStyleClass(component, style) {\n\t    var activeStyle = component._activeStyle\n\t\n\t    //var newStyle = component.domNode.className\n\t    if(activeStyle !== undefined) {\n\t        component.domNode.classList.remove(activeStyle.className)\n\t        // newStyle = newStyle.replace(new RegExp(\" ?\\\\b\"+activeStyle.className+\"\\\\b\"),'') // remove the previous css class\n\t    }\n\t    if(style !== undefined) {\n\t        component.domNode.classList.add(style.className)\n\t        //newStyle = style.className+' '+newStyle.trim() // note that the order of classes doesn't matter\n\t    }\n\t\n\t    //component.domNode.className = newStyle\n\t}\n\t\n\tvar styleObjectMap = new HashMap // maps javascript object styles to Style objects\n\tvar getStyleObject = exports.getStyleObject = function(style) {\n\t    if(isStyleObject(style)) {\n\t        return style\n\t    } else {\n\t        var styleObject = styleObjectMap.get(style)\n\t        if(styleObject) {\n\t            return styleObject\n\t        } else {\n\t            var styleObject = Style(style)\n\t            styleObjectMap.set(style,styleObject)\n\t            return styleObject\n\t        }\n\t    }\n\t}\n\t\n\t// if you load two different instances of gems, its necessary to do a bit of duck typing\n\tvar isStyleObject = exports.isStyleObject = function (x) {\n\t    return x.className !== undefined && x.componentStyleMap !== undefined && x.mix !== undefined\n\t}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar EventEmitter = __webpack_require__(27).EventEmitter\n\tvar proto = __webpack_require__(29)\n\tvar utils = __webpack_require__(17)\n\tvar devFlag = __webpack_require__(21)\n\t\n\tmodule.exports = proto(EventEmitter, function(superclass) {\n\t\n\t    this.init = function() {\n\t        superclass.apply(this, arguments)\n\t\n\t        this.ifonHandlers = {}\n\t        this.ifoffHandlers = {}\n\t        this.ifonAllHandlers = []\n\t        this.ifoffAllHandlers = []\n\t    }\n\t\n\t    // callback will be triggered immediately if there is already a listener attached, or\n\t    // callback will be triggered when the first listener for the event is added\n\t    // (regardless of whether its done through on or once)\n\t    // parameters can be:\n\t        // event, callback - attach an ifon handler for the passed event\n\t        // callback - attach an ifon handler for all events\n\t    this.ifon = function(event, callback) {\n\t        if(event instanceof Function) {     // event not passed, only a callback\n\t            callback = event // fix the argument\n\t            for(var eventName in this._events) {\n\t                if(this.listeners(eventName).length > 0) {\n\t                    callback(eventName)\n\t                }\n\t            }\n\t        } else if(this.listeners(event).length > 0) {\n\t            callback(event)\n\t        }\n\t\n\t        addHandlerToList(this, 'ifonHandlers', event, callback)\n\t    }\n\t\n\t    // removes either:\n\t        // removeIfon() - all ifon handlers (if no arguments are passed), or\n\t        // removeIfon(event) - all ifon handlers for the passed event, or\n\t        // removeIfon(callback) - the passed ifon-all handler (if the first parameter is the callback)\n\t        // removeIfon(event, callback) - the specific passed callback for the passed event\n\t    this.removeIfon = function(event, callback) {\n\t        removeFromHandlerList(this, 'ifonHandlers', event, callback)\n\t    }\n\t\n\t    // callback will be triggered when the last listener for the 'click' event is removed (will not trigger immediately if there is no event listeners on call of ifoff)\n\t    // (regardless of whether this is done through removeListener or as a result of 'once' being fulfilled)\n\t    // parameters can be:\n\t        // event, callback - attach an ifoff handler for the passed event\n\t        // callback - attach an ifoff handler for all events\n\t    this.ifoff = function(event, callback) {\n\t        addHandlerToList(this, 'ifoffHandlers', event, callback)\n\t    }\n\t\n\t    // removes either:\n\t        // removeIfoff() - all ifoff handlers (if no arguments are passed), or\n\t        // removeIfoff(event) - all ifoff handlers for the passed event, or\n\t        // removeIfoff(callback) - the passed ifoff-all handler (if the first parameter is the callback)\n\t        // removeIfoff(event, callback) - the specific passed callback for the passed event\n\t    this.removeIfoff = function(event, callback) {\n\t        removeFromHandlerList(this, 'ifoffHandlers', event, callback)\n\t    }\n\t\n\t    // emitter is the emitter to proxy handler binding to\n\t    // options can have one of the following properties:\n\t        // only - an array of events to proxy\n\t        // except - an array of events to *not* proxy\n\t    this.proxy = function(emitter, options) {\n\t        if(options === undefined) options = {}\n\t        if(options.except !== undefined) {\n\t            var except = utils.arrayToMap(options.except)\n\t            var handleIt = function(event){return !(event in except)}\n\t        } else if(options.only !== undefined) {\n\t            var only = utils.arrayToMap(options.only)\n\t            var handleIt = function(event){return event in only}\n\t        } else {\n\t            var handleIt = function(){return true}\n\t        }\n\t\n\t        if(devFlag.dev) {\n\t            var trace = getTrace()\n\t        }\n\t\n\t        var that = this, handler;\n\t        this.ifon(function(event) {\n\t            if(handleIt(event)) {\n\t                emitter.on(event, handler = function() {\n\t                    trace; // force this to be in scope\n\t                    that.emit.apply(that, [event].concat(Array.prototype.slice.call(arguments)))\n\t                })\n\t            }\n\t        })\n\t        this.ifoff(function(event) {\n\t            if(handleIt(event))\n\t                emitter.off(event, handler)\n\t        })\n\t    }\n\t\n\t    /*override*/ this.on = this.addListener = function(event, callback) {\n\t        var triggerIfOn = this.listeners(event).length === 0\n\t        superclass.prototype.on.apply(this,arguments)\n\t        if(triggerIfOn) triggerIfHandlers(this, 'ifonHandlers', event)\n\t    }\n\t\n\t    /*override*/ this.off = this.removeListener = function(event, callback) {\n\t        var triggerIfOff = this.listeners(event).length === 1\n\t        superclass.prototype.removeListener.apply(this,arguments)\n\t        if(triggerIfOff) triggerIfHandlers(this, 'ifoffHandlers', event)\n\t    }\n\t    /*override*/ this.removeAllListeners = function(event) {\n\t        var triggerIfOffForEvents = []\n\t        if(event !== undefined) {\n\t            if(this.listeners(event).length > 0) {\n\t                triggerIfOffForEvents.push(event)\n\t            }\n\t        } else {\n\t            for(var event in this._events) {\n\t                if(this.listeners(event).length > 0) {\n\t                    triggerIfOffForEvents.push(event)\n\t                }\n\t            }\n\t        }\n\t\n\t        superclass.prototype.removeAllListeners.apply(this,arguments)\n\t\n\t        for(var n=0; n<triggerIfOffForEvents.length; n++) {\n\t            triggerIfHandlers(this, 'ifoffHandlers', triggerIfOffForEvents[n])\n\t        }\n\t    }\n\t\n\t})\n\t\n\t\n\t// triggers the if handlers from the normal list and the \"all\" list\n\tfunction triggerIfHandlers(that, handlerListName, event) {\n\t    triggerIfHandlerList(that[handlerListName][event], event)\n\t    triggerIfHandlerList(that[normalHandlerToAllHandlerProperty(handlerListName)], event)\n\t}\n\t\n\t\n\t// triggers the if handlers from a specific list\n\t// ya these names are confusing, sorry : (\n\tfunction triggerIfHandlerList(handlerList, event) {\n\t    if(handlerList !== undefined) {\n\t        for(var n=0; n<handlerList.length; n++) {\n\t            handlerList[n](event)\n\t        }\n\t    }\n\t}\n\t\n\tfunction addHandlerToList(that, handlerListName, event, callback) {\n\t    if(event instanceof Function) {\n\t        // correct arguments\n\t        callback = event\n\t        event = undefined\n\t    }\n\t\n\t    if(event !== undefined && callback !== undefined) {\n\t        var handlerList = that[handlerListName][event]\n\t        if(handlerList === undefined) {\n\t            handlerList = that[handlerListName][event] = []\n\t        }\n\t\n\t        handlerList.push(callback)\n\t    } else {\n\t        that[normalHandlerToAllHandlerProperty(handlerListName)].push(callback)\n\t    }\n\t}\n\t\n\tfunction removeFromHandlerList(that, handlerListName, event, callback) {\n\t    if(event instanceof Function) {\n\t        // correct arguments\n\t        callback = event\n\t        event = undefined\n\t    }\n\t\n\t    if(event !== undefined && callback !== undefined) {\n\t        removeCallbackFromList(that[handlerListName][event], callback)\n\t    } else if(event !== undefined) {\n\t        delete that[handlerListName][event]\n\t    } else if(callback !== undefined) {\n\t        var allHandlerListName = normalHandlerToAllHandlerProperty(handlerListName)\n\t        removeCallbackFromList(that[allHandlerListName], callback)\n\t    } else {\n\t        var allHandlerListName = normalHandlerToAllHandlerProperty(handlerListName)\n\t        that[handlerListName] = {}\n\t        that[allHandlerListName] = []\n\t    }\n\t}\n\t\n\tfunction normalHandlerToAllHandlerProperty(handlerListName) {\n\t    if(handlerListName === 'ifonHandlers')\n\t        return 'ifonAllHandlers'\n\t    if(handlerListName === 'ifoffHandlers')\n\t        return 'ifoffAllHandlers'\n\t}\n\t\n\tfunction removeCallbackFromList(list, callback) {\n\t    var index = list.indexOf(callback)\n\t    list.splice(index,1)\n\t}\n\t\n\tfunction getTrace() {\n\t    try {\n\t        throw new Error()\n\t    } catch(e) {\n\t        return e\n\t    }\n\t}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t// the property that should be used to get and set text (this is different on chrome vs firefox for some dumb reason)\n\texports.textProperty = 'textContent' //document.createElement(\"div\").textContent != undefined ? 'textContent' : 'innerText'\n\t\n\t// creates a dom element optionally with a class and attributes\n\t var node = exports.node = function(type, className, options) {\n\t    var elem = document.createElement(type)\n\t\n\t    if(options !== undefined) {\n\t        if(options.attr !== undefined) {\n\t            for(var attribute in options.attr) {\n\t                setAttribute(elem, attribute, options.attr[attribute])\n\t            }\n\t        }\n\t        if(options.textContent !== undefined) {\n\t            elem.textContent = options.textContent\n\t        }\n\t    }\n\t\n\t    if(className !== undefined)\n\t        elem.className = className\n\t\n\t    return elem\n\t}\n\t\n\t// convenience function for creating a div\n\texports.div = function(className, options) {\n\t    return node('div', className, options)\n\t}\n\t\n\t\n\t// adds an attribute to a domNode\n\tvar setAttribute = module.exports.setAttribute = function(/*[domNode,] type, value*/) {\n\t    if (arguments.length === 2) {\n\t        var domNode = this.domNode;\n\t        var type = arguments[0];\n\t        var value = arguments[1];\n\t    } else if (arguments.length === 3) {\n\t        var domNode = arguments[0];\n\t        var type = arguments[1];\n\t        var value = arguments[2];\n\t    } else {\n\t        throw new Error(\"This function expects arguments to be: [domNode,] type, value\");\n\t    }\n\t    var attr = document.createAttribute(type)\n\t    attr.value = value\n\t    domNode.setAttributeNode(attr)\n\t}\n\t\n\t// sets the selection\n\t//\n\t// works for contenteditable elements\n\texports.setSelectionRange = function(containerEl, start, end) {\n\t\n\t    if(containerEl.nodeName === 'INPUT' || containerEl.nodeName === 'TEXTAREA') {\n\t        containerEl.setSelectionRange(start, end)\n\t    } else {\n\t        var charIndex = 0, range = document.createRange();\n\t        range.setStart(containerEl, 0);\n\t        range.collapse(true);\n\t        var foundStart = false;\n\t\n\t        iterateThroughLeafNodes(containerEl, function(node) {\n\t            var hiddenCharacters = findHiddenCharacters(node, node.length)\n\t            var nextCharIndex = charIndex + node.length - hiddenCharacters;\n\t\n\t            if (!foundStart && start >= charIndex && start <= nextCharIndex) {\n\t                var nodeIndex = start-charIndex\n\t                var hiddenCharactersBeforeStart = findHiddenCharacters(node, nodeIndex)\n\t                range.setStart(node, nodeIndex + hiddenCharactersBeforeStart);\n\t                foundStart = true;\n\t            }\n\t\n\t            if (foundStart && end >= charIndex && end <= nextCharIndex) {\n\t                var nodeIndex = end-charIndex\n\t                var hiddenCharactersBeforeEnd = findHiddenCharacters(node, nodeIndex)\n\t                range.setEnd(node, nodeIndex + hiddenCharactersBeforeEnd);\n\t                return true; // stop the iteration - we're done here\n\t            }\n\t\n\t            charIndex = nextCharIndex\n\t        })\n\t\n\t        var sel = window.getSelection();\n\t        sel.removeAllRanges();\n\t        sel.addRange(range);\n\t    }\n\t}\n\t\n\t// gets the character offsets of a selection within a particular dom node\n\t// returns undefined if there is no selection in the element\n\t// note: yes this code doesn't work in older versions of IE (or possibly any versions) - if you want it to work in IE, please use http://modernizr.com/ or a polyfill for ranges\n\texports.getSelectionRange = function (element) {\n\t\n\t    var selection = window.getSelection()\n\t    var isInputOrArea = element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA'\n\t\n\t    for(var n=0; n<selection.rangeCount; n++) {\n\t        var range = selection.getRangeAt(0)\n\t        if(isInputOrArea) {\n\t            if(range.startOffset === range.endOffset && range.startContainer.children[range.startOffset] === element /*|| range.startContainer === element || */) { // I don't think the input or textarea itself will ever be the startContainer\n\t                return [element.selectionStart, element.selectionEnd]\n\t            }\n\t        } else {\n\t            var startsInElement = element.contains(range.startContainer)\n\t            if(startsInElement) {\n\t                var elementToIterateThrough = element\n\t                var startFound = true\n\t            } else {\n\t                var elementToIterateThrough = range.commonAncestorContainer\n\t                var startFound = false\n\t                var startContainerFound = false\n\t            }\n\t\n\t            var visibleCharacterOffset = 0, start, end;\n\t            iterateThroughLeafNodes(elementToIterateThrough, function(leaf) {\n\t                if(!startFound) {\n\t                    if(leaf === range.startContainer) {\n\t                        startContainerFound = true\n\t                    }\n\t\n\t                    if(!element.contains(leaf) || !startContainerFound)\n\t                        return; // continue\n\t                    else if(startContainerFound)\n\t                       startFound = true\n\t                } else if(!startsInElement && !element.contains(leaf)) {\n\t                    return true // done!\n\t                }\n\t\n\t                if(leaf === range.startContainer) {\n\t                    start = visibleCharacterOffset + range.startOffset - findHiddenCharacters(leaf, range.startOffset)\n\t                }\n\t                if(leaf === range.endContainer) {\n\t                    end = visibleCharacterOffset + range.endOffset - findHiddenCharacters(leaf, range.endOffset)\n\t                    return true // done!\n\t                }\n\t\n\t                visibleCharacterOffset += leaf.length - findHiddenCharacters(leaf, leaf.length)\n\t            })\n\t\n\t            if(start === undefined && !startFound) {\n\t                return undefined\n\t            } else {\n\t                if(start === undefined) {\n\t                    start = 0 // start is at the beginning\n\t                }\n\t                if(end === undefined) {\n\t                    end = visibleCharacterOffset // end is all the way at the end (the selection may continue in other elements)\n\t                }\n\t\n\t                return [start, end]\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t\n\t// iterate through the leaf nodes inside element\n\t// callback(node) - a function called for each leaf node\n\t    // returning true from this ends the iteration\n\tfunction iterateThroughLeafNodes(element, callback) {\n\t    var nodeStack = [element], node;\n\t\n\t    while (node = nodeStack.pop()) {\n\t        if (node.nodeType == 3) {\n\t            if(callback(node) === true)\n\t                break;\n\t        } else {\n\t            var i = node.childNodes.length;\n\t            while (i--) {\n\t                nodeStack.push(node.childNodes[i]);\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\tfunction findHiddenCharacters(node, beforeCaretIndex) {\n\t    var hiddenCharacters = 0\n\t    var lastCharWasWhiteSpace=true\n\t    for(var n=0; n-hiddenCharacters<beforeCaretIndex &&n<node.length; n++) {\n\t        if([' ','\\n','\\t','\\r'].indexOf(node.textContent[n]) !== -1) {\n\t            if(lastCharWasWhiteSpace)\n\t                hiddenCharacters++\n\t            else\n\t                lastCharWasWhiteSpace = true\n\t        } else {\n\t            lastCharWasWhiteSpace = false\n\t        }\n\t    }\n\t\n\t    return hiddenCharacters\n\t}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.dev = false  // set to true to enable dom element naming (so you can see boundaries of components when inspecting the dom)\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\tvar Style = __webpack_require__(2)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t\tthis.name = 'ListItem'\n\t\n\t    this.defaultStyle = Style({\n\t        display: 'list-item'\n\t    })\n\t\n\t\t// instance properties\n\t\n\t\tthis.init = function(/*[label,] contents*/) {\n\t        if(arguments.length <= 1) {\n\t            var contents = arguments[0]\n\t        } else {\n\t            var label = arguments[0]\n\t            var contents = arguments[1]\n\t        }\n\t\n\t        this.domNode = document.createElement(\"li\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\t\tthis.label = label\n\t\n\t        this.children = [] // need children before calling add\n\t        if(contents instanceof Gem) {\n\t\t\t\tthis.add(contents)\n\t\t\t} else if(contents !== undefined) {\n\t            this.domNode.textContent = contents\n\t        }\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t});\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// note: this is  not intended to be used directly - only through Select and MultiSelect\n\t\n\tvar proto = __webpack_require__(29)\n\t\n\tvar Gem = __webpack_require__(1)\n\tvar Style = __webpack_require__(2)\n\tvar domUtils = __webpack_require__(20)\n\t\n\t// emits a 'change' event when its 'selected' value changes\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t    // staic members\n\t\n\t    this.name = 'Option'\n\t\n\t    this.defaultStyle = Style({\n\t        display: 'block'\n\t    })\n\t\n\t\n\t    // instance members\n\t\n\t    this.init = function(/*[label,] value, text*/) {\n\t        this.domNode = document.createElement(\"option\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\n\t        if(arguments.length===2) {\n\t            this.val = arguments[0]\n\t            this.text = arguments[1]\n\t        } else { // 3\n\t            this.label = arguments[0]\n\t            this.val = arguments[1]\n\t            this.text = arguments[2]\n\t        }\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t    }\n\t\n\t    Object.defineProperty(this, 'val', {\n\t        // returns the value of the Option\n\t        get: function() {\n\t            return this._value\n\t        },\n\t\n\t        // sets the value of the Option\n\t        set: function(value) {\n\t            if(this.parent !== undefined) {\n\t                if(this.parent.options[value] !== undefined) {\n\t                    throw new Error(\"Can't give an Option the same value as another in the Select or MultiSelect (value: \"+JSON.stringify(value)+\")\")\n\t                }\n\t\n\t                if(this.val !== null) {\n\t                    delete this.parent.options[this.val]\n\t                }\n\t\n\t                this.parent.options[value] = this\n\t            }\n\t\n\t            this._value = value\n\t\n\t            if(this.selected && this.parent !== undefined) {\n\t                this.parent.emit('change')\n\t            }\n\t        }\n\t    })\n\t\n\t\n\t    Object.defineProperty(this, 'selected', {\n\t        // returns whether or not the option is selected\n\t        get: function() {\n\t            return this.domNode.selected\n\t        },\n\t\n\t        // sets the selected state of the option to the passed value (true for selected)\n\t        set: function(value) {\n\t            var booleanValue = value === true\n\t            if(this.selected === booleanValue) return false; // ignore if there's no change\n\t\n\t            if(this.parent !== undefined)\n\t                this.parent.prepareForValueChange([this.val])\n\t\n\t            this.setSelectedQuiet(booleanValue)\n\t\n\t            if(this.parent !== undefined)\n\t                this.parent.emit('change')\n\t        }\n\t    })\n\t\n\t    Object.defineProperty(this, 'text', {\n\t        get: function() {\n\t            return this.domNode[domUtils.textProperty]\n\t        },\n\t\n\t        set: function(text) {\n\t            this.domNode[domUtils.textProperty] = text\n\t        }\n\t    })\n\t\n\t\n\t    // private\n\t\n\t    // does everything for setting the selected state except emit the parent's change event\n\t    this.setSelectedQuiet = function setOptionSelected(booleanValue) {\n\t        if(this.selected === booleanValue) return; // ignore if there's no change\n\t\n\t        this.domNode.selected = booleanValue\n\t        this.emit('change') // the browser has no listenable event that is triggered on change of the 'checked' property\n\t    }\n\t})\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\tvar RowlikeGenerator = __webpack_require__(28);\n\t\n\tmodule.exports = RowlikeGenerator('th', \"TableHeader\")\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar RowlikeGenerator = __webpack_require__(28);\n\t\n\tmodule.exports = RowlikeGenerator('tr', \"TableRow\")\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Gem = __webpack_require__(1)\n\tvar proto = __webpack_require__(29)\n\tvar Style = __webpack_require__(2)\n\t\n\tmodule.exports = proto(Gem, function(superclass) {\n\t\n\t\t// static properties\n\t\n\t\tthis.name = 'TableCell'\n\t\n\t    this.defaultStyle = Style({\n\t        display: 'table-cell'\n\t    })\n\t\t\n\t\n\t\t// instance properties\n\t\n\t\tthis.init = function(/*[label,] contents*/) {\n\t        if(arguments.length <= 1) {\n\t            var contents = arguments[0]\n\t        } else {\n\t            var label = arguments[0]\n\t            var contents = arguments[1]\n\t        }\n\t\n\t        this.domNode = document.createElement(\"td\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\t\tthis.label = label\n\t\n\t        this.children = [] // need children before calling add\n\t        if(contents instanceof Gem || typeof(contents) !== 'string') {\n\t            this.add(contents)\n\t        } else if(contents !== undefined) {\n\t            this.domNode.textContent = contents\n\t        }\n\t\n\t        superclass.init.apply(this, arguments) // superclass constructor\n\t\t}\n\t\n\t\tthis.colspan = function(cols) {\n\t\t\tthis.attr('colspan',cols);\n\t\t}\n\t});\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      }\n\t      throw TypeError('Uncaught, unspecified \"error\" event.');\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        len = arguments.length;\n\t        args = new Array(len - 1);\n\t        for (i = 1; i < len; i++)\n\t          args[i - 1] = arguments[i];\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    len = arguments.length;\n\t    args = new Array(len - 1);\n\t    for (i = 1; i < len; i++)\n\t      args[i - 1] = arguments[i];\n\t\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    var m;\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  var ret;\n\t  if (!emitter._events || !emitter._events[type])\n\t    ret = 0;\n\t  else if (isFunction(emitter._events[type]))\n\t    ret = 1;\n\t  else\n\t    ret = emitter._events[type].length;\n\t  return ret;\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(29)\n\t\n\tvar Gem = __webpack_require__(1)\n\tvar Style = __webpack_require__(2)\n\tvar Cell = __webpack_require__(26);\n\t\n\t// generates either a Header or a Row, depending on what you pass in\n\t// elementType should either be \"tr\" or \"th\n\t// name should either be \"Header\" or \"Row\n\tmodule.exports = function(elementType, name) {\n\t    return proto(Gem, function(superclass) {\n\t\n\t        // static properties\n\t\n\t        this.name = name\n\t\n\t        this.defaultStyle = Style({\n\t            display: 'table-row'\n\t        })\n\t\n\t\n\t        // instance properties\n\t\n\t        this.init = function(/*[label,] rowInit*/) {\n\t            if(arguments[0] instanceof Array) {\n\t                var rowInit = arguments[0]\n\t            } else {\n\t                var label = arguments[0]\n\t                var rowInit = arguments[1]\n\t            }\n\t\n\t            this.domNode = document.createElement(elementType) // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t            this.label = label\n\t            this.children = [] // need children before calling add\n\t\n\t            if(rowInit !== undefined) {\n\t                for(var n=0; n<rowInit.length; n++) {\n\t                    this.cell(rowInit[n])\n\t                }\n\t            }\n\t\n\t            superclass.init.apply(this, arguments) // superclass constructor\n\t        }\n\t\n\t        this.cell = function(/*[label,] contents*/) {\n\t            var cell = Cell.apply(undefined, arguments);\n\t            this.add(cell);\n\t            return cell;\n\t        }\n\t    })\n\t}\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/* Copyright (c) 2013 Billy Tetrud - Free to use for any purpose: MIT License*/\r\n\t\r\n\tvar noop = function() {}\r\n\t\r\n\tvar prototypeName='prototype', undefined, protoUndefined='undefined', init='init', ownProperty=({}).hasOwnProperty; // minifiable variables\r\n\tfunction proto() {\r\n\t    var args = arguments // minifiable variables\r\n\t\r\n\t    if(args.length == 1) {\r\n\t        var parent = {init: noop}\r\n\t        var prototypeBuilder = args[0]\r\n\t\r\n\t    } else { // length == 2\r\n\t        var parent = args[0]\r\n\t        var prototypeBuilder = args[1]\r\n\t    }\r\n\t\r\n\t    // special handling for Error objects\r\n\t    var namePointer = {}    // name used only for Error Objects\r\n\t    if([Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError].indexOf(parent) !== -1) {\r\n\t        parent = normalizeErrorObject(parent, namePointer)\r\n\t    }\r\n\t\r\n\t    // set up the parent into the prototype chain if a parent is passed\r\n\t    var parentIsFunction = typeof(parent) === \"function\"\r\n\t    if(parentIsFunction) {\r\n\t        prototypeBuilder[prototypeName] = parent[prototypeName]\r\n\t    } else {\r\n\t        prototypeBuilder[prototypeName] = parent\r\n\t    }\r\n\t\r\n\t    // the prototype that will be used to make instances\r\n\t    var prototype = new prototypeBuilder(parent)\r\n\t    namePointer.name = prototype.name\r\n\t\r\n\t    // if there's no init, assume its inheriting a non-proto class, so default to applying the superclass's constructor.\r\n\t    if(!prototype[init] && parentIsFunction) {\r\n\t        prototype[init] = function() {\r\n\t            parent.apply(this, arguments)\r\n\t        }\r\n\t    }\r\n\t\r\n\t    // constructor for empty object which will be populated via the constructor\r\n\t    var F = function() {}\r\n\t        F[prototypeName] = prototype    // set the prototype for created instances\r\n\t\r\n\t    var constructorName = prototype.name?prototype.name:''\r\n\t    if(prototype[init] === undefined || prototype[init] === noop) {\r\n\t        var ProtoObjectFactory = new Function('F',\r\n\t            \"return function \" + constructorName + \"(){\" +\r\n\t                \"return new F()\" +\r\n\t            \"}\"\r\n\t        )(F)\r\n\t    } else {\r\n\t        // dynamically creating this function cause there's no other way to dynamically name a function\r\n\t        var ProtoObjectFactory = new Function('F','i','u','n', // shitty variables cause minifiers aren't gonna minify my function string here\r\n\t            \"return function \" + constructorName + \"(){ \" +\r\n\t                \"var x=new F(),r=i.apply(x,arguments)\\n\" +    // populate object via the constructor\r\n\t                \"if(r===n)\\n\" +\r\n\t                    \"return x\\n\" +\r\n\t                \"else if(r===u)\\n\" +\r\n\t                    \"return n\\n\" +\r\n\t                \"else\\n\" +\r\n\t                    \"return r\\n\" +\r\n\t            \"}\"\r\n\t        )(F, prototype[init], proto[protoUndefined]) // note that n is undefined\r\n\t    }\r\n\t\r\n\t    prototype.constructor = ProtoObjectFactory;    // set the constructor property on the prototype\r\n\t\r\n\t    // add all the prototype properties onto the static class as well (so you can access that class when you want to reference superclass properties)\r\n\t    for(var n in prototype) {\r\n\t        addProperty(ProtoObjectFactory, prototype, n)\r\n\t    }\r\n\t\r\n\t    // add properties from parent that don't exist in the static class object yet\r\n\t    for(var n in parent) {\r\n\t        if(ownProperty.call(parent, n) && ProtoObjectFactory[n] === undefined) {\r\n\t            addProperty(ProtoObjectFactory, parent, n)\r\n\t        }\r\n\t    }\r\n\t\r\n\t    ProtoObjectFactory.parent = parent;            // special parent property only available on the returned proto class\r\n\t    ProtoObjectFactory[prototypeName] = prototype  // set the prototype on the object factory\r\n\t\r\n\t    return ProtoObjectFactory;\r\n\t}\r\n\t\r\n\tproto[protoUndefined] = {} // a special marker for when you want to return undefined from a constructor\r\n\t\r\n\tmodule.exports = proto\r\n\t\r\n\tfunction normalizeErrorObject(ErrorObject, namePointer) {\r\n\t    function NormalizedError() {\r\n\t        var tmp = new ErrorObject(arguments[0])\r\n\t        tmp.name = namePointer.name\r\n\t\r\n\t        this.message = tmp.message\r\n\t        if(Object.defineProperty) {\r\n\t            /*this.stack = */Object.defineProperty(this, 'stack', { // getter for more optimizy goodness\r\n\t                get: function() {\r\n\t                    return tmp.stack\r\n\t                },\r\n\t                configurable: true // so you can change it if you want\r\n\t            })\r\n\t        } else {\r\n\t            this.stack = tmp.stack\r\n\t        }\r\n\t\r\n\t        return this\r\n\t    }\r\n\t\r\n\t    var IntermediateInheritor = function() {}\r\n\t        IntermediateInheritor.prototype = ErrorObject.prototype\r\n\t    NormalizedError.prototype = new IntermediateInheritor()\r\n\t\r\n\t    return NormalizedError\r\n\t}\r\n\t\r\n\tfunction addProperty(factoryObject, prototype, property) {\r\n\t    try {\r\n\t        var info = Object.getOwnPropertyDescriptor(prototype, property)\r\n\t        if(info.get !== undefined || info.get !== undefined && Object.defineProperty !== undefined) {\r\n\t            Object.defineProperty(factoryObject, property, info)\r\n\t        } else {\r\n\t            factoryObject[property] = prototype[property]\r\n\t        }\r\n\t    } catch(e) {\r\n\t        // do nothing, if a property (like `name`) can't be set, just ignore it\r\n\t    }\r\n\t}\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n\t * HashMap - HashMap Class for JavaScript\r\n\t * @author Ariel Flesler <aflesler@gmail.com>\r\n\t * @version 2.0.5\r\n\t * Homepage: https://github.com/flesler/hashmap\r\n\t */\r\n\t\r\n\t(function(factory) {\r\n\t\tif (true) {\r\n\t\t\t// AMD. Register as an anonymous module.\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\t} else if (typeof module === 'object') {\r\n\t\t\t// Node js environment\r\n\t\t\tvar HashMap = module.exports = factory();\r\n\t\t\t// Keep it backwards compatible\r\n\t\t\tHashMap.HashMap = HashMap;\r\n\t\t} else {\r\n\t\t\t// Browser globals (this is window)\r\n\t\t\tthis.HashMap = factory();\r\n\t\t}\r\n\t}(function() {\r\n\t\r\n\t\tfunction HashMap(other) {\r\n\t\t\tthis.clear();\r\n\t\t\tswitch (arguments.length) {\r\n\t\t\t\tcase 0: break;\r\n\t\t\t\tcase 1: this.copy(other); break;\r\n\t\t\t\tdefault: multi(this, arguments); break;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar proto = HashMap.prototype = {\r\n\t\t\tconstructor:HashMap,\r\n\t\r\n\t\t\tget:function(key) {\r\n\t\t\t\tvar data = this._data[this.hash(key)];\r\n\t\t\t\treturn data && data[1];\r\n\t\t\t},\r\n\t\r\n\t\t\tset:function(key, value) {\r\n\t\t\t\t// Store original key as well (for iteration)\r\n\t\t\t\tvar hash = this.hash(key);\r\n\t\t\t\tif ( !(hash in this._data) ) {\r\n\t\t\t\t\tthis._count++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._data[hash] = [key, value];\r\n\t\t\t},\r\n\t\r\n\t\t\tmulti:function() {\r\n\t\t\t\tmulti(this, arguments);\r\n\t\t\t},\r\n\t\r\n\t\t\tcopy:function(other) {\r\n\t\t\t\tfor (var hash in other._data) {\r\n\t\t\t\t\tif ( !(hash in this._data) ) {\r\n\t\t\t\t\t\tthis._count++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._data[hash] = other._data[hash];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\thas:function(key) {\r\n\t\t\t\treturn this.hash(key) in this._data;\r\n\t\t\t},\r\n\t\r\n\t\t\tsearch:function(value) {\r\n\t\t\t\tfor (var key in this._data) {\r\n\t\t\t\t\tif (this._data[key][1] === value) {\r\n\t\t\t\t\t\treturn this._data[key][0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\t\r\n\t\t\tremove:function(key) {\r\n\t\t\t\tvar hash = this.hash(key);\r\n\t\t\t\tif ( hash in this._data ) {\r\n\t\t\t\t\tthis._count--;\r\n\t\t\t\t\tdelete this._data[hash];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\ttype:function(key) {\r\n\t\t\t\tvar str = Object.prototype.toString.call(key);\r\n\t\t\t\tvar type = str.slice(8, -1).toLowerCase();\r\n\t\t\t\t// Some browsers yield DOMWindow for null and undefined, works fine on Node\r\n\t\t\t\tif (type === 'domwindow' && !key) {\r\n\t\t\t\t\treturn key + '';\r\n\t\t\t\t}\r\n\t\t\t\treturn type;\r\n\t\t\t},\r\n\t\r\n\t\t\tkeys:function() {\r\n\t\t\t\tvar keys = [];\r\n\t\t\t\tthis.forEach(function(_, key) { keys.push(key); });\r\n\t\t\t\treturn keys;\r\n\t\t\t},\r\n\t\r\n\t\t\tvalues:function() {\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tthis.forEach(function(value) { values.push(value); });\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\t\r\n\t\t\tcount:function() {\r\n\t\t\t\treturn this._count;\r\n\t\t\t},\r\n\t\r\n\t\t\tclear:function() {\r\n\t\t\t\t// TODO: Would Object.create(null) make any difference\r\n\t\t\t\tthis._data = {};\r\n\t\t\t\tthis._count = 0;\r\n\t\t\t},\r\n\t\r\n\t\t\tclone:function() {\r\n\t\t\t\treturn new HashMap(this);\r\n\t\t\t},\r\n\t\r\n\t\t\thash:function(key) {\r\n\t\t\t\tswitch (this.type(key)) {\r\n\t\t\t\t\tcase 'undefined':\r\n\t\t\t\t\tcase 'null':\r\n\t\t\t\t\tcase 'boolean':\r\n\t\t\t\t\tcase 'number':\r\n\t\t\t\t\tcase 'regexp':\r\n\t\t\t\t\t\treturn key + '';\r\n\t\r\n\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\treturn '♣' + key.getTime();\r\n\t\r\n\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\treturn '♠' + key;\r\n\t\r\n\t\t\t\t\tcase 'array':\r\n\t\t\t\t\t\tvar hashes = [];\r\n\t\t\t\t\t\tfor (var i = 0; i < key.length; i++) {\r\n\t\t\t\t\t\t\thashes[i] = this.hash(key[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn '♥' + hashes.join('⁞');\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// TODO: Don't use expandos when Object.defineProperty is not available?\r\n\t\t\t\t\t\tif (!key.hasOwnProperty('_hmuid_')) {\r\n\t\t\t\t\t\t\tkey._hmuid_ = ++HashMap.uid;\r\n\t\t\t\t\t\t\thide(key, '_hmuid_');\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\treturn '♦' + key._hmuid_;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tforEach:function(func, ctx) {\r\n\t\t\t\tfor (var key in this._data) {\r\n\t\t\t\t\tvar data = this._data[key];\r\n\t\t\t\t\tfunc.call(ctx || this, data[1], data[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tHashMap.uid = 0;\r\n\t\r\n\t\t//- Add chaining to some methods\r\n\t    var chainMethod = {set:1,multi:1,copy:1,remove:1,clear:1,forEach:1}\r\n\t\tfor (var method in chainMethod) {\r\n\t\t\tproto[method] = chain(proto[method])\r\n\t\t}\r\n\t\r\n\t\t//- Utils\r\n\t\r\n\t\tfunction multi(map, args) {\r\n\t\t\tfor (var i = 0; i < args.length; i += 2) {\r\n\t\t\t\tmap.set(args[i], args[i+1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction chain(fn) {\r\n\t\t\treturn function() {\r\n\t\t\t\tfn.apply(this, arguments);\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tfunction hide(obj, prop) {\r\n\t\t\t// Make non iterable if supported\r\n\t\t\tif (Object.defineProperty) {\r\n\t\t\t\tObject.defineProperty(obj, prop, {enumerable:false});\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn HashMap;\r\n\t}));\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar proto = __webpack_require__(36)\r\n\tvar EventEmitter = __webpack_require__(27).EventEmitter\r\n\tvar utils = __webpack_require__(34)\r\n\t\r\n\t\r\n\t// emits the event:\r\n\t    // change - the event data is an object of one of the following forms:\r\n\t        // {data:_, type: 'set', property: propertyList}\r\n\t        // {data:_, type: 'added', property: propertyList, index:_, count: numberOfElementsAdded}\r\n\t        // {data:_, type: 'removed', property: propertyList, index:_, removed: removedValues}\r\n\tvar Observe = module.exports = proto(EventEmitter, function() {\r\n\t\r\n\t    // static members\r\n\t\r\n\t    this.init = function(obj) {\r\n\t        this.subject = obj\r\n\t\r\n\t        this.setMaxListeners(1000)\r\n\t    }\r\n\t\r\n\t    // instance members\r\n\t\r\n\t    // gets an element or member of the subject and returns another Observee\r\n\t    // changes to the returned Observee will be emitted by its parent as well\r\n\t    this.get = function(property) {\r\n\t        return ObserveeChild(this, parsePropertyList(property))\r\n\t    }\r\n\t\r\n\t    // sets a value on the subject\r\n\t    // property - either an array of members to select, or a string where properties to select are separated by dots\r\n\t    // value - the value to set\r\n\t    this.set = function(property, value) {\r\n\t        setInternal(this, parsePropertyList(property), value, {})\r\n\t    }\r\n\t\r\n\t    // pushes a value onto a list\r\n\t    this.push = function(/*value...*/) {\r\n\t        pushInternal(this, [], arguments, {})\r\n\t    }\r\n\t\r\n\t    this.pop = function() {\r\n\t        var elements = spliceInternal(this, [], [this.subject.length-1,1], {})\r\n\t        return elements[0]\r\n\t    }\r\n\t\r\n\t    this.unshift = function(/*value...*/) {\r\n\t        spliceInternal(this, [], [0,0].concat(Array.prototype.slice.call(arguments, 0)), {})\r\n\t    }\r\n\t    this.shift = function() {\r\n\t        var elements = spliceInternal(this, [], [0,1], {})\r\n\t        return elements[0]\r\n\t    }\r\n\t\r\n\t    this.reverse = function() {\r\n\t        this.subject.reverse()\r\n\t        this.emit('change', {\r\n\t            type:'set', property: []\r\n\t        })\r\n\t    }\r\n\t\r\n\t    this.sort = function() {\r\n\t        this.subject.sort.apply(this.subject, arguments)\r\n\t        this.emit('change', {\r\n\t            type:'set', property: []\r\n\t        })\r\n\t    }\r\n\t\r\n\t    // index is the index to remove/insert at\r\n\t    // countToRemove is the number to remove\r\n\t    // elementsToAdd is a list of elements to add\r\n\t    this.splice = function(/*index, countToRemove[, elementsToAdd]*/) {\r\n\t        return spliceInternal(this, [], arguments, {})\r\n\t    }\r\n\t\r\n\t    // use this instead of concat for mutation behavior\r\n\t    this.append = function(arrayToAppend) {\r\n\t        appendInternal(this, [], arguments, {})\r\n\t    }\r\n\t\r\n\t    this.data = this.id = function(data) {\r\n\t        return ObserveeChild(this, [], {data: data})\r\n\t    }\r\n\t\r\n\t    // For the returned object, any property added via set, push, splice, or append joins an internal observee together with this observee, so that\r\n\t    //      the internal observee and the containing observee will both send 'change' events appropriately\r\n\t    // collapse - (default: false) if true, any property added will be set to the subject of the value added (so that value won't be an observee anymore\r\n\t        // note: only use collapse:true if the observees you're unioning isn't actually an object that inherits from an observee - any instance methods on the observee that come from child classes won't be accessible anymore\r\n\t        // e.g. var x = observe({a:5})\r\n\t        //      var b = observe({})\r\n\t        //      x.subject.a === 5    ;; true\r\n\t        //      b.union(true).set('x', x)\r\n\t        //      b.subject.x.a === 5            ;; true\r\n\t        //      b.subject.x.subject.a === 5    ;; false\r\n\t    this.union = function(collapse) {\r\n\t        if(collapse === undefined) collapse = false\r\n\t        return ObserveeChild(this, [], {union: collapse})\r\n\t    }\r\n\t\r\n\t\r\n\t    /* pause and unpause may cause weird affects in certain cases (e.g. if you remove an element at index 4 and *then* add an element at index 2)\r\n\t    // pause sending events (for when you want to do a lot of things to an object)\r\n\t    this.pause = function() {\r\n\t        this.paused = true\r\n\t    }\r\n\t    this.unpause = function() {\r\n\t        this.paused = undefined\r\n\t        sendEvent(this)\r\n\t    }*/\r\n\t})\r\n\t\r\n\t\r\n\tfunction parsePropertyList(property) {\r\n\t    if(!(property instanceof Array)) {\r\n\t        property = property.toString().split('.')\r\n\t    }\r\n\t\r\n\t    return property\r\n\t}\r\n\t\r\n\tfunction getPropertyPointer(subject, propertyList) {\r\n\t    var current = subject\r\n\t    for(var n=0; n<propertyList.length-1; n++) {\r\n\t        current = current[propertyList[n]]\r\n\t    }\r\n\t\r\n\t    return {obj: current, key:propertyList[n]}\r\n\t}\r\n\t\r\n\tvar getPropertyValue = module.exports.getPropertyValue = function(subject, property) {\r\n\t    var pointer = getPropertyPointer(subject, property)\r\n\t    if(pointer.key !== undefined) {\r\n\t        return pointer.obj[pointer.key]\r\n\t    } else {\r\n\t        return pointer.obj\r\n\t    }\r\n\t}\r\n\t\r\n\t// private\r\n\t\r\n\t// options can have the properties:\r\n\t    // union - if true, any value set, pushed, appended, or spliced onto the observee is unioned\r\n\tvar ObserveeChild = proto(EventEmitter, function() {\r\n\t\r\n\t    this.init = function(parent, propertyList, options) {\r\n\t        if(options === undefined) this.options = {}\r\n\t        else                      this.options = options\r\n\t\r\n\t        if(parent._observeeParent !== undefined)\r\n\t            this._observeeParent = parent._observeeParent\r\n\t        else\r\n\t            this._observeeParent = parent\r\n\t\r\n\t        this.property = propertyList\r\n\t        this.subject = getPropertyValue(parent.subject, propertyList)\r\n\t\r\n\t        var that = this\r\n\t        parent.on('change', function(change) {\r\n\t            var answers = changeQuestions(that.property, change, that.options.union)\r\n\t\r\n\t            if(change.type === 'set' && change.property.length <= that.property.length && that.options.union === undefined) {    // if the subject may have been replaced with a new subject\r\n\t                //getPropertyValue(parent.subject, propertyList)\r\n\t                var pointer = getPropertyPointer(parent.subject, propertyList)\r\n\t                if(pointer.obj !== undefined) {\r\n\t                    if(pointer.key !== undefined) {\r\n\t                        that.subject =pointer.obj[pointer.key]\r\n\t                    } else {\r\n\t                        that.subject =pointer.obj\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if(answers.isWithin) {\r\n\t                that.emit('change', {\r\n\t                    type:change.type, property: change.property.slice(that.property.length),\r\n\t                    index:change.index, count:change.count, removed: change.removed, data: change.data\r\n\t                })\r\n\t            } else if(answers.couldRelocate) {\r\n\t                if(change.type === 'removed') {\r\n\t                    var relevantIndex = that.property[change.property.length]\r\n\t                    var removedIndexesAreBeforeIndexOfObserveeChild = change.index + change.removed.length - 1 < relevantIndex\r\n\t\r\n\t                    if(removedIndexesAreBeforeIndexOfObserveeChild) {\r\n\t                        that.property[change.property.length] = relevantIndex - change.removed.length // change the propertyList to match the new index\r\n\t                    }\r\n\t                } else if(change.type === 'added') {\r\n\t                    var relevantIndex = parseInt(that.property[change.property.length])\r\n\t                    if(change.index <= relevantIndex) {\r\n\t                        that.property[change.property.length] = relevantIndex + change.count // change the propertyList to match the new index\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        })\r\n\t    }\r\n\t\r\n\t    this.get = function(property) {\r\n\t        return this._observeeParent.get(this.property.concat(parsePropertyList(property)))\r\n\t    }\r\n\t\r\n\t    this.set = function(property, value) {\r\n\t        setInternal(this._observeeParent, this.property.concat(parsePropertyList(property)), value, this.options)\r\n\t    }\r\n\t\r\n\t    this.push = function(/*values...*/) {\r\n\t        pushInternal(this._observeeParent, this.property, arguments, this.options)\r\n\t    }\r\n\t    this.pop = function() {\r\n\t        var elements = spliceInternal(this._observeeParent, this.property, [this.subject.length-1,1], this.options)\r\n\t        return elements[0]\r\n\t    }\r\n\t\r\n\t    this.unshift = function(/*value...*/) {\r\n\t        spliceInternal(this._observeeParent, this.property, [0,0].concat(Array.prototype.slice.call(arguments,0)), this.options)\r\n\t    }\r\n\t    this.shift = function() {\r\n\t        var elements = spliceInternal(this._observeeParent, this.property, [0,1], this.options)\r\n\t        return elements[0]\r\n\t    }\r\n\t\r\n\t    this.splice = function(index, countToRemove/*[, elementsToAdd....]*/) {\r\n\t        return spliceInternal(this._observeeParent, this.property, arguments, this.options)\r\n\t    }\r\n\t\r\n\t    this.reverse = function() {\r\n\t        this.subject.reverse()\r\n\t        this.emit('change', {\r\n\t            type:'set', property: []\r\n\t        })\r\n\t    }\r\n\t\r\n\t    this.sort = function() {\r\n\t        this.subject.sort.apply(this.subject, arguments)\r\n\t        this.emit('change', {\r\n\t            type:'set', property: []\r\n\t        })\r\n\t    }\r\n\t\r\n\t    this.append = function(/*[property,] arrayToAppend*/) {\r\n\t        appendInternal(this._observeeParent, this.property, arguments, this.options)\r\n\t    }\r\n\t\r\n\t    this.data = this.id = function(data) {\r\n\t        return ObserveeChild(this._observeeParent, this.property, utils.merge({}, this.options, {data: data}))\r\n\t    }\r\n\t\r\n\t    this.union = function(collapse) {\r\n\t        if(collapse === undefined) collapse = false\r\n\t        return ObserveeChild(this, [], utils.merge({}, this.options, {union: collapse}))\r\n\t    }\r\n\t\r\n\t})\r\n\t\r\n\t\r\n\t\r\n\t// that - the Observee object\r\n\tfunction setInternal(that, propertyList, value, options) {\r\n\t    var pointer = getPropertyPointer(that.subject, propertyList)\r\n\t\r\n\t    var internalObservee = value\r\n\t    if(options.union === true) {\r\n\t        value = value.subject\r\n\t    }\r\n\t\r\n\t    pointer.obj[pointer.key] = value\r\n\t\r\n\t    var event = {type: 'set', property: propertyList}\r\n\t    if(options.data !== undefined) event.data = event.id = options.data\r\n\t    that.emit('change',event)\r\n\t\r\n\t    if(options.union !== undefined)\r\n\t        unionizeEvents(that, internalObservee, propertyList, options.union)\r\n\t}\r\n\t\r\n\tfunction pushInternal(that, propertyList, args, options) {\r\n\t    var array = getPropertyValue(that.subject, propertyList)\r\n\t    var originalLength = array.length\r\n\t    array.push.apply(array, args)\r\n\t\r\n\t    var internalObservees = unionizeList(array, originalLength, args.length, options.union)\r\n\t\r\n\t    var event = {type: 'added', property: propertyList, index: originalLength, count: args.length}\r\n\t    if(options.data !== undefined) event.data = event.id = options.data\r\n\t    that.emit('change', event)\r\n\t\r\n\t    unionizeListEvents(that, internalObservees, propertyList, options.union)\r\n\t}\r\n\t\r\n\tfunction spliceInternal(that, propertyList, args, options) {\r\n\t    var index = args[0]\r\n\t    var countToRemove = args[1]\r\n\t\r\n\t    var array = getPropertyValue(that.subject, propertyList)\r\n\t    var result = array.splice.apply(array, args)\r\n\t\r\n\t    if(countToRemove > 0) {\r\n\t        var event = {type: 'removed', property: propertyList, index: index, removed: result}\r\n\t        if(options.data !== undefined) event.data = event.id = options.data\r\n\t        that.emit('change', event)\r\n\t    }\r\n\t    if(args.length > 2) {\r\n\t        var event = {type: 'added', property: propertyList, index: index, count: args.length-2}\r\n\t\r\n\t        var internalObservees = unionizeList(array, index, event.count, options.union)\r\n\t\r\n\t        if(options.data !== undefined) event.data = event.id = options.data\r\n\t        that.emit('change', event)\r\n\t\r\n\t        unionizeListEvents(that, internalObservees, propertyList, options.union)\r\n\t    }\r\n\t\r\n\t    return result\r\n\t}\r\n\t\r\n\t// note: I'm not using splice to do this as an optimization (because otherwise the property list would have to be parsed twice and the value gotten twice) - maybe this optimization wasn't worth it but its already done\r\n\tfunction appendInternal(that, propertyList, args, options) {\r\n\t    var arrayToAppend = args[0]\r\n\t    if(arrayToAppend.length === 0) return; //nothing to do\r\n\t\r\n\t    var array = getPropertyValue(that.subject, propertyList)\r\n\t    var originalLength = array.length\r\n\t\r\n\t    var spliceArgs = [originalLength, 0]\r\n\t    spliceArgs = spliceArgs.concat(arrayToAppend)\r\n\t    var oldLength = array.length\r\n\t    array.splice.apply(array, spliceArgs)\r\n\t\r\n\t    var internalObservees = unionizeList(array, oldLength, array.length, options.union)\r\n\t\r\n\t    var event = {type: 'added', property: propertyList, index: originalLength, count: arrayToAppend.length}\r\n\t    if(options.data !== undefined) event.data = event.id = options.data\r\n\t    that.emit('change', event)\r\n\t\r\n\t    unionizeListEvents(that, internalObservees, propertyList, options.union)\r\n\t}\r\n\t\r\n\t// sets a slice of elements to their subjects and\r\n\t// returns the original observee objects along with their indexes\r\n\tfunction unionizeList(array, start, count, union) {\r\n\t    var internalObservees = [] // list of observees and their property path\r\n\t    if(union !== undefined) {\r\n\t        var afterEnd = start+count\r\n\t        for(var n=start; n<afterEnd; n++) {\r\n\t            internalObservees.push({obj: array[n], index: n})\r\n\t            if(union === true)\r\n\t                array[n] = array[n].subject\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return internalObservees\r\n\t}\r\n\t\r\n\t// runs unionizeEvents for elements in a list\r\n\t// internalObservees should be the result from `unionizeList`\r\n\tfunction unionizeListEvents(that, internalObservees, propertyList, collapse) {\r\n\t    for(var n=0; n<internalObservees.length; n++) {\r\n\t        unionizeEvents(that, internalObservees[n].obj, propertyList.concat(internalObservees[n].index+''), collapse)\r\n\t    }\r\n\t}\r\n\t\r\n\t\r\n\t// sets up the union change events for an observee with one of its inner properties\r\n\t// parameters:\r\n\t    // that - the container observee\r\n\t    // innerObservee - the contained observee\r\n\t    // propertyList - the propertyList to unionize\r\n\t    // collapse - the union option (true for collapse)\r\n\tfunction unionizeEvents(that, innerObservee, propertyList, collapse) {\r\n\t    var propertyListDepth = propertyList.length\r\n\t\r\n\t    if(innerObservee.on === undefined || innerObservee.emit === undefined || innerObservee.removeListener === undefined || innerObservee.set === undefined) {\r\n\t        throw new Error(\"Attempting to union a value that isn't an observee\")\r\n\t    }\r\n\t\r\n\t    var innerChangeHandler, containerChangeHandler\r\n\t    var ignorableContainerEvents = [], ignorableInnerEvents = []\r\n\t    innerObservee.on('change', innerChangeHandler = function(change) {\r\n\t        if(ignorableInnerEvents.indexOf(change) === -1) {        // don't run this for events generated by the union event handlers\r\n\t            if(collapse) {\r\n\t                var property = propertyList.concat(change.property)\r\n\t            } else {\r\n\t                var property = propertyList.concat(['subject']).concat(change.property)\r\n\t            }\r\n\t\r\n\t            var containerChange = utils.merge({}, change, {property: property})\r\n\t            ignorableContainerEvents.push(containerChange)\r\n\t            that.emit('change', containerChange)\r\n\t        }\r\n\t    })\r\n\t    that.on('change', containerChangeHandler = function(change) {\r\n\t        var changedPropertyDepth = change.property.length\r\n\t\r\n\t        if(collapse) {\r\n\t            var propertyListToAskFor = propertyList\r\n\t        } else {\r\n\t            var propertyListToAskFor = propertyList.concat(['subject'])\r\n\t        }\r\n\t\r\n\t        var answers = changeQuestions(propertyListToAskFor, change, true)\r\n\t        var changeIsWithinInnerProperty = answers.isWithin\r\n\t        var changeCouldRelocateInnerProperty = answers.couldRelocate\r\n\t\r\n\t        if(changeIsWithinInnerProperty && ignorableContainerEvents.indexOf(change) === -1) {   // don't run this for events generated by the union event handlers\r\n\t            if(collapse) {\r\n\t                var property = change.property.slice(propertyListDepth)\r\n\t            } else {\r\n\t                var property = change.property.slice(propertyListDepth+1) // +1 for the 'subject'\r\n\t            }\r\n\t\r\n\t            var innerObserveeEvent = utils.merge({}, change, {property: property})\r\n\t            ignorableInnerEvents.push(innerObserveeEvent)\r\n\t            innerObservee.emit('change', innerObserveeEvent)\r\n\t        } else if(changeCouldRelocateInnerProperty) {\r\n\t            if(change.type === 'set' /*&& changedPropertyDepth <= propertyListDepth  - this part already done above*/) {\r\n\t                removeUnion()\r\n\t            } else if(change.type === 'removed') {\r\n\t                var relevantIndex = propertyList[change.property.length]\r\n\t                var removedIndexesContainsIndexOfInnerObservee = change.index <= relevantIndex && relevantIndex <= change.index + change.removed.length - 1\r\n\t                var removedIndexesAreBeforeIndexOfInnerObservee = change.index + change.removed.length - 1 < relevantIndex && relevantIndex\r\n\t\r\n\t                if(removedIndexesContainsIndexOfInnerObservee && changedPropertyDepth <= propertyListDepth+1) {\r\n\t                    removeUnion()\r\n\t                } else if(removedIndexesAreBeforeIndexOfInnerObservee) {\r\n\t                    propertyList[change.property.length] = relevantIndex - change.removed.length // change the propertyList to match the new index\r\n\t                }\r\n\t            } else if(change.type === 'added') {\r\n\t                var relevantIndex = propertyList[change.property.length]\r\n\t                if(change.index < relevantIndex) {\r\n\t                    propertyList[change.property.length] = relevantIndex + change.count // change the propertyList to match the new index\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    })\r\n\t\r\n\t    var removeUnion = function() {\r\n\t        innerObservee.removeListener('change', innerChangeHandler)\r\n\t        that.removeListener('change', containerChangeHandler)\r\n\t    }\r\n\t}\r\n\t\r\n\t\r\n\t// answers certain questions about a change compared to a property list\r\n\t// returns an object like: {\r\n\t    // isWithin: _,           // true if changeIsWithinInnerProperty\r\n\t    // couldRelocate: _       // true if changeCouldRelocateInnerProperty or if innerProperty might be removed\r\n\t// }\r\n\tfunction changeQuestions(propertyList, change, union) {\r\n\t    var propertyListDepth = propertyList.length\r\n\t    var unioned = union!==undefined\r\n\t\r\n\t    var changeIsWithinInnerProperty = true // assume true until proven otherwise\r\n\t    var changeCouldRelocateInnerProperty = true // assume true until prove otherwise\r\n\t    for(var n=0; n<propertyListDepth; n++) {\r\n\t        if(change.property[n] !== propertyList[n]+'') {\r\n\t            changeIsWithinInnerProperty = false\r\n\t            if(n<change.property.length) {\r\n\t                changeCouldRelocateInnerProperty = false\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    if(!unioned && change.property.length < propertyListDepth\r\n\t       || unioned && (change.type === 'set' && change.property.length <= propertyListDepth   // if this is a unioned observee, replacing it actually removes it\r\n\t                   || change.type !== 'set' && change.property.length < propertyListDepth)\r\n\t    ) {\r\n\t        changeIsWithinInnerProperty = false\r\n\t    } else {\r\n\t        changeCouldRelocateInnerProperty = false\r\n\t    }\r\n\t\r\n\t    return {couldRelocate: changeCouldRelocateInnerProperty, isWithin: changeIsWithinInnerProperty}\r\n\t}\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// resolves varargs variable into more usable form\n\t// args - should be a function arguments variable\n\t// returns a javascript Array object of arguments that doesn't count trailing undefined values in the length\n\tmodule.exports = function(theArguments) {\n\t    var args = Array.prototype.slice.call(theArguments, 0)\n\t\n\t    var count = 0;\n\t    for(var n=args.length-1; n>=0; n--) {\n\t        if(args[n] === undefined)\n\t            count++\n\t        else\n\t            break\n\t    }\n\t    args.splice(args.length-count, count)\n\t    return args\n\t}\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\t// Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\tvar splitPathRe =\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\tvar splitPath = function(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t};\n\t\n\t// path.resolve([from ...], to)\n\t// posix version\n\texports.resolve = function() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\t\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\n\t\n\t    // Skip empty and invalid entries\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\t\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  }\n\t\n\t  // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t\n\t  // Normalize the path\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n\t};\n\t\n\t// path.normalize(path)\n\t// posix version\n\texports.normalize = function(path) {\n\t  var isAbsolute = exports.isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/';\n\t\n\t  // Normalize the path\n\t  path = normalizeArray(filter(path.split('/'), function(p) {\n\t    return !!p;\n\t  }), !isAbsolute).join('/');\n\t\n\t  if (!path && !isAbsolute) {\n\t    path = '.';\n\t  }\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\t\n\t  return (isAbsolute ? '/' : '') + path;\n\t};\n\t\n\t// posix version\n\texports.isAbsolute = function(path) {\n\t  return path.charAt(0) === '/';\n\t};\n\t\n\t// posix version\n\texports.join = function() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return exports.normalize(filter(paths, function(p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\t    return p;\n\t  }).join('/'));\n\t};\n\t\n\t\n\t// path.relative(from, to)\n\t// posix version\n\texports.relative = function(from, to) {\n\t  from = exports.resolve(from).substr(1);\n\t  to = exports.resolve(to).substr(1);\n\t\n\t  function trim(arr) {\n\t    var start = 0;\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\t\n\t    var end = arr.length - 1;\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\t\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\t\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var outputParts = [];\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\t\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t\n\t  return outputParts.join('/');\n\t};\n\t\n\texports.sep = '/';\n\texports.delimiter = ':';\n\t\n\texports.dirname = function(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\t\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\t\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\t\n\t  return root + dir;\n\t};\n\t\n\t\n\texports.basename = function(path, ext) {\n\t  var f = splitPath(path)[2];\n\t  // TODO: make this comparison case-insensitive on windows?\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\t  return f;\n\t};\n\t\n\t\n\texports.extname = function(path) {\n\t  return splitPath(path)[3];\n\t};\n\t\n\tfunction filter (xs, f) {\n\t    if (xs.filter) return xs.filter(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (f(xs[i], i, xs)) res.push(xs[i]);\n\t    }\n\t    return res;\n\t}\n\t\n\t// String.prototype.substr - negative index don't work in IE8\n\tvar substr = 'ab'.substr(-1) === 'b'\n\t    ? function (str, start, len) { return str.substr(start, len) }\n\t    : function (str, start, len) {\n\t        if (start < 0) start = str.length + start;\n\t        return str.substr(start, len);\n\t    }\n\t;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// utilities needed by the configuration (excludes dependencies the configs don't need so the webpack bundle is lean)\r\n\t\r\n\tvar path = __webpack_require__(33)\r\n\t\r\n\t\r\n\t// Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\r\n\t// any number of objects can be passed into the function and will be merged into the first argument in order\r\n\t// returns obj1 (now mutated)\r\n\tvar merge = exports.merge = function(obj1, obj2/*, moreObjects...*/){\r\n\t    return mergeInternal(arrayify(arguments), false)\r\n\t}\r\n\t\r\n\t// like merge, but traverses the whole object tree\r\n\t// the result is undefined for objects with circular references\r\n\tvar deepMerge = exports.deepMerge = function(obj1, obj2/*, moreObjects...*/) {\r\n\t    return mergeInternal(arrayify(arguments), true)\r\n\t}\r\n\t\r\n\tfunction mergeInternal(objects, deep) {\r\n\t    var obj1 = objects[0]\r\n\t    var obj2 = objects[1]\r\n\t\r\n\t    for(var key in obj2){\r\n\t       if(Object.hasOwnProperty.call(obj2, key)) {\r\n\t            if(deep && obj1[key] instanceof Object && obj2[key] instanceof Object) {\r\n\t                mergeInternal([obj1[key], obj2[key]], true)\r\n\t            } else {\r\n\t                obj1[key] = obj2[key]\r\n\t            }\r\n\t       }\r\n\t    }\r\n\t\r\n\t    if(objects.length > 2) {\r\n\t        var newObjects = [obj1].concat(objects.slice(2))\r\n\t        return mergeInternal(newObjects, deep)\r\n\t    } else {\r\n\t        return obj1\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction arrayify(a) {\r\n\t    return Array.prototype.slice.call(a, 0)\r\n\t}\r\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\t\n\tprocess.nextTick = (function () {\n\t    var canSetImmediate = typeof window !== 'undefined'\n\t    && window.setImmediate;\n\t    var canMutationObserver = typeof window !== 'undefined'\n\t    && window.MutationObserver;\n\t    var canPost = typeof window !== 'undefined'\n\t    && window.postMessage && window.addEventListener\n\t    ;\n\t\n\t    if (canSetImmediate) {\n\t        return function (f) { return window.setImmediate(f) };\n\t    }\n\t\n\t    var queue = [];\n\t\n\t    if (canMutationObserver) {\n\t        var hiddenDiv = document.createElement(\"div\");\n\t        var observer = new MutationObserver(function () {\n\t            var queueList = queue.slice();\n\t            queue.length = 0;\n\t            queueList.forEach(function (fn) {\n\t                fn();\n\t            });\n\t        });\n\t\n\t        observer.observe(hiddenDiv, { attributes: true });\n\t\n\t        return function nextTick(fn) {\n\t            if (!queue.length) {\n\t                hiddenDiv.setAttribute('yes', 'no');\n\t            }\n\t            queue.push(fn);\n\t        };\n\t    }\n\t\n\t    if (canPost) {\n\t        window.addEventListener('message', function (ev) {\n\t            var source = ev.source;\n\t            if ((source === window || source === null) && ev.data === 'process-tick') {\n\t                ev.stopPropagation();\n\t                if (queue.length > 0) {\n\t                    var fn = queue.shift();\n\t                    fn();\n\t                }\n\t            }\n\t        }, true);\n\t\n\t        return function nextTick(fn) {\n\t            queue.push(fn);\n\t            window.postMessage('process-tick', '*');\n\t        };\n\t    }\n\t\n\t    return function nextTick(fn) {\n\t        setTimeout(fn, 0);\n\t    };\n\t})();\n\t\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/* Copyright (c) 2013 Billy Tetrud - Free to use for any purpose: MIT License*/\r\n\t\r\n\tvar prototypeName='prototype', undefined, protoUndefined='undefined', init='init', ownProperty=({}).hasOwnProperty; // minifiable variables\r\n\tfunction proto() {\r\n\t    var args = arguments // minifiable variables\r\n\t\r\n\t    if(args.length == 1) {\r\n\t        var parent = {}\r\n\t        var prototypeBuilder = args[0]\r\n\t\r\n\t    } else { // length == 2\r\n\t        var parent = args[0]\r\n\t        var prototypeBuilder = args[1]\r\n\t    }\r\n\t\r\n\t    // special handling for Error objects\r\n\t    var namePointer = {}\r\n\t    if([Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError].indexOf(parent) !== -1) {\r\n\t        parent = normalizeErrorObject(parent, namePointer)\r\n\t    }\r\n\t\r\n\t    // set up the parent into the prototype chain if a parent is passed\r\n\t    var parentIsFunction = typeof(parent) === \"function\"\r\n\t    if(parentIsFunction) {\r\n\t        prototypeBuilder[prototypeName] = parent[prototypeName]\r\n\t    } else {\r\n\t        prototypeBuilder[prototypeName] = parent\r\n\t    }\r\n\t\r\n\t    // the prototype that will be used to make instances\r\n\t    var prototype = new prototypeBuilder(parent)\r\n\t    prototype.constructor = ProtoObjectFactory;    // set the constructor property on the prototype\r\n\t    namePointer.name = prototype.name\r\n\t\r\n\t    // if there's no init, assume its inheriting a non-proto class, so default to applying the superclass's constructor.\r\n\t    if(!prototype[init] && parentIsFunction) {\r\n\t        prototype[init] = function() {\r\n\t            parent.apply(this, arguments)\r\n\t        }\r\n\t    }\r\n\t\r\n\t    // constructor for empty object which will be populated via the constructor\r\n\t    var F = function() {}\r\n\t        F[prototypeName] = prototype    // set the prototype for created instances\r\n\t\r\n\t    function ProtoObjectFactory() {     // result object factory\r\n\t        var x = new F()                 // empty object\r\n\t\r\n\t        if(prototype[init]) {\r\n\t            var result = prototype[init].apply(x, arguments)    // populate object via the constructor\r\n\t            if(result === proto[protoUndefined])\r\n\t                return undefined\r\n\t            else if(result !== undefined)\r\n\t                return result\r\n\t            else\r\n\t                return x\r\n\t        } else {\r\n\t            return x\r\n\t        }\r\n\t    }\r\n\t\r\n\t    // add all the prototype properties onto the static class as well (so you can access that class when you want to reference superclass properties)\r\n\t    for(var n in prototype) {\r\n\t        addProperty(ProtoObjectFactory, prototype, n)\r\n\t    }\r\n\t\r\n\t    // add properties from parent that don't exist in the static class object yet (to get thing in like\r\n\t    for(var n in parent) {\r\n\t        if(Object.hasOwnProperty.call(parent, n) && ProtoObjectFactory[n] === undefined) {\r\n\t            addProperty(ProtoObjectFactory, parent, n)\r\n\t        }\r\n\t    }\r\n\t\r\n\t    ProtoObjectFactory[prototypeName] = prototype  // set the prototype on the object factory\r\n\t\r\n\t    return ProtoObjectFactory;\r\n\t}\r\n\t\r\n\tproto[protoUndefined] = {} // a special marker for when you want to return undefined from a constructor\r\n\t\r\n\tmodule.exports = proto\r\n\t\r\n\tfunction normalizeErrorObject(ErrorObject, namePointer) {\r\n\t    function NormalizedError() {\r\n\t        var tmp = new ErrorObject(arguments[0])\r\n\t        tmp.name = namePointer.name\r\n\t\r\n\t        this.message = tmp.message\r\n\t        if(Object.defineProperty) {\r\n\t            /*this.stack = */Object.defineProperty(this, 'stack', { // getter for more optimizy goodness\r\n\t                get: function() {\r\n\t                    return tmp.stack\r\n\t                }\r\n\t            })\r\n\t        } else {\r\n\t            this.stack = tmp.stack\r\n\t        }\r\n\t\r\n\t        return this\r\n\t    }\r\n\t        var IntermediateInheritor = function() {}\r\n\t            IntermediateInheritor.prototype = ErrorObject.prototype\r\n\t        NormalizedError.prototype = new IntermediateInheritor()\r\n\t    return NormalizedError\r\n\t}\r\n\t\r\n\tfunction addProperty(factoryObject, prototype, property) {\r\n\t    try {\r\n\t        var info = Object.getOwnPropertyDescriptor(prototype, property)\r\n\t        if(info.get !== undefined || info.get !== undefined && Object.defineProperty !== undefined) {\r\n\t            Object.defineProperty(factoryObject, property, info)\r\n\t        } else {\r\n\t            factoryObject[property] = prototype[property]\r\n\t        }\r\n\t    } catch(e) {\r\n\t        // do nothing, if a property (like `name`) can't be set, just ignore it\r\n\t    }\r\n\t}\n\n/***/ }\n/******/ ])\n});\n\n\n\n/** WEBPACK FOOTER **\n ** Gem.umd.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 13d17bc9b9f21ebfb823\n **/","var exports = module.exports = require('Gem')\nexports.Style = require('Style')\n\nexports.Canvas = require('Components/Canvas')\nexports.Block = require(\"Components/Block\")\nexports.Button = require(\"Components/Button\")\nexports.CheckBox = require(\"Components/CheckBox\")\nexports.Image = require('Components/Image')\nexports.List = require('Components/List')\n//exports.MultiSelect = require(\"Components/MultiSelect\") // not ready yet\nexports.Radio = require(\"Components/Radio\")\nexports.Select = require(\"Components/Select\")\nexports.Svg = require(\"Components/Svg\")\nexports.Table = require(\"Components/Table\")\nexports.TextArea = require(\"Components/TextArea\")\nexports.TextField = require(\"Components/TextField\")\nexports.Text = require(\"Components/Text\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Gem.browser.js\n ** module id = 0\n ** module chunks = 0\n **/","var EventEmitterB = require('EventEmitterB')\nvar proto = require(\"proto\");\nvar trimArguments = require(\"trimArguments\")\nvar observe = require('observe')\n\nvar utils = require('./utils')\nvar domUtils = require('./domUtils')\nvar blockStyleUtils = require(\"./blockStyleUtils\")\n\nvar devFlag = require(\"devFlag\")\n\nvar Style = require(\"./Style\")\nStyle.isDev = function() {return devFlag.dev}\n\nvar components = {};\n\nvar setOfBrowserEvents = utils.arrayToMap([\n    'abort','afterprint','animationend','animationiteration','animationstart','audioprocess','beforeprint','beforeunload',\n    'beginEvent','blocked','blur','cached','canplay','canplaythrough','change','chargingchange','chargingtimechange',\n    'checking','click','close','compassneedscalibration','complete','compositionend','compositionstart','compositionupdate','contextmenu',\n    'copy','cut','dblclick','decivelight','devicemotion','deviceorientation','deviceproximity','dischargingtimechange','DOMContentLoaded',\n    'downloading','drag','dragend','dragenter','dragleave','dragover','dragstart','drop','durationchange','emptied','ended','endEvent',\n    'error','focus','focusin','focusout','fullscreenchange','fullscreenerror','gamepadconnected','gamepaddisconnected','hashchange',\n    'input','invalid','keydown','keypress','keyup','languagechange','levelchange','load','loadeddata','loadedmetadata','loadend',\n    'loadstart','message','mousedown','mouseenter','mouseleave','mousemove','mouseout','mouseover','mouseup','noupdate','obsolete',\n    'offline','online','open','orientationchange','pagehide','pageshow','paste','pause','pointerlockchange','pointerlockerror','play',\n    'playing','popstate','progress','ratechange','readystatechange','repeatEvent','reset','resize','scroll','seeked','seeking','select',\n    'show','stalled','storage','submit','success','suspend','SVGAbort','SVGError','SVGLoad','SVGResize','SVGScroll','SVGUnload','SVGZoom',\n    'timeout','timeupdate','touchcancel','touchend','touchenter','touchleave','touchmove','touchstart','transitionend','unload',\n    'updateready','upgradeneeded','userproximity','versionchange','visibilitychange','volumechange','waiting','wheel'\n])\n\n// events:\n    // newParent - emits this when a component gets a new parent\n    // parentRemoved - emits this when a component is detached from its parent\nvar Gem = module.exports = proto(EventEmitterB,function(superclass) {\n\n    // static properties\n\n    this.name = 'Gem'\n\n    // constructor\n\tthis.init = function() {\n        var that = this\n\n        if(this.name === 'Gem') {\n            throw new Error(\"The 'name' property is required for Gem (it must be set to something that isn't 'Gem')\")\n        }\n\n        superclass.init.call(this)\n\n        this.attached = false\n        if(this.children === undefined) this.children = [] // allow inheriting objects to create their own children array before calling this constructor\n        this.state = observe({})\n        this.parent = undefined;\n        this._styleSetupInfo = []\n        this._nativePseudoclassMap = {}\n\n\t\tif (this.id !== undefined) {\n\t\t\tcomponents[this.id] = this;\n\t\t}\n\n        if(this.domNode === undefined) {\n            this.domNode = domUtils.div()\n        }\n\n        this.build.apply(this, arguments)\n\n        //if(devFlag.dev) {\n            this.attr('gem', this.name)\n        //}\n\n\n        this.domNode.className += ' '+Style.defaultClassName // add the default class\n        /*if(this._style === undefined) { // if a style wasn't set by this.build\n            this.style = undefined // initialize style to its gem or inherited default\n        }*/\n\n        // set up dom event handlers\n        var ifonHandlers={}\n        that.ifon(function(event) {\n            if(event in setOfBrowserEvents && (that.excludeDomEvents === undefined || !(event in that.excludeDomEvents))) {\n                that.domNode.addEventListener(event, ifonHandlers[event]=function() {\n                    that.emit.apply(that, [event].concat(Array.prototype.slice.call(arguments)))\n                })\n            }\n        })\n        that.ifoff(function(event) {\n            if(event in setOfBrowserEvents && (that.excludeDomEvents === undefined || !(event in that.excludeDomEvents))) {\n                that.domNode.removeEventListener(event,ifonHandlers[event])\n            }\n        })\n\t}\n\n    // sub-constructor - called by the constructor\n    // can be overridden as a constructor that requires less boilerplate\n    this.build = function() {}\n\n\n\t// instance properties\n\n\n\tthis.domNode;\n    this.label;        // a static label that can be used for styling\n    this.excludeDomEvents;\n    this.children;     // a list of child components that are a part of a Gem object (these are used so Styles can be propogated down to child components)\n\n\n    Object.defineProperty(this, 'label', {\n        get: function() {\n            return this._label\n        }, set: function(v) {\n            if(this._label === undefined) {\n                this._label = v\n\n                //if(devFlag.dev) {\n                    this.attr('label', this._label)\n                //}\n            } else {\n                throw new Error(\"A Gem's label can only be set once (was already set to: \"+this._label+\")\")\n            }\n        }\n    })\n\n    // adds elements to the components main domNode\n    // arguments can be one of the following:\n        // component, component, component, ...\n        // listOfGems\n    this.add = function() {\n        this.addAt.apply(this, [this.domNode.children.length].concat(trimArguments(arguments)))\n\t}\n\n    // adds nodes at a particular index\n    // nodes can be one of the following:\n        // component, component, component, ...\n        // listOfGems\n    // todo: look into using document fragments to speed this up when multiple nodes are being added\n    this.addAt = function(index/*, nodes...*/) {\n        var nodes = normalizeAddAtArguments.apply(this, arguments)\n\n        for (var i=0;i<nodes.length;i++) {\n\t\t\tvar node = nodes[i];\n\n            // remove the node from its current parent if necessary\n            if(node.parent !== undefined) {\n                throw new Error('Node at index '+i+' already has a parent. Remove the node from its parent before adding it somewhere else.')\n            }\n\n            this.children.splice(index+i, 0, node)\n\n            if(!isGem(node)) {\n                throw new Error(\"node is not a Gem\")\n            }\n\n            var beforeChild = this.children[1+i+index]\n            if(beforeChild === undefined) {\n                this.domNode.appendChild(node.domNode)\n            } else {\n                this.domNode.insertBefore(node.domNode, beforeChild.domNode)\n            }\n\n            node.parent = this;\n            node.emit('newParent')\n\t\t}\n\n        if(this.attached) {\n            for (var i=0;i<nodes.length;i++) {\n                var node = nodes[i]\n                blockStyleUtils.setAttachStatus(node,true) // must be done before setting the style (unsure why at the moment)\n                node.style = node._style // rerender its style\n            }\n        }\n    }\n\n\t// add a list of nodes before a particular node\n    // if beforeChild is undefined, this will append the given nodes\n    // arguments can be one of the following:\n        // component, component, component, ...\n        // listOfGems\n    this.addBefore = this.addBeforeNode = function(beforeChild) {\n        var nodes = trimArguments(arguments).slice(1)\n        if(beforeChild === undefined) {\n            this.add.apply(this, nodes)\n        } else {\n            var index = this.children.indexOf(beforeChild)\n            this.addAt.apply(this, [index].concat(nodes))\n        }\n    }\n\n\n    // arguments can be one of the following:\n        // component, component, component, ...\n        // index, index, index, ... - each index is the numerical index to remove\n        // arrayOfComponents\n        // arrayOfIndexes\n    this.remove = function() {\n        var removals = normalizeRemoveArguments.apply(this, arguments)\n        removals = removals.sort(function(a,b) {\n            return b-a // reverse sort (so that removing multiple indexes doesn't mess up)\n        })\n\n        for(var n=0; n<removals.length; n++) {\n            var r = removals[n]\n            var c = this.children[r]\n\n            if(c === undefined) {\n                throw new Error(\"There is no child at index \"+r)\n            }\n\n            c.parent = undefined\n            this.children.splice(r, 1)\n            this.domNode.removeChild(this.domNode.childNodes[r])\n\n            c.emit('parentRemoved')\n            if(this.attached) {\n                c.emit(\"detach\")\n            }\n        }\n    }\n\n    // sets or gets an attribute on the components domNode\n    // parameter sets:\n    // if one argument is passed, the attribute's value is returned (if there is no attribute, undefined is returned)\n    // if there are two arguments passed, the attribute is set\n        // if 'value' is undefined, the attribute is removed\n    this.attr = function(/*attribute, value OR attributeObject*/) {\n        if(arguments.length === 1) {\n            if(arguments[0] instanceof Object) {\n                var attributes = arguments[0]\n                for(var attribute in attributes) {\n                    domUtils.setAttribute(this.domNode, attribute, arguments[0][attribute])\n                }\n            } else {\n                var attribute = this.domNode.getAttribute(arguments[0])\n                if(attribute === null) {\n                    return undefined // screw null\n                } else {\n                    return attribute\n                }\n            }\n        } else {\n            var attribute = arguments[0]\n            if(arguments[1] !== undefined) {\n                var value = arguments[1]\n                domUtils.setAttribute(this.domNode, arguments[0], value)\n            } else {\n                this.domNode.removeAttribute(attribute)\n            }\n        }\n    }\n\n    Object.defineProperty(this, 'visible', {\n        // returns true if the element is visible\n        get: function() {\n            return this.domNode.style.display !== 'none';\n\n        // sets whether or not the element is visible\n        }, set: function(setToVisible) {\n            if(setToVisible) {\n                if (this._displayStyle !== undefined) {\n                    this.domNode.style.display = this._displayStyle // set back to its previous inline style\n                    this._displayStyle = undefined\n                } else {\n                    this.domNode.style.display = ''\n                }\n            } else {\n                if(this.domNode.style.display !== '' && this.domNode.style.display !== 'none') { // domNode has inline style\n                    this._displayStyle = this.domNode.style.display\n                }\n\n                this.domNode.style.display = 'none'\n            }\n        }\n    })\n\n\n    Object.defineProperty(this, 'focus', {\n        // returns true if the element is in focus\n        get: function() {\n            return document.activeElement === this.domNode\n\n        // sets whether or not the element is in focus (setting it to true gives it focus, setting it to false blurs it)\n        }, set: function(setToInFocus) {\n            if(setToInFocus) {\n                this.domNode.focus()\n            } else {\n                this.domNode.blur()\n            }\n        }\n    })\n\n    Object.defineProperty(this, 'style', {\n        get: function() {\n            return this._style\n\n        // sets the style, replacing one if one already exists\n        }, set: function(style) {\n            // get active style\n                // mix the gem-default style with ..\n                // .. the current style\n                // .. style returned by the $state of current style\n                // .. $$pseudoclasses of current + $state styles\n\n            if(style === undefined || blockStyleUtils.isStyleObject(style)) {\n                this._style = style\n            } else {\n                this._style = Style(style)\n            }\n\n            if(this.attached) {\n                var newStyle = getStyle(this)  // must be called after setting _style\n                var defaultStyle = this.getDefaultStyle()\n\n                var newCurrentStyle = blockStyleUtils.mixStyles(defaultStyle, newStyle)\n                blockStyleUtils.setCurrentStyle(this, newCurrentStyle, defaultStyle)\n            }\n        }\n    })\n\n    Object.defineProperty(this, 'selectionRange', {\n        // returns the visible character selection range inside the element\n        // returns an array like [offsetStart, offsetEnd]\n        get: function() {\n            return domUtils.getSelectionRange(this.domNode)\n\n        // sets the visible character selection range\n        }, set: function(selection) {\n            domUtils.setSelectionRange(this.domNode, selection[0], selection[1])\n        }\n    })\n\n    this.attach = function(domNode) {\n        if(domNode !== undefined)\n            attach(domNode, this)\n        else\n            attach(this)\n    }\n    this.detach = function(domNode) {\n        if(domNode !== undefined)\n            detach(domNode, this)\n        else\n            detach(this)\n    }\n\n    this.proxy = function(emitter, options) {\n        if(options === undefined) options = {except:[]}\n        if(options.except !== undefined) {\n            options.except = options.except.concat(['newParent','parentRemoved'])\n        }\n\n        return superclass.proxy.apply(this,[emitter,options])\n    }\n\n\n\t// private instance variables/functions\n\n    this.computedStyleMap;  // a map of style objects computed from the Styles set on a given component and its parent components\n    this._nativePseudoclassMap; // a map of Gem names to a set of native pseudoclass styles and their css selector base (eg: {GemA: {'.style1:required .style2': styleObject}}\n\n\tthis._style;             // the object's explicit Style object (undefined if it inherits a style)\n    this._currentStyle;      // the object's current Style that will only change if its parent's activeStyle changes, or if a style is explicitly reset on the gem\n    this._activeStyle;       // the active style depending on pseudoclasses, $state, and defaultStyle\n\n    this._displayStyle;      // temporarily stores an inline display style while the element is hidden (for use when 'show' is called)\n    this._styleSetupInfo   // place to put states for setup functions (used for css pseudoclass emulation)\n    this._stateChangeHandler // the handler being used for $state style changes\n\n    this.attached           // set to true if the gem has been attached to the document (or if one of its ancestors has been)\n\n\n    // returns the default style of the current Gem based on the 'defaultStyle' property set on its constructor (this.constructor)\n    // if there is more than one default style, they are merged in order\n    // if there is no default style, undefined is returned\n    this.getDefaultStyle = function() {\n        return blockStyleUtils.getDefaultStyle(this)\n    }\n\n    // gets the high-level style of the gem, either from the gem's explicit style, or inherits from its parent's style map\n    function getStyle(gem) {\n        if(gem._style !== undefined) {            // use the gem's explicit style if possible\n            if(gem._style.inherit) {\n                var styleToInerit = blockStyleUtils.getInheritingStyle(gem)\n                if(styleToInerit !== undefined)\n                    return styleToInerit.mix(gem._style, false)\n            }\n            // else\n            return gem._style\n\n        } else {     // otherwise use the parent's computedStyleMap\n            return blockStyleUtils.getInheritingStyle(gem)\n        }\n    }\n});\n\n\nObject.defineProperty(module.exports, 'dev', {\n    get: function() {\n        return devFlag.dev\n    }, set: function(v) {\n        devFlag.dev = v\n    }\n})\n\n// appends components to the passed domNode (default: body)\nvar attach = module.exports.attach = function(/*[domNode,] component or components*/) {\n    if(arguments.length > 1) {\n        var domNode = arguments[0]\n        var components = arguments[1]\n    } else {\n        if(document.body === null) throw new Error(\"Your document does not have a body.\")\n        var domNode = document.body\n        var components = arguments[0]\n    }\n\n    if(!(components instanceof Array)) {\n        var components = [components]\n    }\n\n    for(var n=0; n<components.length; n++) {\n        domNode.appendChild(components[n].domNode)\n\n        blockStyleUtils.setAttachStatus(components[n], true) // must be done before setting the style (unsure why at the moment)\n        components[n].style = components[n]._style   // force style rendering\n    }\n\n\n}\n// removes components from their parents\nvar detach = module.exports.detach = function(components) {\n    if(!(components instanceof Array)) {\n        components = [components]\n    }\n\n    for(var n=0; n<components.length; n++) {\n        var gem = components[n]\n        gem.domNode.parentNode.removeChild(gem.domNode)\n\n        blockStyleUtils.setAttachStatus(gem, false)\n    }\n}\n\n// creates a body tag (only call this if document.body is null)\n\nmodule.exports.createBody = function(callback) {\n    var dom = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n    var body = dom.createElement(\"body\")\n    dom.documentElement.appendChild(body)\n    setTimeout(function() {  // set timeout is needed because the body tag is only added after javascript goes back to the scheduler\n        callback()\n    },0)\n}\n\n\n\n\n// returns a list of indexes to remove from Gem.remove's arguments\n/*private*/ var normalizeRemoveArguments = module.exports.normalizeRemoveArguments = function() {\n    var that = this\n\n    if(arguments[0] instanceof Array) {\n        var removals = arguments[0]\n    } else {\n        var removals = Array.prototype.slice.call(arguments)\n    }\n\n    return removals.map(function(removal, parameterIndex) {\n        if(isGem(removal)) {\n            var index = that.children.indexOf(removal)\n            if(index === -1) {\n                throw new Error(\"The Gem passed at argument index \"+parameterIndex+\" is not a child of this Gem.\")\n            }\n            return index\n        } else {\n            return removal\n        }\n\n    })\n}\n\n// returns a list of nodes to add\n/*private*/ var normalizeAddAtArguments = module.exports.normalizeAddAtArguments = function() {\n    if(arguments.length === 2) {\n        if(arguments[1] instanceof Array) {\n            return arguments[1]\n        } else {\n            return [arguments[1]]\n        }\n    } else { // > 2\n        return trimArguments(arguments).slice(1)\n    }\n}\n\nfunction isGem(c) {\n    return c.add !== undefined && c.children instanceof Array && c.domNode !== undefined\n}\nfunction isDomNode(node) {\n    return node.nodeName !== undefined\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Gem.js\n ** module id = 1\n ** module chunks = 0\n **/","var jssModule = require(\"../external/jss\")\nvar proto = require('proto')\nvar HashMap = require('hashmap')\n\nvar utils = require(\"./utils\")\n\nvar baseClassName = '_ComponentStyle_' // the base name for generated class names\nvar nextClassNumber = 0\n\n\nvar mixedStyles = new HashMap() // maps from a pair of Style objects to the resulting mixed style\n\n// creates a style object\nvar Style = module.exports = proto(function() {\n\n    // static properties\n\n    // transforms the output of Style.toString() back into a Style object\n    this.fromString = function(styleString, context) {\n        if(context === undefined) context = {}\n        var obj = JSON.parse(styleString)\n\n        var transformFunctionStringsToFunctions = function(obj) {\n            for(var p in obj) {\n                var x = obj[p]\n                if(x instanceof Object) {\n                    transformFunctionStringsToFunctions(x)\n                } else if(typeof(x) === 'string' && x.substr(0,8) === 'function') {\n                    if(context.Style === undefined) {\n                        context.Style = Style\n                    }\n\n                    var keys=[], values=[]\n                    for(var key in context) {\n                        keys.push(key)\n                        values.push(context[key])\n                    }\n\n                    obj[p] = Function(keys, 'return '+x).apply(undefined, values)\n                }\n            }\n        }\n\n        transformFunctionStringsToFunctions(obj)\n\n        return Style(obj)\n    }\n\n    // instance properties\n\n    this.defaultClassName = '_default_'     // the name of the default class (used to prevent style inheritance)\n\n    // styleDefinition is an object where key-value pairs can be any of the following:\n    // <cssPropertyName>: the value should be a valid css value for that style attribute\n    // <ComponentName>: the value can either be a Style object or a nested styleDefinition object\n    // $setup: the value is a function to be run on a component when the style is applied to it\n    // $kill: the value is a function to be run on a component when a style is removed from it\n    // $state: the value should be a state handler function\n    // $<label>: the value should be a nested styleDefinition object that does not contain any label styles.\n    // $inherit: this style should inherit from whatever style would otherwise have been in its placed if it was undefined\n    this.init = function(styleDefinition, privateOptions) {\n        if(isStyleObject(styleDefinition))\n            return styleDefinition\n        // else\n\n        if(privateOptions === undefined) privateOptions = {}\n\n        this.className = baseClassName+nextClassNumber\n        nextClassNumber++\n\n        this.componentStyleMap = {}\n        this.nativeCssInfoCache = new HashMap\n//        this.pureStyleInteractionCache = new HashMap\n        this.nativePseudoclassesWritten = {}\n        this.basicProperties = {}\n        if(Style.isDev()) this.nativePseudoclassStyles = {}\n\n        var flatPseudoClassStyles = new HashMap\n        for(var key in styleDefinition) {\n            var value = styleDefinition[key]\n\n            if(key === '$setup') {\n                if(!(value instanceof Function)) throw new Error(\"$setup key must be a function ('setup' can't be used as a label)\")\n                this.setup = value\n\n            } else if(key === '$kill') {\n                if(!(value instanceof Function)) throw new Error(\"$kill key must be a function ('kill' can't be used as a label)\")\n                this.kill = value\n\n            } else if(key === '$state') {\n                if(!(value instanceof Function)) throw new Error(\"$state key must be a function ('$state' can't be used as a label)\")\n                this.stateHandler = value\n\n            } else if(key === '$inherit') {\n                this.inherit = true\n\n            } else if(key.indexOf('$$') === 0) { // pseudo-class style\n                var parts = getPseudoClassParts(key.substr(2))\n                var pseudoClass = mapCamelCase(parts.class)\n                if(parts.parameter !== undefined) {\n                    pseudoClass+='('+parts.parameter+\")\"\n                }\n\n                if(pseudoClass === '') {\n                    throw new Error(\"Empty pseudo-class name not valid (style key '$$')\")\n                }\n\n                var flattenedPseudoclassObject = flattenPseudoClassStyles([pseudoClass], Style(value))\n\n                // mix in the resulting compound pseudoclass styles with what has already been found\n                flattenedPseudoclassObject.forEach(function(style, key) {\n                    styleHashmapMerge(flatPseudoClassStyles, key, style)\n                })\n\n            } else if(key === '$') {\n                throw new Error(\"Empty label name not valid (style key '$')\")\n            } else if(value instanceof Object || isStyleObject(value)) {  // $label or Gem style\n                this.componentStyleMap[key] = Style(value)  // turn the object description into a full fledged style object (or pass back the object if its already a Style)\n            } else if(value === undefined) {\n                // ignore\n            } else {\n                var cssStyle = key\n                var cssStyleName = mapCamelCase(cssStyle)\n                this.basicProperties[cssStyleName] = cssValue(cssStyleName, value)\n            }\n        }\n\n        this.pseudoclasses = processFlattenedPseudoclasses(flatPseudoClassStyles, this.componentStyleMap)\n        this.pureNative = isPureNative(this)\n\n\n        // takes in a list of pseudoClassRules and changes any nesting like {$$hover: {$$focus: {}}} into something like {hover: {}, ['hover','focus']: {}}\n        // returns a new HashMap where\n            // each key is the list of pseudoclasses that need to apply for that style to take effect, and\n            // each value is a Style object\n        // also does some validation\n        // pseudoClasses - an array of pseudoclasses\n        // pseudoClassStyle - a Style object representing the style inside the pseudoclass\n        function flattenPseudoClassStyles(pseudoClasses, pseudoClassStyle) {\n\n            if(pseudoClassStyle.stateHandler !== undefined) {\n                throw new Error('$state style functions are not valid directly inside psuedoclasses')\n            }\n\n            var flattenedStyles = new HashMap\n            var pseudoClassStyleCopy = pseudoClassStyle.copy() // copy so you're not clobbering a style something else relies on\n\n            var pseudoclasses = pseudoClassStyleCopy.pseudoclasses\n\n            // remove the pseudoclasses\n            pseudoClassStyleCopy.pseudoclasses = {classes:new HashMap,emulatedInfo:{}}//{native:new HashMap,emulated:new HashMap,emulatedInfo:{}, emulatedOrder:[]}\n\n            // write the top-level pseudoClass\n            flattenedStyles.set(pseudoClasses, pseudoClassStyleCopy)\n\n            // create flattened styles (with merged in styles from its parent pseudoclass\n\n            pseudoclasses.classes.forEach(function(substyle, subPseudoClass){\n                var newCompoundSelector = canonicalizeCompoundPseudoclass(pseudoClasses.concat(subPseudoClass))\n                var mixedStyle = pseudoClassStyleCopy.mix(substyle, false)\n                flattenedStyles.set(newCompoundSelector, mixedStyle)\n            })\n\n            return flattenedStyles\n        }\n\n        // pseudoclassList - the list of pseudoclasses that make up the key\n        // mutates pseudoclassList into a canonicalized list\n        function canonicalizeCompoundPseudoclass(pseudoclassList) {\n            pseudoclassList.sort()  // some string sort to canonicalize the list of pseudoclasses (not really important how it sorts exactly, just that its consistent)\n\n            // remove duplicates\n            var lastKey = pseudoclassList[0]\n            for(var n=1; n<pseudoclassList.length;) {\n                if(pseudoclassList[n] === lastKey) {\n                    pseudoclassList.splice(n,1)\n                } else {\n                    n++\n                }\n            }\n\n            return pseudoclassList\n        }\n\n\n        // merges two hashmaps together, where if the same key is set in both hashmaps, the values (being Style objects) are mixed together (styles in b overriding)\n        // mutates map\n        function styleHashmapMerge(map, newKey, newStyle) {\n            if(map.has(newKey)) {\n                var valueToSet = map.get(newKey).mix(newStyle, false)\n            } else {\n                var valueToSet = newStyle\n            }\n\n            map.set(newKey, valueToSet)\n        }\n\n        // returns an object containing the following properties\n            // classes - a hashmap object\n                // each key is a canonicalized array of pseudoclasses for only emulatable pseudoclasses, and\n                // each value is a Style object\n            // emulatedInfo - an object where\n                // each key is an individual psuedoclass selector (like the elements in a canonicalized pseudoclass list), and\n                // each value is an object containing the properties:\n                    // fns - the emulated psuedoclass functions `check`, `setup`, and `kill`\n                    // parameter - the psuedoclass parameter to pass into `check` and `setup`\n        // compoundPseudoClassStyles - a hashmap where\n            // each key is a canonicalized array of pseudoclasses, and\n            // each value is a Style object\n        function processFlattenedPseudoclasses(compoundPseudoClassStyles, componentStyleMap) {\n\n            var pseudoclasses = new HashMap\n            compoundPseudoClassStyles.forEach(function(pseudoclassStyle, key) {\n                if(pseudoclassStyle.pureNative) {\n                    // make sure the pseudoclasses are all natively renderable (any js-rendered pseudoclass that isn't marked 'emulated' is not natively emulatable)\n                    var allEmulated = true\n                    for(var n=0; n<key.length; n++) {\n                        var parts = getPseudoClassParts(key[n])\n                        var psuedoclassInfo = jsRenderedPseduoclasses[parts.class]\n                        if(psuedoclassInfo !== undefined && !psuedoclassInfo.emulated) {\n                            allEmulated = false\n                            break\n                        }\n                    }\n\n                    var componentStyleMapConflicts = false\n                    if(allEmulated) {\n                        componentStyleMapConflicts = styleMapConflicts(componentStyleMap, pseudoclassStyle.componentStyleMap)\n                    }\n\n                    pseudoclassStyle.pureNative = allEmulated && !componentStyleMapConflicts\n                }\n\n                for(var n=0; n<key.length; n++) {\n                    var parts = getPseudoClassParts(key[n])\n                    var psuedoclassInfo = jsRenderedPseduoclasses[parts.class]\n                    if(psuedoclassInfo !== undefined && psuedoclassInfo.parameterTransform !== undefined) {\n                        var transformedParameter = psuedoclassInfo.parameterTransform(parts.parameter)\n                        key[n] = parts.class+\"(\"+transformedParameter+\")\"\n                    }\n                }\n\n                pseudoclasses.set(key, pseudoclassStyle)\n            })\n\n            var emulatedInfo={}\n            pseudoclasses.forEach(function(pseudoclassStyle,individualPseudoclasses) {\n                if(!pseudoclassStyle.pureNative) {\n                    individualPseudoclasses.forEach(function(pseudoclass) {\n                        if(!(pseudoclass in emulatedInfo)) {\n                            emulatedInfo[pseudoclass] = getEmulatedInfo(pseudoclass)\n                        }\n                    })\n                }\n            })\n\n            return {classes: pseudoclasses, emulatedInfo:emulatedInfo}\n        }\n    }\n\n    // returns true if there are any styleMap conflicts, which is when any inner style of pseudoclassStyleMap collides with a non-pure style in mainStyleMap\n    function styleMapConflicts(mainStyleMap, pseudoclassStyleMap) {\n        for(var blockSelector in mainStyleMap) {\n            if(blockSelector in pseudoclassStyleMap) {\n                if(!mainStyleMap[blockSelector].pureNative) {\n                    return true\n                } else {\n                    var pseudoclassInnerStyle = pseudoclassStyleMap[blockSelector]\n                    if(styleMapConflicts(mainStyleMap, pseudoclassInnerStyle.componentStyleMap)) {\n                        return true\n                    }\n\n                    var pseudoclassStyles = pseudoclassInnerStyle.pseudoclasses.classes.values()\n                    for(var n=0; n<pseudoclassStyles.length; n++) {\n                        var pseudoclassStyle = pseudoclassStyles[n]\n                        if(styleMapConflicts(mainStyleMap, pseudoclassStyle.componentStyleMap)) {\n                            return true\n                        }\n                    }\n                }\n            }\n        }\n\n        return false\n    }\n\n\n    // returns true if there are any styleMap conflicts, which is when any inner style of pseudoclassStyleMap collides with a non-pure style in mainStyleMap\n    function styleMapConflicts(mainStyleMap, pseudoclassStyleMap) {\n        for(var blockSelector in pseudoclassStyleMap) {\n            if(blockSelector in mainStyleMap) {\n                if(!mainStyleMap[blockSelector].pureNative) {\n                    return true\n                }\n            }\n\n            var pseudoclassInnerStyle = pseudoclassStyleMap[blockSelector]\n            if(styleMapConflicts(mainStyleMap, pseudoclassInnerStyle.componentStyleMap)) {\n                return true\n            }\n\n            var pseudoclassStyles = pseudoclassInnerStyle.pseudoclasses.classes.values()\n            for(var n=0; n<pseudoclassStyles.length; n++) {\n                var pseudoclassStyle = pseudoclassStyles[n]\n                if(styleMapConflicts(mainStyleMap, pseudoclassStyle.componentStyleMap)) {\n                    return true\n                }\n            }\n        }\n\n        return false\n    }\n\n    // returns either\n        // this style if styleB is undefined, or\n        // a new Style object that merges styleB's properties into the current one such that styleB's properties override the current Style's properties\n    // mixInherit - (default: true) if false, doesn't mix in the 'inherit' property\n    this.mix = function(styleB, mixInherit) {\n        if(mixInherit === undefined) mixInherit = true\n        if(styleB === undefined || styleB === this)\n            return this\n        if(!isStyleObject(styleB)) styleB = Style(styleB)\n\n        var cacheKey = [this,styleB,mixInherit]\n        var mixedStyle = mixedStyles.get(cacheKey)\n        if(mixedStyle === undefined) {     // note: mixedStyle can only be undefined if the two style have never been mixed before\n            var mixedStyle = mixWithoutCreatingNativePseudoclasses(this, styleB, mixInherit)\n            mixedStyles.set(cacheKey, mixedStyle)\n        }\n\n        return mixedStyle\n    }\n\n    // returns a copy of the style with a new className\n    this.copy = function () {\n        return mixWithoutCreatingNativePseudoclasses(this, Style(), true)\n    }\n\n    // returns an object with the members\n        // fns - the functions for the given pseudoclass\n        // parameter - the processed parameter to pass into fns.setup\n    // pseudoclass - a pseudoclass selector (eg \"not(:required)\")\n    function getEmulatedInfo(pseudoclass) {\n        var parts = getPseudoClassParts(pseudoclass)\n        var fns = jsRenderedPseduoclasses[parts.class]\n\n        if(fns ===  undefined) {\n            throw new Error(\"Pseudoclass \"+parts.class+\" isn't emulated, but has a style that can't be rendered in pure css\")\n        }\n\n        var info = {fns: fns}\n        if(parts.parameter !== undefined) {\n            if(fns.processParameter !== undefined) {\n                info.parameter = fns.processParameter(parts.parameter)\n            } else {\n                info.parameter = parts.parameter\n            }\n        }\n\n        return info\n    }\n\n    // returns an object\n        // either with the properties:\n            // style - style that has native css properties (basic and pseudoclass) set for it and its block's computedStyleMap\n                // this return value *can* be this style itself if there are no interactions with the passed styleMap\n            // styleMap - a potentially new styleMap that has copied or inserted styles needed for native psuedoclass rendering\n            // nativePsuedoclassMap - a new pseudoclassMap to set on the block\n        // OR with the proeprties:\n            // cancel:true - exists if a pure native psuedoclass style can't be rendered native because of a collision with a computedStyleMap style that isn't pure native\n            // style - the new style to get the pseudoclass style from (and then set with setPreStyleMapStyle)\n    // styleMap - a map of style selectors (Gem names or labels) to Styles who's classNames will be used to create the native css\n        // intended to be a style map that comes from a block's computedStyleMap property\n        // the computedStyleMap can affect how sub-pseudoclass selectors are written\n    // nativePseudoclassSelectorMap - an object where each key is a base css-selector, and each value is a Style object\n    // jsRenderedPseudoclassIndex - if this style is a js-redered/emulated psueodclass, this is its index inside its parent style's pseudoclasses.classes map, otherwise the value will be 0\n    this.createNativeCssInfo = function(gem, styleMap, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle) {\n        if(this.inherit) {\n            var parentCacheKey = gem.parent\n        }\n        var cacheKey = [parentCacheKey, styleMap, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle]\n        var cacheHasStyleMap = this.nativeCssInfoCache.has(cacheKey)\n        if(cacheHasStyleMap) {\n            return this.nativeCssInfoCache.get(cacheKey)\n        }\n        // else\n        var styleToReturn = this // can change below if there is an interaction with the styleMap\n        if(this.pureNative && this.pseudoclasses.classes.keys().length !== 0) { // only care about pseudoclass interactions if it has pseudoclasses\n            var styleSelectors = containedStyleSelectors(this)\n            var info = stylesInfo(styleSelectors, styleMap)\n            var interacts = info.impure.length > 0\n            if(!interacts) {\n//                var pureStyleInteractionCacheItem = this.pureStyleInteractionCache.get(info.undef)\n//                if(pureStyleInteractionCacheItem === undefined) {\n                    var evenNewerComputedStyleMap = utils.merge({},styleMap) // copy\n                    for(var key in evenNewerComputedStyleMap) {\n                        if(key in styleSelectors) {\n                            evenNewerComputedStyleMap[key] = evenNewerComputedStyleMap[key].copy() // copy to ensure that a unique className is created (so that native pseudoclasses don't have the possibility of merging weirdly)\n                        }\n                    }\n                    for(var n=0; n<info.undef.length; n++) {\n                        evenNewerComputedStyleMap[info.undef[n]] = Style()  // empty style who's className will be used to create native pseudoclass styles\n                    }\n\n                    styleToReturn = this.copy()    // a new style className is needed to avoid potential incorrect css overlap\n                    styleMap = evenNewerComputedStyleMap\n//                    this.pureStyleInteractionCache.set(info.undef, {style:styleToReturn, map: styleMap})\n//                } else {\n//                    styleToReturn = pureStyleInteractionCacheItem.style\n//                    styleMap = pureStyleInteractionCacheItem.map\n//                }\n            } else {\n                var retryStyle = this.copy()\n                changeStyleToNonNative(retryStyle)\n\n                var result = {cancel: true, retryStyle: retryStyle}\n                setNativeCssInfoCache(this.nativeCssInfoCache, result)\n                return result\n            }\n        }\n\n        if(!styleToReturn.basicNativeCssRendered) {\n            setCss('.'+styleToReturn.className, styleToReturn.basicProperties)\n            styleToReturn.basicNativeCssRendered = true\n        }\n\n        var newNativePseudoclassMap = createNativePseudoclasses(gem, styleToReturn, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle)\n\n        var result = {style: styleToReturn, styleMap: styleMap, nativePseudoclassMap: newNativePseudoclassMap}\n        setNativeCssInfoCache(this.nativeCssInfoCache, result)\n        return result\n\n\n        // mutates the passed style so that its not native\n        function changeStyleToNonNative(style) {\n            style.pureNative = false\n            var newClasses = new HashMap\n            style.pseudoclasses.classes.forEach(function(pseudoclassStyle, individualPseudoclasses) {\n                //if(style.pureNative) { // all of these will be pureNative, or style wouldn't be\n                    var copy = pseudoclassStyle.copy()\n                    copy.pureNative = false\n                    newClasses.set(individualPseudoclasses, copy)\n\n                    individualPseudoclasses.forEach(function(pseudoclass) {\n                        if(!(pseudoclass in pseudoclassStyle.pseudoclasses.emulatedInfo)) {\n                            style.pseudoclasses.emulatedInfo[pseudoclass] = getEmulatedInfo(pseudoclass)\n                        }\n                    })\n\n                /*} else {\n                    newClasses.set(individualPseudoclasses, style)\n                }*/\n            })\n\n            style.pseudoclasses.classes = newClasses\n\n            return style\n        }\n\n        function setNativeCssInfoCache(nativeCssInfoCache, value) {\n            nativeCssInfoCache.set(cacheKey, value)\n        }\n\n        // returns the label and block selectors within the style (recursive)\n        // the grabs from both componentStyleMap and psuedoclasses.native[x].componentStyleMap\n        function containedStyleSelectors(style) {\n            var result = {}\n            for(var key in style.componentStyleMap) {\n                var innerStyle = style.componentStyleMap[key]\n                mergeInSelectors(key, innerStyle)\n            }\n\n            style.pseudoclasses.classes.forEach(function(pseudoclassStyle) {\n                if(pseudoclassStyle.pureNative) {\n                    for(var key in pseudoclassStyle.componentStyleMap) {\n                        var innerStyle = pseudoclassStyle.componentStyleMap[key]\n                        mergeInSelectors(key, innerStyle)\n                    }\n                }\n            })\n\n            return result\n\n\n            function mergeInSelectors(key, innerStyle) {\n                result[key] = true\n\n                var selectors = containedStyleSelectors(innerStyle)\n                utils.merge(result, selectors)\n            }\n        }\n\n        // returns info about what styles in styleSelectors and in newComputedStyleMap are:\n            // impure in newComputedStyleMap\n            // not defined in newComputedStyleMap\n        function stylesInfo(styleSelectors, newComputedStyleMap) {\n            var impure = []\n            var undef = []\n            for(var key in styleSelectors) {\n                var style = newComputedStyleMap[key]\n                if(style === undefined) {\n                    undef.push(key)\n                } else if(!style.pureNative) {\n                    impure.push(key)\n                }\n            }\n            return {impure:impure,undef:undef}\n        }\n    }\n\n    this.toObject = function() {\n        var object = {}\n        for(var property in this.basicProperties) {\n            object[property] = this.basicProperties[property]\n        }\n\n        if(this.inherit)\n            object.$inherit = true\n\n        for(var selector in this.componentStyleMap) {\n            object[selector] = this.componentStyleMap[selector].toObject()\n        }\n\n        var addPseudoclass = function(pseudoclassList, style) {\n            var curObject = object, lastObject, lastPseudoclass\n            pseudoclassList.forEach(function(pseudoclass) {\n                var curPseudoclass = '$$'+pseudoclass\n                if(curObject[curPseudoclass] === undefined) {\n                    curObject[curPseudoclass] = {}\n                }\n\n                lastPseudoclass = curPseudoclass\n                lastObject = curObject\n                curObject = curObject[lastPseudoclass]\n            })\n\n            var newProperties = style.toObject()\n            for(var key in newProperties) {\n                lastObject[lastPseudoclass][key] = newProperties[key] // merge\n            }\n\n        }\n\n        if(this.pseudoclasses.classes !== undefined) {\n            this.pseudoclasses.classes.forEach(function(style, pseudoclassList) {\n                addPseudoclass(pseudoclassList, style)\n            })\n        }\n\n        if(this.stateHandler !== undefined) {\n            object.$state = this.stateHandler\n        }\n        if(this.setup !== undefined) {\n            object.$setup = this.setup\n        }\n        if(this.kill !== undefined) {\n            object.$kill = this.kill\n        }\n\n        return object\n    }\n\n    // converts the style into a JSON string\n    // note that $state, $setup, and $kill functions are also stored as strings\n    this.toString = function() {\n        var obj = this.toObject()\n\n        var transformFunctionsToStrings = function(obj) {\n            for(var p in obj) {\n                var x = obj[p]\n                if(x instanceof Function) {\n                    obj[p] = x.toString()\n                } else if(x instanceof Object) {\n                    transformFunctionsToStrings(x)\n                }\n            }\n        }\n\n        transformFunctionsToStrings(obj)\n\n        return JSON.stringify(obj)\n    }\n\n    // instance properties\n\n    this.className          // the css classname for this style\n    this.componentStyleMap; // maps a Component name to a Style object for that component\n    this.setup;             // run some javascript on any element this class is applied to\n    this.kill;              // a function to run on removal of the style (should reverse setup)\n\n\n    // private properties\n\n    this.nativeCssInfoCache; // instance property that stores a map between a styleMap and a potentially modified pair: {style:<Style object>, styleMap: <computedStyleMap>}\n    this.basicNativeCssRendered; // contains true if the css class has been written to a stylesheet\n\n\n    // creates a new style with styleB mixed into styleA (styleB overrides)\n    // does not create native pseudoclass styles\n    // mixInherit - if true, mixes in the 'inherit' property, if false, 'inherit' will get undefined (same as inherit===false)\n    function mixWithoutCreatingNativePseudoclasses(styleA, styleB, mixInherit) {\n        // mix css properties and non-emulated pseudoclass properties\n        var mainStylesMerged = utils.merge({}, styleA.basicProperties, styleB.basicProperties)\n        var newStyle = Style(mainStylesMerged)\n\n        // mix block and label properties\n        newStyle.componentStyleMap = mergeComponentStyleMaps(styleA, styleB)\n\n        // mix pseudoclass properties\n        newStyle.pseudoclasses = mergePseudoclasses(styleA, styleB)\n\n        // mix $state\n        if(styleB.stateHandler !== undefined) {\n            newStyle.stateHandler = styleB.stateHandler\n        } else {\n            newStyle.stateHandler = styleA.stateHandler\n        }\n\n        // mix $setup and $kill                                                                                                                                                                                                                                                                 waaahhh hah hah haaaaaaa\n        if(styleB.setup !== undefined) {\n            newStyle.setup = styleB.setup\n        } else {\n            newStyle.setup = styleA.setup\n        }\n        if(styleB.kill !== undefined) {\n            newStyle.kill = styleB.kill\n        } else {\n            newStyle.kill = styleA.kill\n        }\n\n        if(mixInherit) {\n            newStyle.inherit = styleA.inherit || styleB.inherit\n        }\n\n        newStyle.pureNative = isPureNative(newStyle)\n\n        return newStyle\n    }\n\n    // returns a new component style map where styleB overrides styleA\n    // handles the 'inherit' option on styles\n    function mergeComponentStyleMaps(styleA, styleB) {\n        var mergedStyleMap = utils.merge({}, styleA.componentStyleMap)\n        for(var key in styleB.componentStyleMap) {\n            var styleMapping = styleB.componentStyleMap[key] // a Style object\n\n            mergedStyleMap[key] = conditionalMix(mergedStyleMap[key], styleMapping)\n        }\n\n        return mergedStyleMap\n    }\n\n    // conditionally mixes two styles\n    // returns b mixed into a if b inherits\n    // otherwise returns b\n    function conditionalMix(a,b) {\n        if(b === undefined)\n            return a\n\n        if(b.inherit) {\n            if(a === undefined)\n                return b\n            else\n                return a.mix(b, false)\n        } else {\n            return b\n        }\n    }\n\n    // returns true if the style can be rendered with pure css (no javascript needed)\n    function isPureNative(style) {\n        if(style.setup === undefined && style.kill === undefined && style.stateHandler === undefined\n        ) {\n            var allPseudoclassesNative = true\n            style.pseudoclasses.classes.forEach(function(style) {\n                if(!style.pureNative) allPseudoclassesNative = false\n            })\n            if(!allPseudoclassesNative) {\n                return false\n            }\n\n            var allPureNative = true\n            for(var key in style.componentStyleMap) {\n                if(style.componentStyleMap[key].pureNative !== true) {\n                    allPureNative = false\n                    break\n                }\n            }\n            if(!allPureNative) {\n                return false\n            }\n\n            return true\n        }\n    }\n\n    // mixes together the pseudoclass properties of two styles\n    // handles changing native pseudoclass handling to emulated (and vice versa)\n    function mergePseudoclasses(styleA, styleB) {\n        var merged = mergeStyleMaps(styleA.pseudoclasses.classes, styleB.pseudoclasses.classes)\n        var emulatedInfo = utils.merge({}, styleA.pseudoclasses.emulatedInfo, styleB.pseudoclasses.emulatedInfo)\n\n        return {classes: merged, emulatedInfo:emulatedInfo}\n\n\n        // returns a new map with mapA and mapB merged, where mapB's styles override\n        function mergeStyleMaps(styleMapA, styleMapB) {\n            var result = utils.hashmapMerge(new HashMap, styleMapA)\n            styleMapB.forEach(function(v, key) {\n                if(result.has(key)) {\n                    var resultValue = result.get(key).mix(styleMapB.get(key), true)\n                } else {\n                    var resultValue = styleMapB.get(key)\n                }\n\n                result.set(key, resultValue)\n            })\n\n            return result\n        }\n    }\n\n    var singleColonForPseudoElements = false; // may be changed if its detected that the browser does this\n    var doubleColonPseudoElRegex =      /(::)(before|after|first-line|first-letter|selection)/;\n    var singleColonPseudoElRegex = /([^:])(:)(before|after|first-line|first-letter|selection)/;\n\n    // creates a css selector with the passed properties\n    function setCss(selector, properties) {\n        var unCamelCasedProperties = {}\n        for (key in properties) {\n            unCamelCasedProperties[mapCamelCase(key)] = properties[key]\n        }\n\n        var rule = addRule(jss.defaultSheet, selector)\n        setStyleProperties(rule, properties);\n\n\n\n        function addRule(sheet, selector) {\n\t        var rules = sheet.cssRules || sheet.rules || [];\n\t        var index = rules.length;\n\n            var pseudoElementRule = addPseudoElementRule(sheet, selector, rules, index);\n            if (!pseudoElementRule) {\n                addRuleToSheet(sheet, selector, index);\n            }\n\n\t        return rules[index].style\n\t    }\n\n        // Handles single colon syntax for older browsers and bugzilla.mozilla.org/show_bug.cgi?id=949651\n        function addPseudoElementRule(sheet, selector, rules, index) {\n            var doubleColonSelector;\n            var singleColonSelector;\n\n            if (doubleColonPseudoElRegex.exec(selector)) {\n                doubleColonSelector = selector;\n                singleColonSelector = toSingleColonPseudoElements(selector);\n            } else if (singleColonPseudoElRegex.exec(selector)) {\n                doubleColonSelector = toDoubleColonPseudoElements(selector);\n                singleColonSelector = selector;\n            } else {\n                return false; // Not dealing with a pseudo element\n            }\n\n            if (!singleColonForPseudoElements) {\n                // Assume modern browser and then check if successful\n                try {\n                    addRuleToSheet(sheet, doubleColonSelector, index);\n                } catch(e) {\n                    // if there's an error, assume its because the selector was deemed invalid (firefox), so try -moz- extension\n                    addRuleToSheet(sheet, toMozDoubleColonPseudoElements(selector), index);\n                }\n                if (rules.length <= index) {\n                    singleColonForPseudoElements = true;\n                }\n            }\n            if (singleColonForPseudoElements) {\n                addRuleToSheet(sheet, singleColonSelector, index);\n            }\n\n            return true;\n        }\n\n        function addRuleToSheet(sheet, selector, index) {\n\t        if (sheet.insertRule) {\n\t            sheet.insertRule(selector + ' { }', index);\n\t        } else {\n\t            sheet.addRule(selector, null, index);\n\t        }\n\t    }\n\n        function setStyleProperties(ruleStyle, properties) {\n\t        for (var key in properties) {\n                ruleStyle.setProperty(key, properties[key])\n\t        }\n\t    }\n\n        function toDoubleColonPseudoElements(selector) {\n            return selector.replace(singleColonPseudoElRegex, function (match, submatch1, submatch2, submatch3) {\n                return submatch1 + '::' + submatch3;\n            });\n        }\n        function toMozDoubleColonPseudoElements(selector) {\n            return selector.replace(singleColonPseudoElRegex, function (match, submatch1, submatch2, submatch3) {\n                return submatch1 + '::-moz-' + submatch3;\n            });\n        }\n        function toSingleColonPseudoElements(selector) {\n            return selector.replace(doubleColonPseudoElRegex, function(match, submatch1, submatch2) {\n                return ':' + submatch2;\n            })\n        }\n    }\n\n\n    // creates the css styles necessary to render the native pseudoclass styles of this style (and contained styles that can be rendered native)\n    // intended to be called only once per style\n    // styleMap - A block's new computedStyleMap. Selectors that also exist in native pseudoclasses of the style have already been created or copied (so you can be sure creating css class styles for them won't conflict with anything)\n    // jsRenderedPseudoclassIndex - the index of the active pseudoclass style - needed for deciding what native css needs to be overridden by `style`\n        // if this is 0, no overriding needs to happen (so 0 is also set when there's no active js-rendered/emulated pseudoclass)\n    function createNativePseudoclasses(gem, style, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle) {\n        if(nativePseudoclassSelectorMap === undefined) nativePseudoclassSelectorMap = {}\n\n        var nativePseudoclassSelectors = []\n        //var nativePseudoclassPropertiesToOverride = {}   // stores what style properties for what pseudoclasses needs to be overridden by an emulated style\n        var newNativePseudoclassMap = {} // a mapping from a Gem name to a nativePseudoclassSelectorMap\n        var index = 0\n        style.pseudoclasses.classes.forEach(function(pseudoclassStyle, pseudoclassKey) {\n            var fullSelector = '.'+style.className+':'+pseudoclassKey.join(':')\n            if(pseudoclassStyle.pureNative) {\n                // create css styles for top-level css properties of the native psuedoclass\n                createPseudoClassRules(fullSelector, pseudoclassStyle.basicProperties, style, false)\n                nativePseudoclassSelectors.push(pseudoclassKey.join(':'))\n\n                for(var blockSelector in pseudoclassStyle.componentStyleMap) {\n                    addNativePseudoclassMapItem(blockSelector, fullSelector, pseudoclassStyle.componentStyleMap[blockSelector])\n                }\n            } else if(index === jsRenderedPseudoclassIndex) {\n                // create overriding css styles for top-level css properties of the emulated psuedoclass (so that emulated and native pseudoclasses mix properly)\n                for(var n=0; n<nativePseudoclassSelectors.length; n++) {\n                    var selector = nativePseudoclassSelectors[n]\n                    createPseudoClassRules(fullSelector+\":\"+selector, style.basicProperties, style, true)\n                }\n            }\n\n            index++\n        })\n\n        var blockStyleUtils = require(\"./blockStyleUtils\")\n        for(var selector in nativePseudoclassSelectorMap) {\n            var pseudoclassStyle = nativePseudoclassSelectorMap[selector]\n            if(pseudoclassStyle.inherit) {\n                pseudoclassStyle = blockStyleUtils.getInheritingStyle(gem).mix(pseudoclassStyle, false)\n            }\n\n            var fullSelector = selector+' '+'.'+style.className\n\n            // create css styles for the top-level style when inside a pure native pseudoclass style of its parent\n            createPseudoClassRules(fullSelector, pseudoclassStyle.basicProperties, style, true)\n\n            for(var blockSelector in pseudoclassStyle.componentStyleMap) {\n                addNativePseudoclassMapItem(blockSelector, fullSelector, pseudoclassStyle.componentStyleMap[blockSelector])\n            }\n\n            // create css styles for pseudoclass styles when inside a pure native pseudoclass style of its parent\n            pseudoclassStyle.pseudoclasses.classes.forEach(function(pseudoclassStyle, pseudoclassKey) {\n                if(pseudoclassStyle.pureNative) {\n                    createPseudoClassRules(fullSelector+':'+pseudoclassKey.join(':'), pseudoclassStyle.basicProperties, style, true)\n                }\n            })\n        }\n\n        return newNativePseudoclassMap\n\n\n        function addNativePseudoclassMapItem(blockSelector, cssSelector, styleValue) {\n            if(newNativePseudoclassMap[blockSelector] === undefined)\n                newNativePseudoclassMap[blockSelector] = {}\n            newNativePseudoclassMap[blockSelector][cssSelector] = styleValue\n        }\n\n        // cssProperties - The css rules to apply (should only contain native css properties). CamelCase and certain integer values will be converted.\n        // overwriteBloodyStyles - if true, styles from styleMapStyle are overridden with the default (either a block's default or the base default)\n        function createPseudoClassRules(selector, cssProperties,  /*temporary*/ styleMapStyle, overwriteBloodyStyles) {\n            if(!style.nativePseudoclassesWritten[selector]) {\n                var pseudoClassCss = {}\n\n                if(overwriteBloodyStyles) {\n                    // overwrite styles that would bleed over from the styleMapStyle\n\n                    var propertiesToOverride = Object.keys(styleMapStyle.basicProperties)\n                    styleMapStyle.pseudoclasses.classes.forEach(function(style) {\n                        propertiesToOverride = propertiesToOverride.concat(Object.keys(style.basicProperties))\n                    })\n\n                    for(var n=0; n<propertiesToOverride.length; n++) {\n                        var key = propertiesToOverride[n]\n                        if(defaultStyle) {\n                            var defaultStyleProperty = defaultStyle.basicProperties[key]\n                        }\n\n                        var initialStyle = defaultStyleProperty || defaultStyleValues[key]\n                                           || (key in stylesThatInheritByDefault ? 'inherit' : 'initial') // todo: write a function to calculate the inital value, since 'initial' isn't supported in IE (of course) - tho it will be eventually since its becoming apart of css3\n                        pseudoClassCss[key] = initialStyle\n                    }\n                }\n\n                for(var key in cssProperties) {\n                    var value = cssProperties[key]\n\n                    var cssStyle = key\n                    var cssStyleName = mapCamelCase(cssStyle)\n                    pseudoClassCss[cssStyleName] = cssValue(cssStyleName, value)\n                }\n\n                // create immediate pseudo class style\n                setCss(selector, pseudoClassCss) // create the css class with the pseudoClass\n                if(this.nativePseudoclassStyles !== undefined) {\n                    styleMapStyle.nativePseudoclassStyles[selector] = pseudoClassCss\n                }\n\n                style.nativePseudoclassesWritten[selector] = true\n            }\n        }\n    }\n})\n\n\n// private\n\n\n// a map of pseudoclass names and how they are emulated with javascript\n// each pseudoclass sets up the following functions:\n    // check - a function that checks if that pseudoclass currently applies to the component when its called\n    // setup - calls a callback when the pseudoClass starts and stops applying\n        // should return an object that will be passed to the kill function (as its 'state' parameter)\n    // kill - cleans up anything set up in the 'setup' function\n    // processParameter - takes the pseudoclass parameter and returns some object representing it that will be used by the setup and check functions\nvar jsRenderedPseduoclasses = {\n    hover: {\n        emulated: true,\n        check: function(component) {\n            var nodes = document.querySelectorAll( \":hover\" )\n            for(var n=0; n<nodes.length; n++) {\n                if(nodes[n] === component.domNode) {\n                    return true\n                }\n            }\n            return false\n        },\n        setup: function(component, startCallback, endCallback) {\n            component.on(\"mouseover\", function() {\n                startCallback()\n            })\n            component.on(\"mouseout\", endCallback)\n\n            return {start: startCallback, end: endCallback}\n        },\n        kill: function(component, state) {\n            component.off(\"mouseover\", state.start)\n            component.off(\"mouseout\", state.end)\n        }\n    },\n    checked: {\n        emulated: true,\n        check: function(component) {\n            if(component.domNode.nodeName !== 'INPUT' && component.domNode.nodeName !== 'OPTION') {\n                console.warn(\"The pseudoclass 'checked' can only apply to 'input' nodes (Button, CheckBox, RadioButton, or TextField) or 'option' nodes (Option)\")\n                return false\n            }\n            return component.selected\n        },\n        setup: function(component, startCallback, endCallback) {\n            var setupState = {}\n            component.on(\"change\", setupState.listener = function() {\n                if(component.selected) {\n                    startCallback()\n                } else {\n                    endCallback()\n                }\n            })\n\n            return setupState\n        },\n        kill: function(component, state) {\n            component.removeListener(\"change\", state.listener)\n        }\n    },\n    required: {\n        emulated: true,\n        check: function(component) {\n            if(component.domNode.nodeName !== 'INPUT') {\n                console.warn(\"The pseudoclass 'required' can only apply to 'input' nodes (Button, CheckBox, RadioButton, or TextField)\")\n                return false\n            }\n            return component.attr('required') !== undefined\n        },\n        setup: function(component, startCallback, endCallback) {\n            var observer = new MutationObserver(function() {\n                if(component.attr('required') !== undefined) {\n                    startCallback()\n                } else {\n                    endCallback()\n                }\n            })\n\n            observer.observe(component.domNode, {attributes: true})\n\n            return {observer: observer}\n        },\n        kill: function(component, state) {\n            state.observer.disconnect()\n        }\n    },\n    'last-child': {\n        emulated: true,\n        check: function(component) {\n            return nthLastChildCheck(component, '1')\n        },\n        setup: function(component, startCallback, endCallback) {\n            var observer = new MutationObserver(function() {\n                if(nthLastChildCheck(component, '1')) {\n                    startCallback()\n                } else {\n                    endCallback()\n                }\n            })\n\n            var setupObserver = function() {\n                // note that since this uses the component parent rather than domNode.parentNode, this won't work for components added to non-component nodes (and there's no good way to do it, because you would have to poll for parent changes)\n                observer.observe(component.parent.domNode, {childList: true})\n            }\n\n            if(component.parent !== undefined) {\n                setupObserver()\n            }\n\n            component.on('newParent', function() {\n                setupObserver()\n            })\n            component.on('parentRemoved', function() {\n                observer.disconnect()\n            })\n\n            return {observer: observer}\n        },\n        kill: function(component, state) {\n            state.observer.disconnect()\n        }\n    },\n    'nth-child': {\n        emulated: true,\n        parameterTransform: function(parameter) {\n            var parts = parseNthChildParameter(parameter)\n            if(parts.variable === 0) {\n                return parts.constant+''\n            } else if(parts.constant === 0) {\n                return parts.variable+'n'\n            } else {\n                return parts.variable+'n+'+parts.constant\n            }\n        },\n\n        check: function(component, parameterCheck) {\n            return nthChildCheck(component, parameterCheck)\n        },\n        setup: function(component, startCallback, endCallback, parameterCheck) {\n\n            var checkAndCallCallbacks = function() {\n                if(nthChildCheck(component, parameterCheck)) {\n                    startCallback()\n                } else {\n                    endCallback()\n                }\n            }\n\n            var observer = new MutationObserver(function() {\n                checkAndCallCallbacks()\n            })\n\n            var setupObserver = function() {\n                // note that since this uses the component parent rather than domNode.parentNode, this won't work for components added to non-component nodes (and there's no good way to do it, because you would have to poll for parent changes)\n                observer.observe(component.parent.domNode, {childList: true})\n            }\n\n            if(component.parent !== undefined) {\n                setupObserver()\n            }\n\n            component.on('newParent', function() {\n                setupObserver()\n                checkAndCallCallbacks()\n            })\n            component.on('parentRemoved', function() {\n                observer.disconnect()\n                checkAndCallCallbacks()\n            })\n\n            return {observer: observer}\n        },\n        kill: function(component, state) {\n            state.observer.disconnect()\n        },\n\n        // returns a function that takes an index and tell you if that index applies to the nthChildParameter\n        processParameter: function(parameter) {\n            var parts = parseNthChildParameter(parameter)\n            if(parts.variable === 0) {\n                return function(index) {\n                    return index+1 === parts.constant\n                }\n            } else {\n                return function(index) {\n                    return ((index+1-parts.constant)/parts.variable) % 1 === 0\n                }\n            }\n        }\n    },\n\n    // not's parameter is a statement consisting of pseudoclasses separated either by : or ,\n    // $$not(pseudoclass1&pseudoclass2,psuedoclass3) translates to the css :not(:pseudoclass1:pseudoclass2,:psuedoclass3)\n    not: {\n        emulated: true,\n        parameterTransform: function(parameter) {\n            var orParts = parameter.split(',')\n            return orParts.map(function(part) {\n                var andParts = part.split(':')\n                return andParts.map(function(part) {\n                    var parts = getPseudoClassParts(part)\n                    var mappedName = mapCamelCase(parts.class)\n                    if(parts.parameter !== undefined) {\n                        return mappedName+'('+parts.parameter+')'\n                    } else {\n                        return mappedName\n                    }\n                }).join(':')\n            }).join(',')\n        },\n\n        check: function(component, parameterCheck) {\n            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n        },\n        setup: function(component, startCallback, endCallback, parameterCheck) {\n            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n        },\n        kill: function(component, state) {\n            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n        },\n\n        // returns a function that takes an index and tell you if that index applies to the nthChildParameter\n        processParameter: function(parameter) {\n            throw new Error(\"The 'not' psuedoclass can only be used in Style objects that can be rendered in native css as of yet\")\n        }\n    }\n}\n\n// name is the name of the new pseudoclass\n// options is an object with the members:\n    // check(component) - returns true if the pseudoclass applies to the component\n    // setup(component, startCallback, endCallback, parameter) - a function that should call startCallback when the pseudoclass starts applying, and endCallback when it stops applying\n        // parameter - the parameter passed to the pseudoclass (e.g. in :not(:first-child), \":first-child\" is the parameter)\n    // kill - a function that cleans up any event listeners or anything else set up in the 'setup' function\n    // processParameter - a function that processes the pseudoclass parameter and returns some object the 'setup' function will get as its 4th argument\n        // if this is undefined, the pseudoclass will throw an exception for styles that have a parameter for it\n    // emulated - if true, it means that there is a corresponding native pseudoclass that can be used if the style can be rendered with pure css\nmodule.exports.addPseudoClass = function(name, options) {\n    var mappedName = mapCamelCase(name)\n    if(jsRenderedPseduoclasses[mappedName] !== undefined) {\n        var nameForError = '\"'+mappedName+'\"'\n        if(mappedName !== name) {\n            nameForError+= \" (mapped from '\"+name+\"')\"\n        }\n        throw new Error(\"The pseudoclass \"+nameForError+\" is already defined.\")\n    }\n    // else\n    jsRenderedPseduoclasses[mappedName] = options\n}\n\n\nfunction nthChildCheck(component, testFn) {\n    if(component.domNode.parentNode === null)\n        return false\n\n    var children = component.domNode.parentNode.children                    // must be domNode.parentNode, because child nodes may not be Components\n    var index = Array.prototype.indexOf.call(children, component.domNode)\n    return testFn(index)\n}\n\nfunction nthLastChildCheck(component, parameter) {\n    if(component.domNode.parentNode === null)\n        return false\n\n    var children = component.domNode.parentNode.children                    // must be domNode.parentNode, because child nodes may not be Components\n    var index = children.length - parseInt(parameter)\n    return children[index] === component.domNode\n}\n\nvar nthChildParameter = new RegExp(\n    '^' // begin\n        +'('\n            +'('\n                +'(-?\\\\d*)'        // constant\n                +'(([+-]\\\\d*)n?)?' // first-order term\n            +')|'\n            +'('\n                +'(-?\\\\d)*n?' // first-order term first\n                +'([+-]\\\\d*)?' // then constant\n            +')'\n        +')'\n    +'$' // the EYND\n)\n\n// returns the variable and constnat parts of the parameter\nfunction parseNthChildParameter(parameter) {\n    var parts = parameter.replace(/\\s/g, '').match(nthChildParameter)\n    if(parts === null)\n        throw new Error(\"nth-child parameter '\"+parameter+\"' isn't valid\")\n\n    if(parts[2] !== undefined) {\n        var constant = parts[3]\n        var variable = parts[5]\n    } else {\n        var constant = parts[8]\n        var variable = parts[7]\n    }\n\n\n\n    if(constant === undefined) constant = 0\n    else                       constant = parseInt(constant)\n    if(variable === undefined) variable = 0\n    else                       variable = parseInt(variable)\n\n    return {variable: variable, constant: constant}\n}\n\n\n// maps a style value to a css value\n// style values that are numbers are mapped to strings, usually with px postfix\nfunction cssValue(cssStyleName, value) {\n    // If a number was passed in, add 'px' to the (except for certain CSS properties) [also taken from jquery's code]\n    if(typeof(value) === \"number\" && cssNumber[cssStyleName] === undefined) {\n        return value+\"px\"\n    } else {\n        return value.toString()\n    }\n}\n\nvar pseudoClassRegex = new RegExp( // /^([^(]*)(\\((.*)\\))?$/\n    \"([^(]*)\"        // anything that's not an open paren\n    +\"(\\\\((.*)\\\\))?\" // optionally some arbitrary string inside parens\n    +\"$\"             // THE EYND!\n)\n\n// pulls apart the pseudoclass name from its (optional) parameter\n// e.g. pulls out 'nth-child' and '2+3n' from 'nth-child(2+3n)'\nfunction getPseudoClassParts(fullPsuedoClass) {\n    var x = fullPsuedoClass.match(pseudoClassRegex)\n    if(x === null) throw new Error(\"Pseudoclass '\"+fullPsuedoClass+\"' is invalid\")\n    return {class: x[1], parameter: x[3]}\n}\n\n\n// taken from jquery's code\nvar cssNumber = {\n    \"column-count\": 1,\n    \"fill-opacity\": 1,\n    \"flex-grow\": 1,\n    \"flex-shrink\": 1,\n    \"font-weight\": 1,\n    \"line-height\": 1,\n    \"opacity\": 1,\n    \"order\": 1,\n    \"orphans\": 1,\n    \"widows\": 1,\n    \"z-index\": 1,\n    \"zoom\": 1\n}\n\nfunction isStyleObject(o) {\n    return o !== undefined && o.componentStyleMap !== undefined\n}\n\n\n//var asciiA = 'A'.charCodeAt(0), asciiZ = 'Z'.charCodeAt(0), difference = 'a'.charCodeAt(0) - asciiA\nfunction mapCamelCase(cssStyleName) {\n    return cssStyleName.replace(/([A-Z])/g, function(match, submatch) {          // this is from jss\n        return '-' + submatch.toLowerCase();\n    })\n\n    /*for(var n=0; n<cssStyleName.length; n++) {\n        var ascii = cssStyleName.charCodeAt(n)\n        if(asciiA <= ascii && ascii <= asciiZ) { // found capital letter\n            cssStyleName = cssStyleName.slice(0, n) + '-'+String.fromCharCode(ascii+difference) + cssStyleName.slice(n+1)\n            n++ // increment a second time for the dash\n        }\n    }\n\n    return cssStyleName*/\n}\n\n// maps all the styles that are inherited by descendant nodes to their default values\n// source: http://stackoverflow.com/questions/5612302/which-css-styles-are-inherited\nvar defaultStyleValues = {\n    'azimuth': 'center',\n    'border-collapse': 'separate',\n    'border-spacing': '0',\n    'box-sizing': 'border-box',\n    'caption-side': 'top',\n    //'color': 'black',         // let this inherit\n    //'cursor': 'auto',         // let this one inherit - its weird otherwise\n    'direction': 'ltr',\n     display: 'inline-block', // changes the default display to inline-block\n    'elevation': '',\n    'empty-cells': 'show',\n    // 'font-family': '',       // let this inherit\n    // 'font-size': 'medium',   // let this inherit\n    //'font-style': 'normal',   // let this inherit\n    //'font-variant': 'normal', // let this inherit\n    //'font-weight': 'normal',  // let this inherit\n    'letter-spacing': 'normal',\n    'line-height': 'normal',\n    'list-style-image': 'none',\n    'list-style-position': 'outside',\n    'list-style-type': 'disc',\n    'orphans': '2',\n    'pitch-range': '',\n    'pitch': '',\n     position: 'relative', // changes the default positioning so that absolute is relative to its parent by default\n    'quotes': '',\n    'richness': '',\n    'speak-header': '',\n    'speak-numeral': '',\n    'speak-punctuation': '',\n    'speak': '',\n    'speak-rate': '',\n    'stress': '',\n    'text-align': 'left',\n    'text-indent': '0',\n    'text-transform': 'none',\n    //'visibility': 'visible',    // let this inherit - otherwise you just hide the container and not the contents\n    'voice-family': '',\n    'volume': '',\n    'white-space': 'normal',\n    'widows': '2',\n    'word-spacing': 'normal'\n}\n\nvar stylesThatInheritByDefault = {\n    'font-family':1, 'font-size':1, 'font-style':1, 'font-variant':1, 'font-weight':1, 'visibility':1, 'color':1, 'cursor':1\n}\n\n\n\n\n// returns index of the passed css classname, or undefined if sheet containing that class isn't found\nfunction cssClassSheetIndex(classname) {\n    var result = undefined\n\n    var styleNodes = document.querySelectorAll(\"style\")\n    for(var n=0; n<styleNodes.length; n++) {\n        var sheet = styleNodes[n].sheet\n        jssModule.defaultSheet = sheet\n\n        var defaultStyleMaybe = jssModule.get(classname)\n        if(Object.keys(defaultStyleMaybe).length > 0) {\n            result = n\n            break\n        }\n    }\n\n    jssModule.defaultSheet = undefined\n    return result\n}\n\n\nvar defaultJss = jssModule.forDocument(document) // must be created before the jss object (so that the styles there override the styles in the default sheet)\nvar jss = jssModule.forDocument(document)\n\nvar defaultClassSheetIndex = cssClassSheetIndex('.'+Style.defaultClassName)\nif(defaultClassSheetIndex === undefined) {\n    defaultJss.defaultSheet = defaultJss._createSheet() // create its sheet first (before the regular jss sheet)\n\n    jss.defaultSheet = jss._createSheet()\n} else {\n    // if the default styleclass *already* exists, it probably means that blocks.js is being loaded twice\n    console.log(\"Warning: the default-styles class name for blocks.js looks like its already in use. This probably means you have two versions of blocks.js loaded. If so, Gem.js will continue to work, but your app will be a bit bloated. If something other than block.js created that class, blocks.js may break that style.\")\n\n    var styleNodes = document.querySelectorAll(\"style\")\n    defaultJss.defaultSheet = styleNodes[defaultClassSheetIndex].sheet\n    jss.defaultSheet = styleNodes[defaultClassSheetIndex+1].sheet\n\n    // make sure the baseClassName isn't already taken\n    var dedupNumber = 0\n    while(true) {\n        var testBaseClassName = baseClassName+dedupNumber\n        if(cssClassSheetIndex('.'+testBaseClassName+dedupNumber+0) !== undefined) {\n            dedupNumber++\n        } else {\n            break;\n        }\n    }\n\n    baseClassName = testBaseClassName+dedupNumber\n}\n\ndefaultJss.set('.'+Style.defaultClassName, defaultStyleValues) // creates default css class in order to prevent inheritance\n\ndefaultJss.set('input', { // chrome and firefox user agent stylesheets mess with this otherwise\n    cursor: 'inherit'\n})\ndefaultJss.set('img', { // images should retain content-box sizing, since pixel perfect width on images is important so you avoid resizing the image\n    'box-sizing': 'content-box'\n})\n\n\n/*private*/ module.exports.isDev; // should be set by Gem\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Style.js\n ** module id = 2\n ** module chunks = 0\n **/","var Gem = require('Gem')\nvar proto = require('proto')\nvar Style = require(\"Style\")\n\nmodule.exports = proto(Gem, function(superclass) {\n\n    //static properties\n\n    this.name = 'Canvas'\n\n    this.init = function(/*[label,] height, width*/) {\n        if(arguments.length === 2) {\n            var height = arguments[0]\n            var width = arguments[1]\n        } else {\n            var label = arguments[0]\n            var height = arguments[1]\n            var width = arguments[2]\n        }\n\n        this.domNode = document.createElement('canvas') // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\n        this.label = label\n        this.height = height\n        this.width = width\n\n        superclass.init.apply(this, arguments) // superclass constructor\n    }\n\n    // instance properties\n\n    Object.defineProperty(this, 'width', {\n        get: function() {\n            return this.domNode.width\n        }, set: function(v) {\n            this.domNode.width = v\n        }\n    })\n    Object.defineProperty(this, 'height', {\n        get: function() {\n            return this.domNode.height\n        }, set: function(v) {\n            this.domNode.height = v\n        }\n    })\n\n    this.context = function() {\n        return this.domNode.getContext.apply(this.domNode, arguments)\n    }\n\n    this.toImg = this.toDataURL = function() {\n        return this.domNode.toDataURL()\n    }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Canvas.js\n ** module id = 3\n ** module chunks = 0\n **/","var Gem = require('../Gem')\nvar proto = require('proto')\n\nvar domUtils = require(\"domUtils\")\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static properties\n\n    this.name = 'Block'\n\n\n\t// instance properties\n\n    // NOTE: all the basic Gems override `init` instead of `build` so users don't have to call the build superclass constructor in their `build` constructors\n\tthis.init = function (/*[label,] content*/) {\n        if(typeof(arguments[0]) !== 'string' && arguments[0] !== undefined) {\n            var contentArgs = arguments\n        } else {\n            var label = arguments[0]\n            var contentArgs = Array.prototype.slice.call(arguments, 1)\n        }\n\n        this.children = [] // need children before calling add\n        this.domNode = domUtils.div() // need the domNode before setting the label\n\n        this.label = label\n\t\tif(contentArgs !== undefined)\n            this.add.apply(this,contentArgs)\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Block.js\n ** module id = 4\n ** module chunks = 0\n **/","var Gem = require('Gem')\nvar proto = require('proto')\n\nmodule.exports = proto(Gem, function(superclass) {\n\n    // static variables\n\n    this.name = 'Button'\n\n\n    // instance properties\n\n\tthis.init = function(/*[label,] text*/) {\n        if(arguments.length >= 2) {\n            var label = arguments[0]\n            var text = arguments[1]\n        } else {\n            var text = arguments[0]\n        }\n\n        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\n        this.label = label\n\t\tthis.attr('type','button')\n\t\tthis.text = text\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n    Object.defineProperty(this, 'text', {\n        get: function() {\n            return this.attr('value')\n        },\n        set: function(text) {\n            this.attr('value', text)\n        }\n    })\n\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Button.js\n ** module id = 5\n ** module chunks = 0\n **/","var Gem = require('Gem')\nvar proto = require('proto')\n\nmodule.exports = proto(Gem, function(superclass) {\n\t// static variables\n    this.name = 'CheckBox'\n\n\t// instance methods\n\tthis.init = function(label) {\n        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        this.label = label\n\t\tthis.attr('type','checkbox')\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n    Object.defineProperty(this, 'selected', {\n        // returns whether or not the checkbox is checked\n        get: function() {\n            return this.domNode.checked\n        },\n        // sets the value of the checkbox to the passed value (true for checked)\n        set: function(checked) {\n            var newValue = checked === true\n            var curValue = this.domNode.checked\n            if(curValue === newValue) return;  // do nothing if nothing's changing\n\n            this.domNode.checked = newValue\n            this.emit('change') // the browser has no listenable event that is triggered on change of the 'checked' property\n        }\n    })\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/CheckBox.js\n ** module id = 6\n ** module chunks = 0\n **/","var Gem = require('Gem')\nvar proto = require('proto')\n\nmodule.exports = proto(Gem, function(superclass) {\n\n    //static properties\n\n    this.name = 'Image'\n\n    this.init = function(/*[label,] imageSource*/) {\n        if(arguments.length === 1) {\n            var imageSource = arguments[0]\n        } else {\n            var label = arguments[0]\n            var imageSource = arguments[1]\n        }\n\n        this.domNode = document.createElement('img') // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        this.label = label\n        if(imageSource !==  undefined) this.src = imageSource\n\n        superclass.init.apply(this, arguments) // superclass constructor\n    }\n\n    // instance properties\n\n    Object.defineProperty(this, 'src', {\n        get: function() {\n            return this.domNode.src\n        }, set: function(v) {\n            this.domNode.src = v\n        }\n    })\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Image.js\n ** module id = 7\n ** module chunks = 0\n **/","var proto = require('proto')\n\nvar Gem = require('Gem')\nvar Style = require(\"Style\")\n\nvar Item = require(\"./Item\");\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static properties\n\n\tthis.Item = Item\n\n    this.name = 'List'\n\n\t// instance properties\n\n\tthis.init = function(/*[label,] [ordered,] listInit*/) {\n\t\tif(arguments[0] instanceof Array) {\n            var listInit = arguments[0]\n        } else {\n            if(arguments[1] instanceof Array) {\n                var listInit = arguments[1]\n            } else if(arguments[2] instanceof Array) {\n                var listInit = arguments[2]\n            }\n\n            if(typeof(arguments[0]) === 'boolean') {\n                var ordered = arguments[0]\n            } else {\n                if(typeof(arguments[1]) === 'boolean') {\n                    var ordered = arguments[1]\n                } else {\n                    var ordered = false // default\n                }\n\n                if(typeof(arguments[0]) === 'string') {\n                    var label = arguments[0]\n                }\n            }\n        }\n\n        if(ordered) {\n            var type = 'ol'\n        } else {\n            var type = 'ul'\n            this.defaultStyle = Style({\n                listStyleType: 'decimal'\n            })\n        }\n\n\n        this.domNode = document.createElement(type) // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        this.label = label\n\n        this.children = [] // need children before calling add\n        if(listInit !== undefined) {\n            for(var n=0; n<listInit.length; n++) {\n                this.item(listInit[n])\n            }\n        }\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n\tthis.item = function() {\n\t\tvar item = Item.apply(this, arguments)\n        this.add(item)\n        return item\n\t}\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/List.js\n ** module id = 8\n ** module chunks = 0\n **/","var proto = require('proto')\nvar EventEmitter = require('events').EventEmitter\n\nvar Gem = require('../Gem')\n\nvar randomStart = getRandomInt(0,999999) // a random number used to start off the numbers given to radio button names (using a random number in case there are somehow two different instances of blocks.js on the page)\n\n// A group of radio buttons\nmodule.exports = proto(EventEmitter, function(superclass) {\n\n\t// static properties\n\n    this.name = 'Radio'\n\n\t// instance properties\n\n\n    // required - If true, a radio button must always be selected. Otherwise, radio buttons can be deselected by clicking on them.\n\tthis.init = function(required) {\n        //this.selected\n        this.required = required === true || required === undefined\n        this.buttons = {} // maps values to the buttons that have each value\n        this.randomStart = randomStart++\n\t}\n\n    // returns a new radio button\n    this.button = function(/*[label,] value*/) {\n        if(arguments.length >= 2) {\n            var label = arguments[0]\n            var value = arguments[1]\n        } else {\n            var value = arguments[0]\n        }\n\n        if(this.buttons[value] !== undefined) {\n            throw new Error(\"Can't give a RadioButton the same value as another in the group (value: '\"+value+\"')\")\n        }\n\n        var button = RadioButton(this, label, value, \"_radioblock\"+this.randomStart)\n        this.buttons[value] = button\n\n        if(this.required && this._selected === undefined) {\n            button.selected = true\n        }\n\n        return button\n    }\n\n    // returns the RadioButton in the group that's selected (or undefined if none are selected)\n    Object.defineProperty(this, 'selected', {\n        get: function() {\n            return this._selected\n        },\n        set: function() {\n            throw new Error(\"Can't set selected on a Radio object\")\n        }\n    })\n\n    Object.defineProperty(this, 'val', {\n        // returns the value of the selected radio button in the group (undefined if none are selected)\n        get: function() {\n            var selected = this._selected\n            if(selected === undefined) return undefined\n            // else\n            return selected.attr('value')\n        },\n\n        // sets the value of the checkbox to the passed value (true for checked)\n        // throws an exception if none of the radio buttons have that value\n        // throws an exception if an unset is attempted for a required Radio set\n        set: function(value) {\n            if(value === undefined) {\n                var selected = this._selected\n                if(selected !== undefined) {\n                    selected.selected = false\n                }\n            } else {\n                var button = this.buttons[value]\n                if(button === undefined) throw new Error(\"There is no RadioButton in the group with the value: '\"+value+\"'\")\n\n                button.selected = true\n            }\n        }\n    })\n\n\n    // arguments can be one of the following:\n        // RadioButton, RadioButton, RadioButton, ...\n        // value, value, value, ... - each value is the value of the RadioButton to remove\n        // arrayOfRadioButtons\n        // arrayOfValues\n    this.remove = function() {\n        if(arguments[0] instanceof Array) {\n            var removals = arguments[0]\n        } else {\n            var removals = arguments\n        }\n\n        for(var n=0; n<removals.length; n++) {\n            var r = removals[n]\n\n            if(r instanceof RadioButton) {\n                var button = r\n                var value = r.val\n\n                if(this.buttons[value] !== r) {\n                    throw new Error(\"The button passed at index \"+n+\" is not part of the group.\")\n                }\n            } else {\n                var button = this.buttons[r]\n                var value = r\n\n                if(button === undefined) {\n                    throw new Error(\"There is no RadioButton in the group with the value: '\"+value+\"'\")\n                }\n            }\n\n            var originalSelected = this.selected\n            if(this.selected === button) {\n                this._selected = undefined\n            }\n\n            this.buttons[value].group = undefined // fully remove it from the group\n            delete this.buttons[value]\n        }\n\n        if(this.required && this.selected === undefined) {\n            for(var v in this.buttons) {\n                this.buttons[v].selected = true // just select the first one\n                break; // yes this doesn't loop\n            }\n        } else if(originalSelected !== this.selected) {\n            this.emit('change')\n        }\n    }\n\n})\n\nvar RadioButton = proto(Gem, function(superclass) {\n    this.name = 'RadioButton'\n\n    this.init = function(radioGroup, label, value, name) {\n        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        superclass.init.call(this) // superclass constructor\n\n        this.label = label\n        this.group = radioGroup\n\n        this.attr('type', 'radio')\n        this.attr('name', name) // the name is needed so that using tab to move through page elements can tab between different radio groups\n        this.val = value\n\n        var that = this\n\t\tthis.on(\"mousedown\",function(event) {\n            event.preventDefault()           // this needs to be here otherwise the radio button can't be changed\n\n\t\t\tif(that.group.required) {\n                if(that.selected === false) {\n                    that.selected = true\n                }\n            } else {\n                that.selected = !that.selected // toggle\n            }\n\t\t})\n        this.on(\"click\",function(event) {\n            event.preventDefault()         // this needs to be here otherwise the radio button can't be *unset*\n        })\n        this.on(\"keydown\",function(event) {\n            if(event.keyCode === 40 || event.keyCode === 39) { // down or right\n                event.preventDefault()         // this needs to be here otherwise the radio button strangely calls the click handler which causes things to mess up\n                that.selectNext()\n            } else if(event.keyCode === 38 || event.keyCode === 37) { // up or left\n                event.preventDefault()         // this needs to be here otherwise the radio button strangely calls the click handler which causes things to mess up\n                that.selectPrevious()\n            }\n        })\n    }\n\n    Object.defineProperty(this, 'val', {\n        // returns the value attribute of the checkbox\n        get: function() {\n            return this.attr('value')\n        },\n\n        // sets the value attribute of the checkbox\n        set: function(value) {\n            if(this.group.buttons[value] !== undefined) {\n                throw new Error(\"Can't give a RadioButton the same value as another in the group (value: '\"+value+\"')\")\n            }\n\n            var oldValue = this.val\n            this.attr('value', value)\n            if(oldValue !== undefined) delete this.group.buttons[oldValue]\n            this.group.buttons[value] = this\n        }\n    })\n\n\n    Object.defineProperty(this, 'selected', {\n        // returns whether or not the checkbox is checked\n        get: function() {\n            return this.domNode.checked\n        },\n\n        // sets the selected state of the checkbox to the passed value (true for checked)\n        set: function(value) {\n            var booleanValue = value === true\n            if(this.selected === value) return; // ignore if there's no change\n\n            if(booleanValue) {\n                var previouslySelected = this.group.selected\n                setButtonInGroup(this.group, this)\n                if(previouslySelected !== undefined)\n                    previouslySelected.emit('change')\n            } else {\n                if(this.group.required) throw new Error(\"Can't unset this Radio set, a value is required.\")\n                this.domNode.checked = false\n                this.group._selected = undefined\n            }\n            this.emit('change') // the browser has no listenable event that is triggered on change of the 'checked' property\n            this.group.emit('change')\n        }\n    })\n\n    this.selectNext = function() {\n        selectSibling(this,1)\n    }\n    this.selectPrevious = function() {\n        selectSibling(this,-1)\n    }\n\n})\n\n// direction can be +1 or -1\nfunction selectSibling(button, direction) {\n    var buttons = button.group.buttons\n    var values = Object.keys(buttons)\n    var index = values.indexOf(button.attr('value'))\n    if(direction === 1 && index === values.length-1) {\n        var buttonToSelect = buttons[values[0]]\n    } else if(direction === -1 && index === 0) {\n        var buttonToSelect = buttons[values[values.length-1]]\n\n    } else {\n        var buttonToSelect = buttons[values[index+direction]]\n    }\n\n    buttonToSelect.selected = true\n    buttonToSelect.focus()\n}\n\nfunction setButtonInGroup(group, button) {\n    var selected = group._selected\n    if(selected !== undefined) selected.domNode.checked = false\n    button.domNode.checked = true\n    group._selected = button\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Radio.js\n ** module id = 9\n ** module chunks = 0\n **/","var Gem = require('../Gem')\nvar proto = require('proto')\n\nvar Option = require('Components/Option')\n\n// emits a 'change' event when its 'val' changes\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static variables\n\n    this.name = 'Select'\n\n    this.Option = Option\n\n\tthis.init = function(/*[label,] options*/) {\n        if(arguments[0] instanceof Object) {\n            var options = arguments[0]\n        } else {\n            var label = arguments[0]\n            var options = arguments[1]\n        }\n\n        this.domNode = document.createElement(\"select\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        this.label = label\n\n        this.children = [] // need children before calling add\n        this.options = {}\n\t\tfor(var value in options) {\n\t\t\tthis.option(value, options[value])\n\t\t}\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n\n\t// instance methods\n\n    Object.defineProperty(this, 'val', {\n        // returns the value that is selected\n        get: function() {\n            for(var value in this.options) {\n                if(this.options[value].selected) {\n                    return this.options[value].val\n                }\n            }\n        },\n\n        set: function(value) {\n            var option = this.options[value]\n            if(option === undefined || option.val !== value) throw new Error(\"There is no Option in the Select with the value: '\"+value+\"'\")\n            option.selected = true\n        }\n    })\n\t\n\tthis.option = function(/*[label,] value,text*/) {\n        if(arguments.length === 2) {\n            var value = arguments[0]\n            var text = arguments[1]\n        } else if(arguments.length === 3) {\n            var label = arguments[0]\n            var value = arguments[1]\n            var text = arguments[2]\n        } else {\n            throw new Error(\"Invalid number of arguments\")\n        }\n\n        var newOption = Option(label, value,text)\n        this.add(newOption)\n\n        return newOption\n\n\t}\n\n    // same interface as Gem.addAt\n    /*override*/ this.addAt = function(index/*, nodes...*/) {\n        var that = this\n\n        var nodesToAdd = Gem.normalizeAddAtArguments.apply(this, arguments)\n\n        // validation first\n        nodesToAdd.forEach(function(option) {\n            if(that.options[option.val] !== undefined) {\n                throw new Error(\"Can't give an Option the same value as another in the Select (value: '\"+option.val+\"')\")\n            }\n        })\n\n        superclass.addAt.call(this, index, nodesToAdd)\n\n        // Select specific state modifications - this must be done after the superclass call in case an error is thrown from it\n        var anyWereSelected = false\n        nodesToAdd.forEach(function(option) {\n            if(option.selected) anyWereSelected = true\n            that.options[option.val] = option\n\n            // set up Select events\n            // todo: remove events when the Option is removed\n\n            option.on(\"mousedown\",function(event) {\n                option.parent.val = option.val      // select this one\n            })\n        })\n\n        if(anyWereSelected) {\n            this.emit('change')\n        }\n    }\n\n    // same interface as Gem.remove\n    /*override*/ this.remove = function() {\n        var that = this\n\n        var removalIndexes = Gem.normalizeRemoveArguments.apply(this, arguments)\n        var removals = removalIndexes.map(function(index) {\n            return that.children[index]\n        })\n\n        superclass.remove.call(this, removalIndexes)\n\n        // Select specific state modifications - this must be done after the superclass call in case an error is thrown from it\n        var theSelectedWasRemoved = false\n        removals.forEach(function(option) {\n            if(option.selected) theSelectedWasRemoved = true\n            delete that.options[option.val]\n        })\n\n        if(theSelectedWasRemoved) {\n            //this.children[0].selected = true // I think the browser does this automatically??\n            this.emit('change')\n        }\n    }\n\n\n    // private\n\n    this.prepareForValueChange = function(values) {\n        var value = values[0]\n\n        for(var optionValue in this.options) {\n            if(optionValue !== value) {\n                var option = this.options[optionValue]\n                if(option.selected === true) {\n                    option.setSelectedQuiet(false)\n                }\n            }\n        }\n    }\n})\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Select.js\n ** module id = 10\n ** module chunks = 0\n **/","var proto = require('proto')\r\nvar Gem = require('../Gem')\r\n\r\nmodule.exports = proto(Gem, function(superclass) {\r\n\t// static variables\r\n    this.name = 'Svg'\r\n\r\n\t// instance methods\r\n\tthis.init = function(/*[label,] svgXml*/) {\r\n        if(arguments.length === 1) {\r\n            var svgXml = arguments[0]\r\n        } else {\r\n            var label = arguments[0]\r\n            var svgXml = arguments[1]\r\n        }\r\n\r\n        var div = document.createElement('div')\r\n        div.innerHTML = svgXml\r\n        this.domNode = div.firstChild\r\n\r\n        this.label = label\r\n\r\n        superclass.init.call(this)\r\n\t}\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Svg.js\n ** module id = 11\n ** module chunks = 0\n **/","var proto = require('proto')\n\nvar Gem = require('../Gem')\nvar Style = require(\"Style\")\n\nvar Header = require(\"./Header\");\nvar Row = require(\"./Row\");\nvar Cell = require(\"./Cell\");\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static properties\n\n    this.name = 'Table'\n\n    this.defaultStyle = Style({\n        borderSpacing: 0\n    })\n\n    this.Row = Row\n\tthis.Header = Header\n    this.Cell = Cell\n\n\n\t// instance properties\n\n\tthis.init = function(/*[label,] tableInit*/) {\n\t\tif(arguments[0] instanceof Array) {\n            var tableInit = arguments[0]\n        } else {\n            var label = arguments[0]\n            var tableInit = arguments[1]\n        }\n\n        this.domNode = document.createElement(\"table\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        this.label = label\n\n        this.children = [] // need children before calling add\n        if(tableInit !== undefined) {\n            for(var n=0; n<tableInit.length; n++) {\n                this.row(tableInit[n])\n            }\n        }\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\t\n\tthis.header = function(/*[]label,] listOfBlocksOrText*/) {\n        return headerOrRegularRow(this, Header, arguments)\n\t}\n\n\tthis.row = function() {\n\t\treturn headerOrRegularRow(this, Row, arguments)\n\t}\n});\n\nfunction headerOrRegularRow(that, Prototype, args) {\n    var row = Prototype.apply(undefined, args)\n    that.add(row)\n    return row\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Table.js\n ** module id = 12\n ** module chunks = 0\n **/","var Gem = require('../Gem')\nvar proto = require('proto')\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static variables\n\n    this.name = 'TextArea'\n\n\tthis.init = function(label) {\n        this.domNode = document.createElement(\"textarea\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n        this.label = label\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n\n\t// instance properties\n\n\n    Object.defineProperty(this, 'val', {\n        // returns the value of the Option\n        get: function() {\n            return this.domNode.value\n        },\n\n        // sets the value of the Option\n        set: function(value) {\n            if(this.val === value) return; // do nothing if there's no change\n\n            this.domNode.value = value\n            this.emit('change')\n        }\n    })\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/TextArea.js\n ** module id = 13\n ** module chunks = 0\n **/","var Gem = require('../Gem')\nvar proto = require('proto')\n\nvar domUtils = require(\"../domUtils\")\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static properties\n\n    this.name = 'TextField'\n\n\tthis.init = function(/*[label,] password*/) {\n        if(arguments.length === 1) {\n            var password = arguments[0]\n        } else if(arguments.length > 1) {\n            var label = arguments[0]\n            var password = arguments[1]\n        }\n\n        this.domNode = document.createElement(\"input\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\n\t\tthis.label = label\n\t\t//domUtils.setAttribute(this.domNode,'type','text');  // NOTE: IE fucks this up, and since 'text' is the default type for an input node, lets just forget abat it\n        if(password)\n\t\t    this.attr('type','password')\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n\n\t// instance properties\n\n    Object.defineProperty(this, 'val', {\n        // returns the value of the Option\n        get: function() {\n            return this.domNode.value\n        },\n\n        // sets the value of the Option\n        set: function(value) {\n            if(this.val === value) return; // do nothing if there's no change\n\n            this.domNode.value = value\n            this.emit('change')\n        }\n    })\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/TextField.js\n ** module id = 14\n ** module chunks = 0\n **/","var proto = require('proto')\n\nvar Gem = require('Gem')\nvar Style = require(\"Style\")\n\nvar domUtils = require('domUtils')\n\n\n\nmodule.exports = proto(Gem, function(superclass) {\n\n    //static properties\n\n    this.name = 'Text'\n\n    this.defaultStyle = Style({\n        whiteSpace: 'pre-wrap' // so whitespace is displayed (e.g. multiple spaces don't collapse)\n    })\n\n    this.init = function(/*[label,] text*/) {\n        if(arguments.length === 1) {\n            var text = arguments[0]\n        } else {\n            var label = arguments[0]\n            var text = arguments[1]\n        }\n\n        if (text === undefined) text = ''\n\n        this.domNode = domUtils.div() // need the domNode before setting the label\n\n        this.label = label\n        this.text = text\n\n        superclass.init.apply(this, arguments) // superclass constructor\n    }\n\n    // instance properties\n\n    Object.defineProperty(this, 'text', {\n        get: function() {\n            return this.domNode[domUtils.textProperty]\n        }, set: function(v) {\n             this.domNode[domUtils.textProperty] = v\n        }\n    })\n});\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Text.js\n ** module id = 15\n ** module chunks = 0\n **/","/*\n * JSS v0.6 - JavaScript Stylesheets\n * https://github.com/Box9/jss\n *\n * Copyright (c) 2011, David Tang\n * MIT Licensed (http://www.opensource.org/licenses/mit-license.php)\n */\nvar jss = (function() {\n    var adjSelAttrRegex = /((?:\\.|#)[^\\.\\s#]+)((?:\\.|#)[^\\.\\s#]+)/g;\n    var doubleColonPseudoElRegex = /(::)(before|after|first-line|first-letter|selection)/;\n    var singleColonPseudoElRegex = /([^:])(:)(before|after|first-line|first-letter|selection)/;\n    var singleColonForPseudoElements; // flag for older browsers\n\n    function getSelectorsAndRules(sheet) {\n        var rules = sheet.cssRules || sheet.rules || [];\n        var results = {};\n        for (var i = 0; i < rules.length; i++) {\n            // Older browsers and FF report pseudo element selectors in an outdated format\n            var selectorText = toDoubleColonPseudoElements(rules[i].selectorText);\n            if (!results[selectorText]) {\n                results[selectorText] = [];\n            }\n            results[selectorText].push({\n                sheet: sheet,\n                index: i,\n                style: rules[i].style\n            });\n        }\n        return results;\n    }\n\n    function getRules(sheet, selector) {\n        var rules = sheet.cssRules || sheet.rules || [];\n        var results = [];\n        // Browsers report selectors in lowercase\n        selector = selector.toLowerCase();\n        for (var i = 0; i < rules.length; i++) {\n            var selectorText = rules[i].selectorText;\n            // Note - certain rules (e.g. @rules) don't have selectorText\n            if (selectorText && (selectorText == selector || selectorText == swapAdjSelAttr(selector) || selectorText == swapPseudoElSyntax(selector))) {\n                results.push({\n                    sheet: sheet,\n                    index: i,\n                    style: rules[i].style\n                });\n            }\n        }\n        return results;\n    }\n\n    function addRule(sheet, selector) {\n        var rules = sheet.cssRules || sheet.rules || [];\n        var index = rules.length;\n        var pseudoElementRule = addPseudoElementRule(sheet, selector, rules, index);\n\n        if (!pseudoElementRule) {\n            addRuleToSheet(sheet, selector, index);\n        }\n\n        return {\n            sheet: sheet,\n            index: index,\n            style: rules[index].style\n        };\n    };\n\n    function addRuleToSheet(sheet, selector, index) {\n        if (sheet.insertRule) {\n            sheet.insertRule(selector + ' { }', index);\n        } else {\n            sheet.addRule(selector, null, index);\n        }\n    }\n\n    // Handles single colon syntax for older browsers and bugzilla.mozilla.org/show_bug.cgi?id=949651\n    function addPseudoElementRule(sheet, selector, rules, index) {\n        var doubleColonSelector;\n        var singleColonSelector;\n\n        if (doubleColonPseudoElRegex.exec(selector)) {\n            doubleColonSelector = selector;\n            singleColonSelector = toSingleColonPseudoElements(selector);\n        } else if (singleColonPseudoElRegex.exec(selector)) {\n            doubleColonSelector = toDoubleColonPseudoElements(selector);\n            singleColonSelector = selector;\n        } else {\n            return false; // Not dealing with a pseudo element\n        }\n\n        if (!singleColonForPseudoElements) {\n            // Assume modern browser and then check if successful\n            addRuleToSheet(sheet, doubleColonSelector, index);\n            if (rules.length <= index) {\n                singleColonForPseudoElements = true;\n            }\n        }\n        if (singleColonForPseudoElements) {\n            addRuleToSheet(sheet, singleColonSelector, index);\n        }\n\n        return true;\n    }\n\n    function toDoubleColonPseudoElements(selector) {\n        return selector.replace(singleColonPseudoElRegex, function (match, submatch1, submatch2, submatch3) {\n            return submatch1 + '::' + submatch3;\n        });\n    }\n\n    function toSingleColonPseudoElements(selector) {\n        return selector.replace(doubleColonPseudoElRegex, function(match, submatch1, submatch2) {\n            return ':' + submatch2;\n        })\n    }\n\n    function removeRule(rule) {\n        var sheet = rule.sheet;\n        if (sheet.deleteRule) {\n            sheet.deleteRule(rule.index);\n        } else if (sheet.removeRule) {\n            sheet.removeRule(rule.index);\n        }\n    }\n\n    function extend(dest, src) {\n        for (var key in src) {\n            if (!src.hasOwnProperty(key))\n                continue;\n            dest[key] = src[key];\n        }\n        return dest;\n    }\n\n    function aggregateStyles(rules) {\n        var aggregate = {};\n        for (var i = 0; i < rules.length; i++) {\n            extend(aggregate, declaredProperties(rules[i].style));\n        }\n        return aggregate;\n    }\n\n    function declaredProperties(style) {\n        var declared = {};\n        for (var i = 0; i < style.length; i++) {\n            declared[style[i]] = style[toCamelCase(style[i])];\n        }\n        return declared;\n    }\n\n    // IE9 stores rules with attributes (classes or ID's) adjacent in the opposite order as defined\n    // causing them to not be found, so this method swaps [#|.]sel1[#|.]sel2 to become [#|.]sel2[#|.]sel1\n    function swapAdjSelAttr(selector) {\n        var swap = '';\n        var lastIndex = 0;\n\n        while ((match = adjSelAttrRegex.exec(selector)) != null) {\n            if (match[0] === '')\n                break;\n            swap += selector.substring(lastIndex, match.index);\n            swap += selector.substr(match.index + match[1].length, match[2].length);\n            swap += selector.substr(match.index, match[1].length);\n            lastIndex = match.index + match[0].length;\n        }\n        swap += selector.substr(lastIndex);\n\n        return swap;\n    };\n\n    // FF and older browsers store rules with pseudo elements using single-colon syntax\n    function swapPseudoElSyntax(selector) {\n        if (doubleColonPseudoElRegex.exec(selector)) {\n            return toSingleColonPseudoElements(selector);\n        }\n        return selector;\n    }\n\n    function setStyleProperties(rule, properties) {\n        for (var key in properties) {\n            var value = properties[key];\n            var importantIndex = value.indexOf(' !important');\n\n            // Modern browsers seem to handle overrides fine, but IE9 doesn't\n            rule.style.removeProperty(key);\n            if (importantIndex > 0) {\n                rule.style.setProperty(key, value.substr(0, importantIndex), 'important');\n            } else {\n                rule.style.setProperty(key, value);\n            }\n        }\n    }\n\n    function toCamelCase(str) {\n        return str.replace(/-([a-z])/g, function (match, submatch) {\n            return submatch.toUpperCase();\n        });\n    }\n\n    function transformCamelCasedPropertyNames(oldProps) {\n        var newProps = {};\n        for (var key in oldProps) {\n            newProps[unCamelCase(key)] = oldProps[key];\n        }\n        return newProps;\n    }\n\n    function unCamelCase(str) {\n        return str.replace(/([A-Z])/g, function(match, submatch) {\n            return '-' + submatch.toLowerCase();\n        });\n    }\n\n    var Jss = function(doc) {\n        this.doc = doc;\n        this.head = this.doc.head || this.doc.getElementsByTagName('head')[0];\n        this.sheets = this.doc.styleSheets || [];\n    };\n\n    Jss.prototype = {\n        // Returns JSS rules (selector is optional)\n        get: function(selector) {\n            if (!this.defaultSheet) {\n                return {};\n            }\n            if (selector) {\n                return aggregateStyles(getRules(this.defaultSheet, selector));\n            }\n            var rules = getSelectorsAndRules(this.defaultSheet);\n            for (selector in rules) {\n                rules[selector] = aggregateStyles(rules[selector]);\n            }\n            return rules;\n        },\n        // Returns all rules (selector is required)\n        getAll: function(selector) {\n            var properties = {};\n            for (var i = 0; i < this.sheets.length; i++) {\n                extend(properties, aggregateStyles(getRules(this.sheets[i], selector)));\n            }\n            return properties;\n        },\n        // Adds JSS rules for the selector based on the given properties\n        set: function(selector, properties) {\n            if (!this.defaultSheet) {\n                this.defaultSheet = this._createSheet();\n            }\n            properties = transformCamelCasedPropertyNames(properties);\n            var rules = getRules(this.defaultSheet, selector);\n            if (!rules.length) {\n                rules = [addRule(this.defaultSheet, selector)];\n            }\n            for (var i = 0; i < rules.length; i++) {\n                setStyleProperties(rules[i], properties);\n            }\n        },\n        // Removes JSS rules (selector is optional)\n        remove: function(selector) {\n            if (!this.defaultSheet)\n                return;\n            if (!selector) {\n                this._removeSheet(this.defaultSheet);\n                delete this.defaultSheet;\n                return;\n            }\n            var rules = getRules(this.defaultSheet, selector);\n            for (var i = 0; i < rules.length; i++) {\n                removeRule(rules[i]);\n            }\n            return rules.length;\n        },\n        _createSheet: function() {\n            var styleNode = this.doc.createElement('style');\n            styleNode.type = 'text/css';\n            styleNode.rel = 'stylesheet';\n            this.head.appendChild(styleNode);\n            return styleNode.sheet;\n        },\n        _removeSheet: function(sheet) {\n            var node = sheet.ownerNode;\n            node.parentNode.removeChild(node);\n        }\n    };\n\n    var exports = new Jss(document);\n    exports.forDocument = function(doc) {\n        return new Jss(doc);\n    };\n    return exports;\n})();\n\ntypeof module !== 'undefined' && module.exports && (module.exports = jss); // CommonJS support\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./external/jss.js\n ** module id = 16\n ** module chunks = 0\n **/","// utilities needed by the configuration (excludes dependencies the configs don't need so the webpack bundle is lean)\n\n//require('hashmap') // here to mark hashmapMerge's dependency on this module\nvar path = require('path')\n\n\n// Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n// any number of objects can be passed into the function and will be merged into the first argument in order\n// returns obj1 (now mutated)\nvar merge = exports.merge = function(obj1, obj2/*, moreObjects...*/){\n    return mergeInternal(arrayify(arguments), false)\n}\n\n// like merge, but traverses the whole object tree\n// the result is undefined for objects with circular references\nvar deepMerge = exports.deepMerge = function(obj1, obj2/*, moreObjects...*/) {\n    return mergeInternal(arrayify(arguments), true)\n}\n\n// merges two hashmaps together just like merge does for regular objects\n// non-deep merge\nexports.hashmapMerge = function(obj1, obj2/*, moreObjects...*/) {\n    obj2.forEach(function(value, key) {\n        obj1.set(key, obj2.get(key))\n    })\n\n    if(arguments.length > 2) {\n        var newObjects = [obj1].concat(Array.prototype.slice.call(arguments, 2))\n        return exports.hashmapMerge.apply(this, newObjects)\n    } else {\n        return obj1\n    }\n}\n\n// returns a new object where properties of b are merged onto a (a's properties may be overwritten)\nexports.objectConjunction = function(a, b) {\n    var objectCopy = {}\n    merge(objectCopy, a)\n    merge(objectCopy, b)\n    return objectCopy\n}\n\n// turns an array of values into a an object where those values are all keys that point to 'true'\nexports.arrayToMap = function(array) {\n    var result = {}\n    array.forEach(function(v) {\n        result[v] = true\n    })\n    return result\n}\n\nfunction mergeInternal(objects, deep) {\n    var obj1 = objects[0]\n    var obj2 = objects[1]\n\n    for(var key in obj2){\n       //if(Object.hasOwnProperty.call(obj2, key)) {\n            if(deep && obj1[key] instanceof Object && obj2[key] instanceof Object) {\n                mergeInternal([obj1[key], obj2[key]], true)\n            } else {\n                obj1[key] = obj2[key]\n            }\n       //}\n    }\n\n    if(objects.length > 2) {\n        var newObjects = [obj1].concat(objects.slice(2))\n        return mergeInternal(newObjects, deep)\n    } else {\n        return obj1\n    }\n}\n\n\nfunction arrayify(a) {\n    return Array.prototype.slice.call(a, 0)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/utils.js\n ** module id = 17\n ** module chunks = 0\n **/","// some functionality that is needed by Gem.js but is related to styling (some things are also needed by Style.js)\n\nvar HashMap = require(\"hashmap\")\n\nvar Style = require(\"./Style\")\nvar utils = require('./utils')\n\nvar defaultStyleMap = new HashMap() // maps from a proto class to its computed default style\nvar computedStyles = new HashMap() // stores a map from styleMap components, to the combined style map\n\n\n// gets the right style from the styleMap, depending on the gem's `name` and `label` (`label` styles take precedence)\n// takes the component's inheritance tree into account (relies on the gem.constructor.parent property)\nvar getStyleMapEntryForGem = exports.getStyleForComponent = function (styleMap, gem) {\n    if(styleMap === undefined)\n        return undefined\n\n    return getStyleForLabel(styleMap, gem) || getStyleForGemName(styleMap, gem)\n}\n\nvar getStyleForLabel = exports.getStyleForLabel = function(styleMap, gem) {\n    if(gem.label !== undefined && '$'+gem.label in styleMap) {\n        return styleMap['$'+gem.label]\n    }\n}\nvar getStyleForGemName = exports.getStyleForBlockName = function(styleMap, gem) {\n    var constructor = gem.constructor\n    while(constructor !== undefined) {\n        var style = styleMap[constructor.name]\n        if(style !== undefined) {\n            return style\n        } else {\n            constructor = constructor.parent\n        }\n    }\n}\n\n// gets the possibly inheriting style from the styleMap for `gem`\n// gem - the gem to get the style for\n// ancestor - the gem to get the computedStyleMap from\nvar getInheritingStyle = exports.getInheritingStyle = function(gem) {\n    var ancestor = gem.parent\n    if(ancestor === undefined || ancestor.computedStyleMap === undefined) return undefined\n\n    if(gem.label !== undefined) {\n        var styleMapKey = '$'+gem.label\n        var nextContructor = gem.constructor\n    } else {\n        var styleMapKey = gem.constructor.name\n        var nextContructor = gem.constructor.parent\n    }\n\n    var nextAncestorToSearchFrom = ancestor\n    var styles = [], inherit = true\n    while(nextAncestorToSearchFrom !== undefined) {    // find styles from the most specific name to the least specific\n        var stylesForKey = findStylesForStyleMapKey(nextAncestorToSearchFrom, styleMapKey)\n        styles = styles.concat(stylesForKey.styles)\n        nextAncestorToSearchFrom = stylesForKey.nextAncestorToSearchFrom\n        inherit = stylesForKey.inherit\n\n        if(nextContructor === undefined || !inherit) {\n            break\n        } else {\n            if(styleMapKey === 'Gem') {\n                break // we're done - no need to check anything higher in the prototype chain than Gem\n            }\n\n            styleMapKey = nextContructor.name\n            nextContructor = nextContructor.parent\n        }\n    }\n\n    var reversedStyles = styles.reverse() // reverse so later styles override earlier styles\n    var styleToReturn = reversedStyles[0]\n    for(var n=1; n<reversedStyles.length; n++) {\n        styleToReturn = styleToReturn.mix(reversedStyles[n], false)\n    }\n\n    return styleToReturn\n\n\n    function findStylesForStyleMapKey(startAncestor, key) {\n        var styles = [], inherit = true\n        var curAncestor = startAncestor, nextAncestorToSearchFrom = startAncestor\n        while(curAncestor !== undefined) {                                // find styles from the closest parent to the farthest\n            if(curAncestor.computedStyleMap !== undefined) {\n                var style = curAncestor.computedStyleMap[key]\n            }\n            if(style !== undefined) {\n                if(styles.indexOf(style) === -1) {\n                    styles.push(style)\n                }\n                nextAncestorToSearchFrom = curAncestor\n\n                inherit = style.inherit\n                if(!inherit) {\n                    break\n                }\n            }\n\n            curAncestor = curAncestor.parent\n        }\n\n        return {styles:styles, nextAncestorToSearchFrom: nextAncestorToSearchFrom, inherit:inherit}\n    }\n}\n\n// returns the conjunction of two style maps\n// gets it from the computedStyles cache if its already in there\nvar styleMapConjunction = exports.styleMapConjunction = function (secondaryStyleMap, primaryStyleMap) {\n    if(secondaryStyleMap === undefined) return primaryStyleMap\n    if(primaryStyleMap === undefined) return secondaryStyleMap\n\n    var cachedStyleMap = computedStyles.get([secondaryStyleMap, primaryStyleMap])\n    if(cachedStyleMap === undefined) {\n        if(secondaryStyleMap  === undefined) {\n            cachedStyleMap = primaryStyleMap\n        } else if(primaryStyleMap === undefined) {\n            cachedStyleMap = secondaryStyleMap\n        } else {\n            var overridingProperties = {}, atLeastOne = false\n            for(var key in primaryStyleMap) {\n                if(secondaryStyleMap[key] !== primaryStyleMap[key]) {\n                    overridingProperties[key] = primaryStyleMap[key]\n                    atLeastOne = true\n                }\n            }\n\n            if(atLeastOne) {\n                cachedStyleMap = utils.objectConjunction(secondaryStyleMap, overridingProperties)\n            } else { // the styleMaps are different objects, but contain the same thing\n                cachedStyleMap = secondaryStyleMap\n            }\n        }\n\n        if(cachedStyleMap === undefined) cachedStyleMap = false // switch it out with false so it can be recognized\n        computedStyles.set([secondaryStyleMap, primaryStyleMap], cachedStyleMap)\n    }\n\n    if(cachedStyleMap === false) {\n        return undefined\n    }\n    return cachedStyleMap\n}\n\n\n\nexports.getDefaultStyle = function(gem)  {\n    // attempt to get from the cache\n    var defaultGemStyle = defaultStyleMap.get(gem.constructor)\n    if(defaultGemStyle === undefined) {\n        defaultGemStyle = createDefaultGemStyle(gem)\n        if(defaultGemStyle === undefined) defaultGemStyle = false\n        defaultStyleMap.set(gem.constructor, defaultGemStyle)\n    }\n\n    if(defaultGemStyle === false) {\n        return undefined\n    }\n    return defaultGemStyle\n}\n\n// returns a new style with style b mixed into style a (works even if they're both undefined)\nvar mixStyles = exports.mixStyles = function(a,b) {\n    if(a === undefined)\n        return b\n    else\n        return a.mix(b, false)\n}\n\n\n\n\n\n// sets the currentStyle of a gem and makes all the appropriate changes to render a new active style for the gem and its children\nexports.setCurrentStyle = function(gem, newCurrentStyle, defaultStyle) {\n\n    var current$state = gem._currentStyle === undefined? undefined: gem._currentStyle.stateHandler\n    var newCurrentStyle$state = newCurrentStyle === undefined? undefined: newCurrentStyle.stateHandler\n    if(current$state !== newCurrentStyle$state) {     // if the $state function remains the same, we don't gotta do nothin (about switching state functions at least)\n        if(gem._stateChangeHandler !== undefined) {  // remove the old handler if necessary\n            gem.state.removeListener('change', gem._stateChangeHandler)\n            gem._stateChangeHandler = undefined\n        }\n\n        if(newCurrentStyle$state !== undefined) {     // add a new handler if necessary\n            gem.state.on('change', gem._stateChangeHandler = function() {\n                var rawStateStyle = getStateStyle(gem._currentStyle, gem.state.subject)\n                setMixedStateStyle(gem, mixStyles(gem._currentStyle, rawStateStyle))\n            })\n        }\n    }\n\n    gem._currentStyle = newCurrentStyle\n    var rawStateStyle = getStateStyle(newCurrentStyle, gem.state.subject)\n\n    var newMixedStateStyle = mixStyles(newCurrentStyle, rawStateStyle)\n    setMixedStateStyle(gem, newMixedStateStyle, defaultStyle)\n}\n\n\n// handles reseting a gem's active style when its state style changes\n// renders the pseudoclass style\nfunction setMixedStateStyle(gem, mixedStateStyle, defaultStyle) {\n    var psuedoclassState = {}\n\n    // if a pseudoclass can no longer apply, undo its setup\n    for(var pseudoClass in gem._styleSetupInfo) {\n        if(mixedStateStyle === undefined || !(pseudoClass in mixedStateStyle.pseudoclasses.emulatedInfo)) {\n            var setupInfo = gem._styleSetupInfo[pseudoClass]\n            setupInfo.kill(gem, setupInfo.state)\n            delete gem._styleSetupInfo[pseudoClass]\n        }\n    }\n\n    // setup new pseudoclasses\n    if(mixedStateStyle !== undefined) {\n        for(var pseudoClass in mixedStateStyle.pseudoclasses.emulatedInfo) {\n            if(!(pseudoClass in gem._styleSetupInfo)) {                     // if this exact pseudoclass is already setup, no need to do anything\n                ;(function(pseudoClass, emulationInfo){   // close over those variables (so they keep the value they had when the function was setup)\n                    var setupState = emulationInfo.fns.setup(gem, function() { // start\n                        var changed = psuedoclassState[pseudoClass] !== true\n                        if(changed) {\n                            psuedoclassState[pseudoClass] = true\n                            changeStyleIfNecessary()\n                        }\n                    }, function() { // end\n                        var changed = psuedoclassState[pseudoClass] !== false\n                        if(changed) {\n                            psuedoclassState[pseudoClass] = false\n                            changeStyleIfNecessary()\n                        }\n                    }, emulationInfo.parameter)\n\n                    gem._styleSetupInfo[pseudoClass] = {state: setupState, kill: emulationInfo.fns.kill}\n\n                })(pseudoClass, mixedStateStyle.pseudoclasses.emulatedInfo[pseudoClass])\n            }\n        }\n    }\n\n    // build up the pseudoclass state - depending on what pseudoclasses might become applicable\n    if(mixedStateStyle !== undefined) {\n        for(var pseudoclassKey in mixedStateStyle.pseudoclasses.emulatedInfo) {\n            var info = mixedStateStyle.pseudoclasses.emulatedInfo[pseudoclassKey]\n            psuedoclassState[pseudoclassKey] = info.fns.check(gem, info.parameter)\n        }\n    }\n\n    // set current pseudoclass style\n    changeStyleIfNecessary()\n\n\n    function changeStyleIfNecessary() {\n        var pseudoclassStyleInfo = getPseudoclassStyleFor(mixedStateStyle, psuedoclassState)\n//        if(pseudoclassStyleInfo.style !== undefined && pseudoclassStyleInfo.style.inherit) {\n//            pseudoclassStyleInfo.style = getInheritingStyle(gem).mix(pseudoclassStyleInfo.style, false)\n//        }\n\n        var newPreStyleMapStyle = mixStyles(mixedStateStyle, pseudoclassStyleInfo.style)\n        setPreStyleMapStyle(gem, newPreStyleMapStyle, pseudoclassStyleInfo.index, defaultStyle)\n    }\n}\n\n// sets the style before being modified by the gem's parent's computedStyleMap\n// handles removing the state listener and calling $kill on the old activeStyle\nfunction setPreStyleMapStyle(gem, newPreStyleMapStyle, jsRenderedPseudoclassIndex, defaultStyle) {\n    if(gem.parent !== undefined && newPreStyleMapStyle !== undefined)\n        var newComputedStyleMap = styleMapConjunction(gem.parent.computedStyleMap, newPreStyleMapStyle.componentStyleMap)\n    else if(gem.parent !== undefined)\n        var newComputedStyleMap = gem.parent.computedStyleMap\n    else if(newPreStyleMapStyle !== undefined)\n        var newComputedStyleMap = newPreStyleMapStyle.componentStyleMap\n    else\n        var newComputedStyleMap = undefined\n\n    var newActiveStyle = undefined // can be changed below\n    var cancel = false\n    if(newPreStyleMapStyle !== undefined) {\n        if(gem.parent !== undefined) var nativePseudoclassMap = gem.parent._nativePseudoclassMap\n        else                           var nativePseudoclassMap = {}\n\n        var nativePseudoclassSelectorMap = getStyleMapEntryForGem(nativePseudoclassMap, gem)\n        var nativeCssInfo = newPreStyleMapStyle.createNativeCssInfo(gem, newComputedStyleMap, nativePseudoclassSelectorMap, jsRenderedPseudoclassIndex, defaultStyle)\n\n        if(nativeCssInfo.cancel) {\n            cancel = true\n            setMixedStateStyle(gem, nativeCssInfo.retryStyle)\n\n        } else {\n            newActiveStyle = nativeCssInfo.style\n            newComputedStyleMap = nativeCssInfo.styleMap // even newer!\n            gem._nativePseudoclassMap = nativeCssInfo.nativePseudoclassMap\n        }\n    }\n\n    if(!cancel) {\n        setActiveStyle(gem, newActiveStyle, newComputedStyleMap)\n    }\n}\n\n// sets the active style on the gem and on the gem's children\n// also sets the gem's new computedStyleMap\nfunction setActiveStyle(gem, newActiveStyle, newComputedStyleMap) {\n    var activeStyleChanged = newActiveStyle !== gem._activeStyle\n    var computedStyleMapChanged = gem.computedStyleMap !== newComputedStyleMap\n\n    if(activeStyleChanged) {\n        setStyleClass(gem, newActiveStyle)\n\n        var curActiveStyle$setup = gem._activeStyle === undefined? undefined: gem._activeStyle.setup\n        var newActiveStyle$setup = newActiveStyle === undefined? undefined: newActiveStyle.setup\n        if(curActiveStyle$setup !== newActiveStyle$setup) {\n            applyStyleKillFunction(gem)\n            applyStyleSetupFunction(gem, newActiveStyle)\n        }\n\n        gem._activeStyle = newActiveStyle\n    }\n\n\n    gem.computedStyleMap = newComputedStyleMap\n\n    // propogate styles to children\n    gem.children.forEach(function(child) {\n        if(computedStyleMapChanged || !child.attached) {\n            setAttachStatus(child, true)\n            child.style = child.style  // force a re-render on each child\n        }\n    })\n}\n\nvar setAttachStatus = exports.setAttachStatus = function(node, attached) {\n    node.attached = attached\n    if(attached) {\n        node.emit('attach')\n    } else {\n        node.emit('detach')\n        node.children.forEach(function(child) {\n            setAttachStatus(child, false)\n        })\n    }\n}\n\n\n// given a style and an object representing some state, returns the state given by the style's $state function\n// returns undefined if it doesn't have a state function\n// handles caching state styles (an optimization)\nfunction getStateStyle(currentStyle, stateParameter) {\n    if(currentStyle === undefined || currentStyle.stateHandler === undefined) return undefined\n\n    var returnedStyle = currentStyle.stateHandler(stateParameter)\n\n    // todo: figure out if this style has been returned before, and if so, use the already-generated style (mostly so that that style can take advantage of other cached combinations)\n\n    return returnedStyle\n}\n\n// returns an object with the properties:\n    // style - the jsRendered pseudoclass style for the gem's relevant pseudoclass state\n    // index - the index of the pseudoclass (jsRenderedPseudoclassIndex)\n// returns undefined if no emulated pseudoclass style applies or if only native pseudoclass stylings apply\n// state - an object that will be mutated with the current state for each pseudoclass\nfunction getPseudoclassStyleFor(style, state) {\n    if(style === undefined) return {index:0}\n\n    var index = 0, result={index:0}\n    style.pseudoclasses.classes.forEach(function(psuedoclassStyle, compoundKey) {\n        if(!psuedoclassStyle.pureNative) {\n            for(var j=0; j<compoundKey.length; j++) {\n                var pseudoclass = compoundKey[j]\n                if(!state[pseudoclass]) {\n                    break;\n                }\n            }\n\n            if(j === compoundKey.length) {\n                result = {index: index, style: psuedoclassStyle}\n            }\n        }\n\n        index++\n    })\n\n    return result\n}\n\n\n\n// finds the default style for a gem, mixes it with the appropriate ancestor styles, and returns the result\nfunction createDefaultGemStyle(that) {\n    if(that.defaultStyle !== undefined) {\n        var defaultStyle = getStyleObject(that.defaultStyle)\n    }\n\n    // get list of default styles\n    var defaultStyles = []\n    var nextConstructor = that.constructor\n    while(nextConstructor !== undefined) {\n        if(nextConstructor.defaultStyle !== undefined) {\n            defaultStyles.push(nextConstructor.defaultStyle)\n        }\n        nextConstructor = nextConstructor.parent\n    }\n\n    // generate merged default style\n    var reversedDefaults = defaultStyles.reverse()\n    var mergedDefaultStyle = reversedDefaults[0]\n    for(var n=1; n<reversedDefaults.length; n++) {\n        mergedDefaultStyle = mergedDefaultStyle.mix(reversedDefaults[n], false)\n    }\n\n    return mergedDefaultStyle\n}\n\n\n// applies setup appropriately\nfunction applyStyleSetupFunction(component, style) {\n    if(style !== undefined && style.setup !== undefined) {\n        component._styleSetupObject = style.setup(component, style) // call setup on the component\n    } else {\n        component._styleSetupObject = undefined\n    }\n}\n// applies kill appropriately\nfunction applyStyleKillFunction(component) {\n    var activeStyle = component._activeStyle\n    if(activeStyle !== undefined && activeStyle.setup !== undefined) {\n        if(activeStyle.kill === undefined)\n            throw new Error('style has been unset but does not have a \"kill\" function to undo its \"setup\" function')\n\n        activeStyle.kill(component, component._styleSetupObject)\n    }\n}\n\n\n// sets the style, replacing one if one already exists\nfunction setStyleClass(component, style) {\n    var activeStyle = component._activeStyle\n\n    //var newStyle = component.domNode.className\n    if(activeStyle !== undefined) {\n        component.domNode.classList.remove(activeStyle.className)\n        // newStyle = newStyle.replace(new RegExp(\" ?\\\\b\"+activeStyle.className+\"\\\\b\"),'') // remove the previous css class\n    }\n    if(style !== undefined) {\n        component.domNode.classList.add(style.className)\n        //newStyle = style.className+' '+newStyle.trim() // note that the order of classes doesn't matter\n    }\n\n    //component.domNode.className = newStyle\n}\n\nvar styleObjectMap = new HashMap // maps javascript object styles to Style objects\nvar getStyleObject = exports.getStyleObject = function(style) {\n    if(isStyleObject(style)) {\n        return style\n    } else {\n        var styleObject = styleObjectMap.get(style)\n        if(styleObject) {\n            return styleObject\n        } else {\n            var styleObject = Style(style)\n            styleObjectMap.set(style,styleObject)\n            return styleObject\n        }\n    }\n}\n\n// if you load two different instances of gems, its necessary to do a bit of duck typing\nvar isStyleObject = exports.isStyleObject = function (x) {\n    return x.className !== undefined && x.componentStyleMap !== undefined && x.mix !== undefined\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/blockStyleUtils.js\n ** module id = 18\n ** module chunks = 0\n **/","var EventEmitter = require('events').EventEmitter\nvar proto = require(\"proto\")\nvar utils = require(\"utils\")\nvar devFlag = require(\"devFlag\")\n\nmodule.exports = proto(EventEmitter, function(superclass) {\n\n    this.init = function() {\n        superclass.apply(this, arguments)\n\n        this.ifonHandlers = {}\n        this.ifoffHandlers = {}\n        this.ifonAllHandlers = []\n        this.ifoffAllHandlers = []\n    }\n\n    // callback will be triggered immediately if there is already a listener attached, or\n    // callback will be triggered when the first listener for the event is added\n    // (regardless of whether its done through on or once)\n    // parameters can be:\n        // event, callback - attach an ifon handler for the passed event\n        // callback - attach an ifon handler for all events\n    this.ifon = function(event, callback) {\n        if(event instanceof Function) {     // event not passed, only a callback\n            callback = event // fix the argument\n            for(var eventName in this._events) {\n                if(this.listeners(eventName).length > 0) {\n                    callback(eventName)\n                }\n            }\n        } else if(this.listeners(event).length > 0) {\n            callback(event)\n        }\n\n        addHandlerToList(this, 'ifonHandlers', event, callback)\n    }\n\n    // removes either:\n        // removeIfon() - all ifon handlers (if no arguments are passed), or\n        // removeIfon(event) - all ifon handlers for the passed event, or\n        // removeIfon(callback) - the passed ifon-all handler (if the first parameter is the callback)\n        // removeIfon(event, callback) - the specific passed callback for the passed event\n    this.removeIfon = function(event, callback) {\n        removeFromHandlerList(this, 'ifonHandlers', event, callback)\n    }\n\n    // callback will be triggered when the last listener for the 'click' event is removed (will not trigger immediately if there is no event listeners on call of ifoff)\n    // (regardless of whether this is done through removeListener or as a result of 'once' being fulfilled)\n    // parameters can be:\n        // event, callback - attach an ifoff handler for the passed event\n        // callback - attach an ifoff handler for all events\n    this.ifoff = function(event, callback) {\n        addHandlerToList(this, 'ifoffHandlers', event, callback)\n    }\n\n    // removes either:\n        // removeIfoff() - all ifoff handlers (if no arguments are passed), or\n        // removeIfoff(event) - all ifoff handlers for the passed event, or\n        // removeIfoff(callback) - the passed ifoff-all handler (if the first parameter is the callback)\n        // removeIfoff(event, callback) - the specific passed callback for the passed event\n    this.removeIfoff = function(event, callback) {\n        removeFromHandlerList(this, 'ifoffHandlers', event, callback)\n    }\n\n    // emitter is the emitter to proxy handler binding to\n    // options can have one of the following properties:\n        // only - an array of events to proxy\n        // except - an array of events to *not* proxy\n    this.proxy = function(emitter, options) {\n        if(options === undefined) options = {}\n        if(options.except !== undefined) {\n            var except = utils.arrayToMap(options.except)\n            var handleIt = function(event){return !(event in except)}\n        } else if(options.only !== undefined) {\n            var only = utils.arrayToMap(options.only)\n            var handleIt = function(event){return event in only}\n        } else {\n            var handleIt = function(){return true}\n        }\n\n        if(devFlag.dev) {\n            var trace = getTrace()\n        }\n\n        var that = this, handler;\n        this.ifon(function(event) {\n            if(handleIt(event)) {\n                emitter.on(event, handler = function() {\n                    trace; // force this to be in scope\n                    that.emit.apply(that, [event].concat(Array.prototype.slice.call(arguments)))\n                })\n            }\n        })\n        this.ifoff(function(event) {\n            if(handleIt(event))\n                emitter.off(event, handler)\n        })\n    }\n\n    /*override*/ this.on = this.addListener = function(event, callback) {\n        var triggerIfOn = this.listeners(event).length === 0\n        superclass.prototype.on.apply(this,arguments)\n        if(triggerIfOn) triggerIfHandlers(this, 'ifonHandlers', event)\n    }\n\n    /*override*/ this.off = this.removeListener = function(event, callback) {\n        var triggerIfOff = this.listeners(event).length === 1\n        superclass.prototype.removeListener.apply(this,arguments)\n        if(triggerIfOff) triggerIfHandlers(this, 'ifoffHandlers', event)\n    }\n    /*override*/ this.removeAllListeners = function(event) {\n        var triggerIfOffForEvents = []\n        if(event !== undefined) {\n            if(this.listeners(event).length > 0) {\n                triggerIfOffForEvents.push(event)\n            }\n        } else {\n            for(var event in this._events) {\n                if(this.listeners(event).length > 0) {\n                    triggerIfOffForEvents.push(event)\n                }\n            }\n        }\n\n        superclass.prototype.removeAllListeners.apply(this,arguments)\n\n        for(var n=0; n<triggerIfOffForEvents.length; n++) {\n            triggerIfHandlers(this, 'ifoffHandlers', triggerIfOffForEvents[n])\n        }\n    }\n\n})\n\n\n// triggers the if handlers from the normal list and the \"all\" list\nfunction triggerIfHandlers(that, handlerListName, event) {\n    triggerIfHandlerList(that[handlerListName][event], event)\n    triggerIfHandlerList(that[normalHandlerToAllHandlerProperty(handlerListName)], event)\n}\n\n\n// triggers the if handlers from a specific list\n// ya these names are confusing, sorry : (\nfunction triggerIfHandlerList(handlerList, event) {\n    if(handlerList !== undefined) {\n        for(var n=0; n<handlerList.length; n++) {\n            handlerList[n](event)\n        }\n    }\n}\n\nfunction addHandlerToList(that, handlerListName, event, callback) {\n    if(event instanceof Function) {\n        // correct arguments\n        callback = event\n        event = undefined\n    }\n\n    if(event !== undefined && callback !== undefined) {\n        var handlerList = that[handlerListName][event]\n        if(handlerList === undefined) {\n            handlerList = that[handlerListName][event] = []\n        }\n\n        handlerList.push(callback)\n    } else {\n        that[normalHandlerToAllHandlerProperty(handlerListName)].push(callback)\n    }\n}\n\nfunction removeFromHandlerList(that, handlerListName, event, callback) {\n    if(event instanceof Function) {\n        // correct arguments\n        callback = event\n        event = undefined\n    }\n\n    if(event !== undefined && callback !== undefined) {\n        removeCallbackFromList(that[handlerListName][event], callback)\n    } else if(event !== undefined) {\n        delete that[handlerListName][event]\n    } else if(callback !== undefined) {\n        var allHandlerListName = normalHandlerToAllHandlerProperty(handlerListName)\n        removeCallbackFromList(that[allHandlerListName], callback)\n    } else {\n        var allHandlerListName = normalHandlerToAllHandlerProperty(handlerListName)\n        that[handlerListName] = {}\n        that[allHandlerListName] = []\n    }\n}\n\nfunction normalHandlerToAllHandlerProperty(handlerListName) {\n    if(handlerListName === 'ifonHandlers')\n        return 'ifonAllHandlers'\n    if(handlerListName === 'ifoffHandlers')\n        return 'ifoffAllHandlers'\n}\n\nfunction removeCallbackFromList(list, callback) {\n    var index = list.indexOf(callback)\n    list.splice(index,1)\n}\n\nfunction getTrace() {\n    try {\n        throw new Error()\n    } catch(e) {\n        return e\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/EventEmitterB.js\n ** module id = 19\n ** module chunks = 0\n **/","\n// the property that should be used to get and set text (this is different on chrome vs firefox for some dumb reason)\nexports.textProperty = 'textContent' //document.createElement(\"div\").textContent != undefined ? 'textContent' : 'innerText'\n\n// creates a dom element optionally with a class and attributes\n var node = exports.node = function(type, className, options) {\n    var elem = document.createElement(type)\n\n    if(options !== undefined) {\n        if(options.attr !== undefined) {\n            for(var attribute in options.attr) {\n                setAttribute(elem, attribute, options.attr[attribute])\n            }\n        }\n        if(options.textContent !== undefined) {\n            elem.textContent = options.textContent\n        }\n    }\n\n    if(className !== undefined)\n        elem.className = className\n\n    return elem\n}\n\n// convenience function for creating a div\nexports.div = function(className, options) {\n    return node('div', className, options)\n}\n\n\n// adds an attribute to a domNode\nvar setAttribute = module.exports.setAttribute = function(/*[domNode,] type, value*/) {\n    if (arguments.length === 2) {\n        var domNode = this.domNode;\n        var type = arguments[0];\n        var value = arguments[1];\n    } else if (arguments.length === 3) {\n        var domNode = arguments[0];\n        var type = arguments[1];\n        var value = arguments[2];\n    } else {\n        throw new Error(\"This function expects arguments to be: [domNode,] type, value\");\n    }\n    var attr = document.createAttribute(type)\n    attr.value = value\n    domNode.setAttributeNode(attr)\n}\n\n// sets the selection\n//\n// works for contenteditable elements\nexports.setSelectionRange = function(containerEl, start, end) {\n\n    if(containerEl.nodeName === 'INPUT' || containerEl.nodeName === 'TEXTAREA') {\n        containerEl.setSelectionRange(start, end)\n    } else {\n        var charIndex = 0, range = document.createRange();\n        range.setStart(containerEl, 0);\n        range.collapse(true);\n        var foundStart = false;\n\n        iterateThroughLeafNodes(containerEl, function(node) {\n            var hiddenCharacters = findHiddenCharacters(node, node.length)\n            var nextCharIndex = charIndex + node.length - hiddenCharacters;\n\n            if (!foundStart && start >= charIndex && start <= nextCharIndex) {\n                var nodeIndex = start-charIndex\n                var hiddenCharactersBeforeStart = findHiddenCharacters(node, nodeIndex)\n                range.setStart(node, nodeIndex + hiddenCharactersBeforeStart);\n                foundStart = true;\n            }\n\n            if (foundStart && end >= charIndex && end <= nextCharIndex) {\n                var nodeIndex = end-charIndex\n                var hiddenCharactersBeforeEnd = findHiddenCharacters(node, nodeIndex)\n                range.setEnd(node, nodeIndex + hiddenCharactersBeforeEnd);\n                return true; // stop the iteration - we're done here\n            }\n\n            charIndex = nextCharIndex\n        })\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n\n// gets the character offsets of a selection within a particular dom node\n// returns undefined if there is no selection in the element\n// note: yes this code doesn't work in older versions of IE (or possibly any versions) - if you want it to work in IE, please use http://modernizr.com/ or a polyfill for ranges\nexports.getSelectionRange = function (element) {\n\n    var selection = window.getSelection()\n    var isInputOrArea = element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA'\n\n    for(var n=0; n<selection.rangeCount; n++) {\n        var range = selection.getRangeAt(0)\n        if(isInputOrArea) {\n            if(range.startOffset === range.endOffset && range.startContainer.children[range.startOffset] === element /*|| range.startContainer === element || */) { // I don't think the input or textarea itself will ever be the startContainer\n                return [element.selectionStart, element.selectionEnd]\n            }\n        } else {\n            var startsInElement = element.contains(range.startContainer)\n            if(startsInElement) {\n                var elementToIterateThrough = element\n                var startFound = true\n            } else {\n                var elementToIterateThrough = range.commonAncestorContainer\n                var startFound = false\n                var startContainerFound = false\n            }\n\n            var visibleCharacterOffset = 0, start, end;\n            iterateThroughLeafNodes(elementToIterateThrough, function(leaf) {\n                if(!startFound) {\n                    if(leaf === range.startContainer) {\n                        startContainerFound = true\n                    }\n\n                    if(!element.contains(leaf) || !startContainerFound)\n                        return; // continue\n                    else if(startContainerFound)\n                       startFound = true\n                } else if(!startsInElement && !element.contains(leaf)) {\n                    return true // done!\n                }\n\n                if(leaf === range.startContainer) {\n                    start = visibleCharacterOffset + range.startOffset - findHiddenCharacters(leaf, range.startOffset)\n                }\n                if(leaf === range.endContainer) {\n                    end = visibleCharacterOffset + range.endOffset - findHiddenCharacters(leaf, range.endOffset)\n                    return true // done!\n                }\n\n                visibleCharacterOffset += leaf.length - findHiddenCharacters(leaf, leaf.length)\n            })\n\n            if(start === undefined && !startFound) {\n                return undefined\n            } else {\n                if(start === undefined) {\n                    start = 0 // start is at the beginning\n                }\n                if(end === undefined) {\n                    end = visibleCharacterOffset // end is all the way at the end (the selection may continue in other elements)\n                }\n\n                return [start, end]\n            }\n        }\n    }\n}\n\n\n// iterate through the leaf nodes inside element\n// callback(node) - a function called for each leaf node\n    // returning true from this ends the iteration\nfunction iterateThroughLeafNodes(element, callback) {\n    var nodeStack = [element], node;\n\n    while (node = nodeStack.pop()) {\n        if (node.nodeType == 3) {\n            if(callback(node) === true)\n                break;\n        } else {\n            var i = node.childNodes.length;\n            while (i--) {\n                nodeStack.push(node.childNodes[i]);\n            }\n        }\n    }\n}\n\nfunction findHiddenCharacters(node, beforeCaretIndex) {\n    var hiddenCharacters = 0\n    var lastCharWasWhiteSpace=true\n    for(var n=0; n-hiddenCharacters<beforeCaretIndex &&n<node.length; n++) {\n        if([' ','\\n','\\t','\\r'].indexOf(node.textContent[n]) !== -1) {\n            if(lastCharWasWhiteSpace)\n                hiddenCharacters++\n            else\n                lastCharWasWhiteSpace = true\n        } else {\n            lastCharWasWhiteSpace = false\n        }\n    }\n\n    return hiddenCharacters\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/domUtils.js\n ** module id = 20\n ** module chunks = 0\n **/","exports.dev = false  // set to true to enable dom element naming (so you can see boundaries of components when inspecting the dom)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/devFlag.js\n ** module id = 21\n ** module chunks = 0\n **/","var Gem = require('Gem')\nvar proto = require('proto')\nvar Style = require(\"Style\")\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static properties\n\n\tthis.name = 'ListItem'\n\n    this.defaultStyle = Style({\n        display: 'list-item'\n    })\n\n\t// instance properties\n\n\tthis.init = function(/*[label,] contents*/) {\n        if(arguments.length <= 1) {\n            var contents = arguments[0]\n        } else {\n            var label = arguments[0]\n            var contents = arguments[1]\n        }\n\n        this.domNode = document.createElement(\"li\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\tthis.label = label\n\n        this.children = [] // need children before calling add\n        if(contents instanceof Gem) {\n\t\t\tthis.add(contents)\n\t\t} else if(contents !== undefined) {\n            this.domNode.textContent = contents\n        }\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Item.js\n ** module id = 22\n ** module chunks = 0\n **/","// note: this is  not intended to be used directly - only through Select and MultiSelect\n\nvar proto = require('proto')\n\nvar Gem = require('Gem')\nvar Style = require('Style')\nvar domUtils = require(\"domUtils\")\n\n// emits a 'change' event when its 'selected' value changes\nmodule.exports = proto(Gem, function(superclass) {\n\n    // staic members\n\n    this.name = 'Option'\n\n    this.defaultStyle = Style({\n        display: 'block'\n    })\n\n\n    // instance members\n\n    this.init = function(/*[label,] value, text*/) {\n        this.domNode = document.createElement(\"option\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\n        if(arguments.length===2) {\n            this.val = arguments[0]\n            this.text = arguments[1]\n        } else { // 3\n            this.label = arguments[0]\n            this.val = arguments[1]\n            this.text = arguments[2]\n        }\n\n        superclass.init.apply(this, arguments) // superclass constructor\n    }\n\n    Object.defineProperty(this, 'val', {\n        // returns the value of the Option\n        get: function() {\n            return this._value\n        },\n\n        // sets the value of the Option\n        set: function(value) {\n            if(this.parent !== undefined) {\n                if(this.parent.options[value] !== undefined) {\n                    throw new Error(\"Can't give an Option the same value as another in the Select or MultiSelect (value: \"+JSON.stringify(value)+\")\")\n                }\n\n                if(this.val !== null) {\n                    delete this.parent.options[this.val]\n                }\n\n                this.parent.options[value] = this\n            }\n\n            this._value = value\n\n            if(this.selected && this.parent !== undefined) {\n                this.parent.emit('change')\n            }\n        }\n    })\n\n\n    Object.defineProperty(this, 'selected', {\n        // returns whether or not the option is selected\n        get: function() {\n            return this.domNode.selected\n        },\n\n        // sets the selected state of the option to the passed value (true for selected)\n        set: function(value) {\n            var booleanValue = value === true\n            if(this.selected === booleanValue) return false; // ignore if there's no change\n\n            if(this.parent !== undefined)\n                this.parent.prepareForValueChange([this.val])\n\n            this.setSelectedQuiet(booleanValue)\n\n            if(this.parent !== undefined)\n                this.parent.emit('change')\n        }\n    })\n\n    Object.defineProperty(this, 'text', {\n        get: function() {\n            return this.domNode[domUtils.textProperty]\n        },\n\n        set: function(text) {\n            this.domNode[domUtils.textProperty] = text\n        }\n    })\n\n\n    // private\n\n    // does everything for setting the selected state except emit the parent's change event\n    this.setSelectedQuiet = function setOptionSelected(booleanValue) {\n        if(this.selected === booleanValue) return; // ignore if there's no change\n\n        this.domNode.selected = booleanValue\n        this.emit('change') // the browser has no listenable event that is triggered on change of the 'checked' property\n    }\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Option.js\n ** module id = 23\n ** module chunks = 0\n **/","\n\nvar RowlikeGenerator = require(\"./RowlikeGenerator\");\n\nmodule.exports = RowlikeGenerator('th', \"TableHeader\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Header.js\n ** module id = 24\n ** module chunks = 0\n **/","var RowlikeGenerator = require(\"./RowlikeGenerator\");\n\nmodule.exports = RowlikeGenerator('tr', \"TableRow\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Row.js\n ** module id = 25\n ** module chunks = 0\n **/","var Gem = require('../Gem')\nvar proto = require('proto')\nvar Style = require(\"Style\")\n\nmodule.exports = proto(Gem, function(superclass) {\n\n\t// static properties\n\n\tthis.name = 'TableCell'\n\n    this.defaultStyle = Style({\n        display: 'table-cell'\n    })\n\t\n\n\t// instance properties\n\n\tthis.init = function(/*[label,] contents*/) {\n        if(arguments.length <= 1) {\n            var contents = arguments[0]\n        } else {\n            var label = arguments[0]\n            var contents = arguments[1]\n        }\n\n        this.domNode = document.createElement(\"td\") // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n\t\tthis.label = label\n\n        this.children = [] // need children before calling add\n        if(contents instanceof Gem || typeof(contents) !== 'string') {\n            this.add(contents)\n        } else if(contents !== undefined) {\n            this.domNode.textContent = contents\n        }\n\n        superclass.init.apply(this, arguments) // superclass constructor\n\t}\n\n\tthis.colspan = function(cols) {\n\t\tthis.attr('colspan',cols);\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/Cell.js\n ** module id = 26\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/build-modules/~/webpack/~/node-libs-browser/~/events/events.js\n ** module id = 27\n ** module chunks = 0\n **/","var proto = require('proto')\n\nvar Gem = require('Gem')\nvar Style = require(\"Style\")\nvar Cell = require(\"./Cell\");\n\n// generates either a Header or a Row, depending on what you pass in\n// elementType should either be \"tr\" or \"th\n// name should either be \"Header\" or \"Row\nmodule.exports = function(elementType, name) {\n    return proto(Gem, function(superclass) {\n\n        // static properties\n\n        this.name = name\n\n        this.defaultStyle = Style({\n            display: 'table-row'\n        })\n\n\n        // instance properties\n\n        this.init = function(/*[label,] rowInit*/) {\n            if(arguments[0] instanceof Array) {\n                var rowInit = arguments[0]\n            } else {\n                var label = arguments[0]\n                var rowInit = arguments[1]\n            }\n\n            this.domNode = document.createElement(elementType) // do this before calling the superclass constructor so that an extra useless domNode isn't created inside it\n            this.label = label\n            this.children = [] // need children before calling add\n\n            if(rowInit !== undefined) {\n                for(var n=0; n<rowInit.length; n++) {\n                    this.cell(rowInit[n])\n                }\n            }\n\n            superclass.init.apply(this, arguments) // superclass constructor\n        }\n\n        this.cell = function(/*[label,] contents*/) {\n            var cell = Cell.apply(undefined, arguments);\n            this.add(cell);\n            return cell;\n        }\n    })\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Components/RowlikeGenerator.js\n ** module id = 28\n ** module chunks = 0\n **/","\"use strict\";\r\n/* Copyright (c) 2013 Billy Tetrud - Free to use for any purpose: MIT License*/\r\n\r\nvar noop = function() {}\r\n\r\nvar prototypeName='prototype', undefined, protoUndefined='undefined', init='init', ownProperty=({}).hasOwnProperty; // minifiable variables\r\nfunction proto() {\r\n    var args = arguments // minifiable variables\r\n\r\n    if(args.length == 1) {\r\n        var parent = {init: noop}\r\n        var prototypeBuilder = args[0]\r\n\r\n    } else { // length == 2\r\n        var parent = args[0]\r\n        var prototypeBuilder = args[1]\r\n    }\r\n\r\n    // special handling for Error objects\r\n    var namePointer = {}    // name used only for Error Objects\r\n    if([Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError].indexOf(parent) !== -1) {\r\n        parent = normalizeErrorObject(parent, namePointer)\r\n    }\r\n\r\n    // set up the parent into the prototype chain if a parent is passed\r\n    var parentIsFunction = typeof(parent) === \"function\"\r\n    if(parentIsFunction) {\r\n        prototypeBuilder[prototypeName] = parent[prototypeName]\r\n    } else {\r\n        prototypeBuilder[prototypeName] = parent\r\n    }\r\n\r\n    // the prototype that will be used to make instances\r\n    var prototype = new prototypeBuilder(parent)\r\n    namePointer.name = prototype.name\r\n\r\n    // if there's no init, assume its inheriting a non-proto class, so default to applying the superclass's constructor.\r\n    if(!prototype[init] && parentIsFunction) {\r\n        prototype[init] = function() {\r\n            parent.apply(this, arguments)\r\n        }\r\n    }\r\n\r\n    // constructor for empty object which will be populated via the constructor\r\n    var F = function() {}\r\n        F[prototypeName] = prototype    // set the prototype for created instances\r\n\r\n    var constructorName = prototype.name?prototype.name:''\r\n    if(prototype[init] === undefined || prototype[init] === noop) {\r\n        var ProtoObjectFactory = new Function('F',\r\n            \"return function \" + constructorName + \"(){\" +\r\n                \"return new F()\" +\r\n            \"}\"\r\n        )(F)\r\n    } else {\r\n        // dynamically creating this function cause there's no other way to dynamically name a function\r\n        var ProtoObjectFactory = new Function('F','i','u','n', // shitty variables cause minifiers aren't gonna minify my function string here\r\n            \"return function \" + constructorName + \"(){ \" +\r\n                \"var x=new F(),r=i.apply(x,arguments)\\n\" +    // populate object via the constructor\r\n                \"if(r===n)\\n\" +\r\n                    \"return x\\n\" +\r\n                \"else if(r===u)\\n\" +\r\n                    \"return n\\n\" +\r\n                \"else\\n\" +\r\n                    \"return r\\n\" +\r\n            \"}\"\r\n        )(F, prototype[init], proto[protoUndefined]) // note that n is undefined\r\n    }\r\n\r\n    prototype.constructor = ProtoObjectFactory;    // set the constructor property on the prototype\r\n\r\n    // add all the prototype properties onto the static class as well (so you can access that class when you want to reference superclass properties)\r\n    for(var n in prototype) {\r\n        addProperty(ProtoObjectFactory, prototype, n)\r\n    }\r\n\r\n    // add properties from parent that don't exist in the static class object yet\r\n    for(var n in parent) {\r\n        if(ownProperty.call(parent, n) && ProtoObjectFactory[n] === undefined) {\r\n            addProperty(ProtoObjectFactory, parent, n)\r\n        }\r\n    }\r\n\r\n    ProtoObjectFactory.parent = parent;            // special parent property only available on the returned proto class\r\n    ProtoObjectFactory[prototypeName] = prototype  // set the prototype on the object factory\r\n\r\n    return ProtoObjectFactory;\r\n}\r\n\r\nproto[protoUndefined] = {} // a special marker for when you want to return undefined from a constructor\r\n\r\nmodule.exports = proto\r\n\r\nfunction normalizeErrorObject(ErrorObject, namePointer) {\r\n    function NormalizedError() {\r\n        var tmp = new ErrorObject(arguments[0])\r\n        tmp.name = namePointer.name\r\n\r\n        this.message = tmp.message\r\n        if(Object.defineProperty) {\r\n            /*this.stack = */Object.defineProperty(this, 'stack', { // getter for more optimizy goodness\r\n                get: function() {\r\n                    return tmp.stack\r\n                },\r\n                configurable: true // so you can change it if you want\r\n            })\r\n        } else {\r\n            this.stack = tmp.stack\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    var IntermediateInheritor = function() {}\r\n        IntermediateInheritor.prototype = ErrorObject.prototype\r\n    NormalizedError.prototype = new IntermediateInheritor()\r\n\r\n    return NormalizedError\r\n}\r\n\r\nfunction addProperty(factoryObject, prototype, property) {\r\n    try {\r\n        var info = Object.getOwnPropertyDescriptor(prototype, property)\r\n        if(info.get !== undefined || info.get !== undefined && Object.defineProperty !== undefined) {\r\n            Object.defineProperty(factoryObject, property, info)\r\n        } else {\r\n            factoryObject[property] = prototype[property]\r\n        }\r\n    } catch(e) {\r\n        // do nothing, if a property (like `name`) can't be set, just ignore it\r\n    }\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/proto/proto.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\r\n * HashMap - HashMap Class for JavaScript\r\n * @author Ariel Flesler <aflesler@gmail.com>\r\n * @version 2.0.5\r\n * Homepage: https://github.com/flesler/hashmap\r\n */\r\n\r\n(function(factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine([], factory);\r\n\t} else if (typeof module === 'object') {\r\n\t\t// Node js environment\r\n\t\tvar HashMap = module.exports = factory();\r\n\t\t// Keep it backwards compatible\r\n\t\tHashMap.HashMap = HashMap;\r\n\t} else {\r\n\t\t// Browser globals (this is window)\r\n\t\tthis.HashMap = factory();\r\n\t}\r\n}(function() {\r\n\r\n\tfunction HashMap(other) {\r\n\t\tthis.clear();\r\n\t\tswitch (arguments.length) {\r\n\t\t\tcase 0: break;\r\n\t\t\tcase 1: this.copy(other); break;\r\n\t\t\tdefault: multi(this, arguments); break;\r\n\t\t}\r\n\t}\r\n\r\n\tvar proto = HashMap.prototype = {\r\n\t\tconstructor:HashMap,\r\n\r\n\t\tget:function(key) {\r\n\t\t\tvar data = this._data[this.hash(key)];\r\n\t\t\treturn data && data[1];\r\n\t\t},\r\n\r\n\t\tset:function(key, value) {\r\n\t\t\t// Store original key as well (for iteration)\r\n\t\t\tvar hash = this.hash(key);\r\n\t\t\tif ( !(hash in this._data) ) {\r\n\t\t\t\tthis._count++;\r\n\t\t\t}\r\n\t\t\tthis._data[hash] = [key, value];\r\n\t\t},\r\n\r\n\t\tmulti:function() {\r\n\t\t\tmulti(this, arguments);\r\n\t\t},\r\n\r\n\t\tcopy:function(other) {\r\n\t\t\tfor (var hash in other._data) {\r\n\t\t\t\tif ( !(hash in this._data) ) {\r\n\t\t\t\t\tthis._count++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._data[hash] = other._data[hash];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thas:function(key) {\r\n\t\t\treturn this.hash(key) in this._data;\r\n\t\t},\r\n\r\n\t\tsearch:function(value) {\r\n\t\t\tfor (var key in this._data) {\r\n\t\t\t\tif (this._data[key][1] === value) {\r\n\t\t\t\t\treturn this._data[key][0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\tremove:function(key) {\r\n\t\t\tvar hash = this.hash(key);\r\n\t\t\tif ( hash in this._data ) {\r\n\t\t\t\tthis._count--;\r\n\t\t\t\tdelete this._data[hash];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttype:function(key) {\r\n\t\t\tvar str = Object.prototype.toString.call(key);\r\n\t\t\tvar type = str.slice(8, -1).toLowerCase();\r\n\t\t\t// Some browsers yield DOMWindow for null and undefined, works fine on Node\r\n\t\t\tif (type === 'domwindow' && !key) {\r\n\t\t\t\treturn key + '';\r\n\t\t\t}\r\n\t\t\treturn type;\r\n\t\t},\r\n\r\n\t\tkeys:function() {\r\n\t\t\tvar keys = [];\r\n\t\t\tthis.forEach(function(_, key) { keys.push(key); });\r\n\t\t\treturn keys;\r\n\t\t},\r\n\r\n\t\tvalues:function() {\r\n\t\t\tvar values = [];\r\n\t\t\tthis.forEach(function(value) { values.push(value); });\r\n\t\t\treturn values;\r\n\t\t},\r\n\r\n\t\tcount:function() {\r\n\t\t\treturn this._count;\r\n\t\t},\r\n\r\n\t\tclear:function() {\r\n\t\t\t// TODO: Would Object.create(null) make any difference\r\n\t\t\tthis._data = {};\r\n\t\t\tthis._count = 0;\r\n\t\t},\r\n\r\n\t\tclone:function() {\r\n\t\t\treturn new HashMap(this);\r\n\t\t},\r\n\r\n\t\thash:function(key) {\r\n\t\t\tswitch (this.type(key)) {\r\n\t\t\t\tcase 'undefined':\r\n\t\t\t\tcase 'null':\r\n\t\t\t\tcase 'boolean':\r\n\t\t\t\tcase 'number':\r\n\t\t\t\tcase 'regexp':\r\n\t\t\t\t\treturn key + '';\r\n\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\treturn '♣' + key.getTime();\r\n\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\treturn '♠' + key;\r\n\r\n\t\t\t\tcase 'array':\r\n\t\t\t\t\tvar hashes = [];\r\n\t\t\t\t\tfor (var i = 0; i < key.length; i++) {\r\n\t\t\t\t\t\thashes[i] = this.hash(key[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn '♥' + hashes.join('⁞');\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// TODO: Don't use expandos when Object.defineProperty is not available?\r\n\t\t\t\t\tif (!key.hasOwnProperty('_hmuid_')) {\r\n\t\t\t\t\t\tkey._hmuid_ = ++HashMap.uid;\r\n\t\t\t\t\t\thide(key, '_hmuid_');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn '♦' + key._hmuid_;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tforEach:function(func, ctx) {\r\n\t\t\tfor (var key in this._data) {\r\n\t\t\t\tvar data = this._data[key];\r\n\t\t\t\tfunc.call(ctx || this, data[1], data[0]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tHashMap.uid = 0;\r\n\r\n\t//- Add chaining to some methods\r\n    var chainMethod = {set:1,multi:1,copy:1,remove:1,clear:1,forEach:1}\r\n\tfor (var method in chainMethod) {\r\n\t\tproto[method] = chain(proto[method])\r\n\t}\r\n\r\n\t//- Utils\r\n\r\n\tfunction multi(map, args) {\r\n\t\tfor (var i = 0; i < args.length; i += 2) {\r\n\t\t\tmap.set(args[i], args[i+1]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction chain(fn) {\r\n\t\treturn function() {\r\n\t\t\tfn.apply(this, arguments);\r\n\t\t\treturn this;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction hide(obj, prop) {\r\n\t\t// Make non iterable if supported\r\n\t\tif (Object.defineProperty) {\r\n\t\t\tObject.defineProperty(obj, prop, {enumerable:false});\r\n\t\t}\r\n\t}\r\n\r\n\treturn HashMap;\r\n}));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/hashmap/hashmap.js\n ** module id = 30\n ** module chunks = 0\n **/","var proto = require(\"proto\")\r\nvar EventEmitter = require(\"events\").EventEmitter\r\nvar utils = require(\"./utils\")\r\n\r\n\r\n// emits the event:\r\n    // change - the event data is an object of one of the following forms:\r\n        // {data:_, type: 'set', property: propertyList}\r\n        // {data:_, type: 'added', property: propertyList, index:_, count: numberOfElementsAdded}\r\n        // {data:_, type: 'removed', property: propertyList, index:_, removed: removedValues}\r\nvar Observe = module.exports = proto(EventEmitter, function() {\r\n\r\n    // static members\r\n\r\n    this.init = function(obj) {\r\n        this.subject = obj\r\n\r\n        this.setMaxListeners(1000)\r\n    }\r\n\r\n    // instance members\r\n\r\n    // gets an element or member of the subject and returns another Observee\r\n    // changes to the returned Observee will be emitted by its parent as well\r\n    this.get = function(property) {\r\n        return ObserveeChild(this, parsePropertyList(property))\r\n    }\r\n\r\n    // sets a value on the subject\r\n    // property - either an array of members to select, or a string where properties to select are separated by dots\r\n    // value - the value to set\r\n    this.set = function(property, value) {\r\n        setInternal(this, parsePropertyList(property), value, {})\r\n    }\r\n\r\n    // pushes a value onto a list\r\n    this.push = function(/*value...*/) {\r\n        pushInternal(this, [], arguments, {})\r\n    }\r\n\r\n    this.pop = function() {\r\n        var elements = spliceInternal(this, [], [this.subject.length-1,1], {})\r\n        return elements[0]\r\n    }\r\n\r\n    this.unshift = function(/*value...*/) {\r\n        spliceInternal(this, [], [0,0].concat(Array.prototype.slice.call(arguments, 0)), {})\r\n    }\r\n    this.shift = function() {\r\n        var elements = spliceInternal(this, [], [0,1], {})\r\n        return elements[0]\r\n    }\r\n\r\n    this.reverse = function() {\r\n        this.subject.reverse()\r\n        this.emit('change', {\r\n            type:'set', property: []\r\n        })\r\n    }\r\n\r\n    this.sort = function() {\r\n        this.subject.sort.apply(this.subject, arguments)\r\n        this.emit('change', {\r\n            type:'set', property: []\r\n        })\r\n    }\r\n\r\n    // index is the index to remove/insert at\r\n    // countToRemove is the number to remove\r\n    // elementsToAdd is a list of elements to add\r\n    this.splice = function(/*index, countToRemove[, elementsToAdd]*/) {\r\n        return spliceInternal(this, [], arguments, {})\r\n    }\r\n\r\n    // use this instead of concat for mutation behavior\r\n    this.append = function(arrayToAppend) {\r\n        appendInternal(this, [], arguments, {})\r\n    }\r\n\r\n    this.data = this.id = function(data) {\r\n        return ObserveeChild(this, [], {data: data})\r\n    }\r\n\r\n    // For the returned object, any property added via set, push, splice, or append joins an internal observee together with this observee, so that\r\n    //      the internal observee and the containing observee will both send 'change' events appropriately\r\n    // collapse - (default: false) if true, any property added will be set to the subject of the value added (so that value won't be an observee anymore\r\n        // note: only use collapse:true if the observees you're unioning isn't actually an object that inherits from an observee - any instance methods on the observee that come from child classes won't be accessible anymore\r\n        // e.g. var x = observe({a:5})\r\n        //      var b = observe({})\r\n        //      x.subject.a === 5    ;; true\r\n        //      b.union(true).set('x', x)\r\n        //      b.subject.x.a === 5            ;; true\r\n        //      b.subject.x.subject.a === 5    ;; false\r\n    this.union = function(collapse) {\r\n        if(collapse === undefined) collapse = false\r\n        return ObserveeChild(this, [], {union: collapse})\r\n    }\r\n\r\n\r\n    /* pause and unpause may cause weird affects in certain cases (e.g. if you remove an element at index 4 and *then* add an element at index 2)\r\n    // pause sending events (for when you want to do a lot of things to an object)\r\n    this.pause = function() {\r\n        this.paused = true\r\n    }\r\n    this.unpause = function() {\r\n        this.paused = undefined\r\n        sendEvent(this)\r\n    }*/\r\n})\r\n\r\n\r\nfunction parsePropertyList(property) {\r\n    if(!(property instanceof Array)) {\r\n        property = property.toString().split('.')\r\n    }\r\n\r\n    return property\r\n}\r\n\r\nfunction getPropertyPointer(subject, propertyList) {\r\n    var current = subject\r\n    for(var n=0; n<propertyList.length-1; n++) {\r\n        current = current[propertyList[n]]\r\n    }\r\n\r\n    return {obj: current, key:propertyList[n]}\r\n}\r\n\r\nvar getPropertyValue = module.exports.getPropertyValue = function(subject, property) {\r\n    var pointer = getPropertyPointer(subject, property)\r\n    if(pointer.key !== undefined) {\r\n        return pointer.obj[pointer.key]\r\n    } else {\r\n        return pointer.obj\r\n    }\r\n}\r\n\r\n// private\r\n\r\n// options can have the properties:\r\n    // union - if true, any value set, pushed, appended, or spliced onto the observee is unioned\r\nvar ObserveeChild = proto(EventEmitter, function() {\r\n\r\n    this.init = function(parent, propertyList, options) {\r\n        if(options === undefined) this.options = {}\r\n        else                      this.options = options\r\n\r\n        if(parent._observeeParent !== undefined)\r\n            this._observeeParent = parent._observeeParent\r\n        else\r\n            this._observeeParent = parent\r\n\r\n        this.property = propertyList\r\n        this.subject = getPropertyValue(parent.subject, propertyList)\r\n\r\n        var that = this\r\n        parent.on('change', function(change) {\r\n            var answers = changeQuestions(that.property, change, that.options.union)\r\n\r\n            if(change.type === 'set' && change.property.length <= that.property.length && that.options.union === undefined) {    // if the subject may have been replaced with a new subject\r\n                //getPropertyValue(parent.subject, propertyList)\r\n                var pointer = getPropertyPointer(parent.subject, propertyList)\r\n                if(pointer.obj !== undefined) {\r\n                    if(pointer.key !== undefined) {\r\n                        that.subject =pointer.obj[pointer.key]\r\n                    } else {\r\n                        that.subject =pointer.obj\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(answers.isWithin) {\r\n                that.emit('change', {\r\n                    type:change.type, property: change.property.slice(that.property.length),\r\n                    index:change.index, count:change.count, removed: change.removed, data: change.data\r\n                })\r\n            } else if(answers.couldRelocate) {\r\n                if(change.type === 'removed') {\r\n                    var relevantIndex = that.property[change.property.length]\r\n                    var removedIndexesAreBeforeIndexOfObserveeChild = change.index + change.removed.length - 1 < relevantIndex\r\n\r\n                    if(removedIndexesAreBeforeIndexOfObserveeChild) {\r\n                        that.property[change.property.length] = relevantIndex - change.removed.length // change the propertyList to match the new index\r\n                    }\r\n                } else if(change.type === 'added') {\r\n                    var relevantIndex = parseInt(that.property[change.property.length])\r\n                    if(change.index <= relevantIndex) {\r\n                        that.property[change.property.length] = relevantIndex + change.count // change the propertyList to match the new index\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    this.get = function(property) {\r\n        return this._observeeParent.get(this.property.concat(parsePropertyList(property)))\r\n    }\r\n\r\n    this.set = function(property, value) {\r\n        setInternal(this._observeeParent, this.property.concat(parsePropertyList(property)), value, this.options)\r\n    }\r\n\r\n    this.push = function(/*values...*/) {\r\n        pushInternal(this._observeeParent, this.property, arguments, this.options)\r\n    }\r\n    this.pop = function() {\r\n        var elements = spliceInternal(this._observeeParent, this.property, [this.subject.length-1,1], this.options)\r\n        return elements[0]\r\n    }\r\n\r\n    this.unshift = function(/*value...*/) {\r\n        spliceInternal(this._observeeParent, this.property, [0,0].concat(Array.prototype.slice.call(arguments,0)), this.options)\r\n    }\r\n    this.shift = function() {\r\n        var elements = spliceInternal(this._observeeParent, this.property, [0,1], this.options)\r\n        return elements[0]\r\n    }\r\n\r\n    this.splice = function(index, countToRemove/*[, elementsToAdd....]*/) {\r\n        return spliceInternal(this._observeeParent, this.property, arguments, this.options)\r\n    }\r\n\r\n    this.reverse = function() {\r\n        this.subject.reverse()\r\n        this.emit('change', {\r\n            type:'set', property: []\r\n        })\r\n    }\r\n\r\n    this.sort = function() {\r\n        this.subject.sort.apply(this.subject, arguments)\r\n        this.emit('change', {\r\n            type:'set', property: []\r\n        })\r\n    }\r\n\r\n    this.append = function(/*[property,] arrayToAppend*/) {\r\n        appendInternal(this._observeeParent, this.property, arguments, this.options)\r\n    }\r\n\r\n    this.data = this.id = function(data) {\r\n        return ObserveeChild(this._observeeParent, this.property, utils.merge({}, this.options, {data: data}))\r\n    }\r\n\r\n    this.union = function(collapse) {\r\n        if(collapse === undefined) collapse = false\r\n        return ObserveeChild(this, [], utils.merge({}, this.options, {union: collapse}))\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n// that - the Observee object\r\nfunction setInternal(that, propertyList, value, options) {\r\n    var pointer = getPropertyPointer(that.subject, propertyList)\r\n\r\n    var internalObservee = value\r\n    if(options.union === true) {\r\n        value = value.subject\r\n    }\r\n\r\n    pointer.obj[pointer.key] = value\r\n\r\n    var event = {type: 'set', property: propertyList}\r\n    if(options.data !== undefined) event.data = event.id = options.data\r\n    that.emit('change',event)\r\n\r\n    if(options.union !== undefined)\r\n        unionizeEvents(that, internalObservee, propertyList, options.union)\r\n}\r\n\r\nfunction pushInternal(that, propertyList, args, options) {\r\n    var array = getPropertyValue(that.subject, propertyList)\r\n    var originalLength = array.length\r\n    array.push.apply(array, args)\r\n\r\n    var internalObservees = unionizeList(array, originalLength, args.length, options.union)\r\n\r\n    var event = {type: 'added', property: propertyList, index: originalLength, count: args.length}\r\n    if(options.data !== undefined) event.data = event.id = options.data\r\n    that.emit('change', event)\r\n\r\n    unionizeListEvents(that, internalObservees, propertyList, options.union)\r\n}\r\n\r\nfunction spliceInternal(that, propertyList, args, options) {\r\n    var index = args[0]\r\n    var countToRemove = args[1]\r\n\r\n    var array = getPropertyValue(that.subject, propertyList)\r\n    var result = array.splice.apply(array, args)\r\n\r\n    if(countToRemove > 0) {\r\n        var event = {type: 'removed', property: propertyList, index: index, removed: result}\r\n        if(options.data !== undefined) event.data = event.id = options.data\r\n        that.emit('change', event)\r\n    }\r\n    if(args.length > 2) {\r\n        var event = {type: 'added', property: propertyList, index: index, count: args.length-2}\r\n\r\n        var internalObservees = unionizeList(array, index, event.count, options.union)\r\n\r\n        if(options.data !== undefined) event.data = event.id = options.data\r\n        that.emit('change', event)\r\n\r\n        unionizeListEvents(that, internalObservees, propertyList, options.union)\r\n    }\r\n\r\n    return result\r\n}\r\n\r\n// note: I'm not using splice to do this as an optimization (because otherwise the property list would have to be parsed twice and the value gotten twice) - maybe this optimization wasn't worth it but its already done\r\nfunction appendInternal(that, propertyList, args, options) {\r\n    var arrayToAppend = args[0]\r\n    if(arrayToAppend.length === 0) return; //nothing to do\r\n\r\n    var array = getPropertyValue(that.subject, propertyList)\r\n    var originalLength = array.length\r\n\r\n    var spliceArgs = [originalLength, 0]\r\n    spliceArgs = spliceArgs.concat(arrayToAppend)\r\n    var oldLength = array.length\r\n    array.splice.apply(array, spliceArgs)\r\n\r\n    var internalObservees = unionizeList(array, oldLength, array.length, options.union)\r\n\r\n    var event = {type: 'added', property: propertyList, index: originalLength, count: arrayToAppend.length}\r\n    if(options.data !== undefined) event.data = event.id = options.data\r\n    that.emit('change', event)\r\n\r\n    unionizeListEvents(that, internalObservees, propertyList, options.union)\r\n}\r\n\r\n// sets a slice of elements to their subjects and\r\n// returns the original observee objects along with their indexes\r\nfunction unionizeList(array, start, count, union) {\r\n    var internalObservees = [] // list of observees and their property path\r\n    if(union !== undefined) {\r\n        var afterEnd = start+count\r\n        for(var n=start; n<afterEnd; n++) {\r\n            internalObservees.push({obj: array[n], index: n})\r\n            if(union === true)\r\n                array[n] = array[n].subject\r\n        }\r\n    }\r\n\r\n    return internalObservees\r\n}\r\n\r\n// runs unionizeEvents for elements in a list\r\n// internalObservees should be the result from `unionizeList`\r\nfunction unionizeListEvents(that, internalObservees, propertyList, collapse) {\r\n    for(var n=0; n<internalObservees.length; n++) {\r\n        unionizeEvents(that, internalObservees[n].obj, propertyList.concat(internalObservees[n].index+''), collapse)\r\n    }\r\n}\r\n\r\n\r\n// sets up the union change events for an observee with one of its inner properties\r\n// parameters:\r\n    // that - the container observee\r\n    // innerObservee - the contained observee\r\n    // propertyList - the propertyList to unionize\r\n    // collapse - the union option (true for collapse)\r\nfunction unionizeEvents(that, innerObservee, propertyList, collapse) {\r\n    var propertyListDepth = propertyList.length\r\n\r\n    if(innerObservee.on === undefined || innerObservee.emit === undefined || innerObservee.removeListener === undefined || innerObservee.set === undefined) {\r\n        throw new Error(\"Attempting to union a value that isn't an observee\")\r\n    }\r\n\r\n    var innerChangeHandler, containerChangeHandler\r\n    var ignorableContainerEvents = [], ignorableInnerEvents = []\r\n    innerObservee.on('change', innerChangeHandler = function(change) {\r\n        if(ignorableInnerEvents.indexOf(change) === -1) {        // don't run this for events generated by the union event handlers\r\n            if(collapse) {\r\n                var property = propertyList.concat(change.property)\r\n            } else {\r\n                var property = propertyList.concat(['subject']).concat(change.property)\r\n            }\r\n\r\n            var containerChange = utils.merge({}, change, {property: property})\r\n            ignorableContainerEvents.push(containerChange)\r\n            that.emit('change', containerChange)\r\n        }\r\n    })\r\n    that.on('change', containerChangeHandler = function(change) {\r\n        var changedPropertyDepth = change.property.length\r\n\r\n        if(collapse) {\r\n            var propertyListToAskFor = propertyList\r\n        } else {\r\n            var propertyListToAskFor = propertyList.concat(['subject'])\r\n        }\r\n\r\n        var answers = changeQuestions(propertyListToAskFor, change, true)\r\n        var changeIsWithinInnerProperty = answers.isWithin\r\n        var changeCouldRelocateInnerProperty = answers.couldRelocate\r\n\r\n        if(changeIsWithinInnerProperty && ignorableContainerEvents.indexOf(change) === -1) {   // don't run this for events generated by the union event handlers\r\n            if(collapse) {\r\n                var property = change.property.slice(propertyListDepth)\r\n            } else {\r\n                var property = change.property.slice(propertyListDepth+1) // +1 for the 'subject'\r\n            }\r\n\r\n            var innerObserveeEvent = utils.merge({}, change, {property: property})\r\n            ignorableInnerEvents.push(innerObserveeEvent)\r\n            innerObservee.emit('change', innerObserveeEvent)\r\n        } else if(changeCouldRelocateInnerProperty) {\r\n            if(change.type === 'set' /*&& changedPropertyDepth <= propertyListDepth  - this part already done above*/) {\r\n                removeUnion()\r\n            } else if(change.type === 'removed') {\r\n                var relevantIndex = propertyList[change.property.length]\r\n                var removedIndexesContainsIndexOfInnerObservee = change.index <= relevantIndex && relevantIndex <= change.index + change.removed.length - 1\r\n                var removedIndexesAreBeforeIndexOfInnerObservee = change.index + change.removed.length - 1 < relevantIndex && relevantIndex\r\n\r\n                if(removedIndexesContainsIndexOfInnerObservee && changedPropertyDepth <= propertyListDepth+1) {\r\n                    removeUnion()\r\n                } else if(removedIndexesAreBeforeIndexOfInnerObservee) {\r\n                    propertyList[change.property.length] = relevantIndex - change.removed.length // change the propertyList to match the new index\r\n                }\r\n            } else if(change.type === 'added') {\r\n                var relevantIndex = propertyList[change.property.length]\r\n                if(change.index < relevantIndex) {\r\n                    propertyList[change.property.length] = relevantIndex + change.count // change the propertyList to match the new index\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    var removeUnion = function() {\r\n        innerObservee.removeListener('change', innerChangeHandler)\r\n        that.removeListener('change', containerChangeHandler)\r\n    }\r\n}\r\n\r\n\r\n// answers certain questions about a change compared to a property list\r\n// returns an object like: {\r\n    // isWithin: _,           // true if changeIsWithinInnerProperty\r\n    // couldRelocate: _       // true if changeCouldRelocateInnerProperty or if innerProperty might be removed\r\n// }\r\nfunction changeQuestions(propertyList, change, union) {\r\n    var propertyListDepth = propertyList.length\r\n    var unioned = union!==undefined\r\n\r\n    var changeIsWithinInnerProperty = true // assume true until proven otherwise\r\n    var changeCouldRelocateInnerProperty = true // assume true until prove otherwise\r\n    for(var n=0; n<propertyListDepth; n++) {\r\n        if(change.property[n] !== propertyList[n]+'') {\r\n            changeIsWithinInnerProperty = false\r\n            if(n<change.property.length) {\r\n                changeCouldRelocateInnerProperty = false\r\n            }\r\n        }\r\n    }\r\n\r\n    if(!unioned && change.property.length < propertyListDepth\r\n       || unioned && (change.type === 'set' && change.property.length <= propertyListDepth   // if this is a unioned observee, replacing it actually removes it\r\n                   || change.type !== 'set' && change.property.length < propertyListDepth)\r\n    ) {\r\n        changeIsWithinInnerProperty = false\r\n    } else {\r\n        changeCouldRelocateInnerProperty = false\r\n    }\r\n\r\n    return {couldRelocate: changeCouldRelocateInnerProperty, isWithin: changeIsWithinInnerProperty}\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/observe/observe.js\n ** module id = 31\n ** module chunks = 0\n **/","// resolves varargs variable into more usable form\n// args - should be a function arguments variable\n// returns a javascript Array object of arguments that doesn't count trailing undefined values in the length\nmodule.exports = function(theArguments) {\n    var args = Array.prototype.slice.call(theArguments, 0)\n\n    var count = 0;\n    for(var n=args.length-1; n>=0; n--) {\n        if(args[n] === undefined)\n            count++\n        else\n            break\n    }\n    args.splice(args.length-count, count)\n    return args\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/trimArguments/trimArguments.js\n ** module id = 32\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/build-modules/~/webpack/~/node-libs-browser/~/path-browserify/index.js\n ** module id = 33\n ** module chunks = 0\n **/","// utilities needed by the configuration (excludes dependencies the configs don't need so the webpack bundle is lean)\r\n\r\nvar path = require('path')\r\n\r\n\r\n// Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\r\n// any number of objects can be passed into the function and will be merged into the first argument in order\r\n// returns obj1 (now mutated)\r\nvar merge = exports.merge = function(obj1, obj2/*, moreObjects...*/){\r\n    return mergeInternal(arrayify(arguments), false)\r\n}\r\n\r\n// like merge, but traverses the whole object tree\r\n// the result is undefined for objects with circular references\r\nvar deepMerge = exports.deepMerge = function(obj1, obj2/*, moreObjects...*/) {\r\n    return mergeInternal(arrayify(arguments), true)\r\n}\r\n\r\nfunction mergeInternal(objects, deep) {\r\n    var obj1 = objects[0]\r\n    var obj2 = objects[1]\r\n\r\n    for(var key in obj2){\r\n       if(Object.hasOwnProperty.call(obj2, key)) {\r\n            if(deep && obj1[key] instanceof Object && obj2[key] instanceof Object) {\r\n                mergeInternal([obj1[key], obj2[key]], true)\r\n            } else {\r\n                obj1[key] = obj2[key]\r\n            }\r\n       }\r\n    }\r\n\r\n    if(objects.length > 2) {\r\n        var newObjects = [obj1].concat(objects.slice(2))\r\n        return mergeInternal(newObjects, deep)\r\n    } else {\r\n        return obj1\r\n    }\r\n}\r\n\r\nfunction arrayify(a) {\r\n    return Array.prototype.slice.call(a, 0)\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/observe/utils.js\n ** module id = 34\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/build-modules/~/webpack/~/node-libs-browser/~/process/browser.js\n ** module id = 35\n ** module chunks = 0\n **/","\"use strict\";\r\n/* Copyright (c) 2013 Billy Tetrud - Free to use for any purpose: MIT License*/\r\n\r\nvar prototypeName='prototype', undefined, protoUndefined='undefined', init='init', ownProperty=({}).hasOwnProperty; // minifiable variables\r\nfunction proto() {\r\n    var args = arguments // minifiable variables\r\n\r\n    if(args.length == 1) {\r\n        var parent = {}\r\n        var prototypeBuilder = args[0]\r\n\r\n    } else { // length == 2\r\n        var parent = args[0]\r\n        var prototypeBuilder = args[1]\r\n    }\r\n\r\n    // special handling for Error objects\r\n    var namePointer = {}\r\n    if([Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError].indexOf(parent) !== -1) {\r\n        parent = normalizeErrorObject(parent, namePointer)\r\n    }\r\n\r\n    // set up the parent into the prototype chain if a parent is passed\r\n    var parentIsFunction = typeof(parent) === \"function\"\r\n    if(parentIsFunction) {\r\n        prototypeBuilder[prototypeName] = parent[prototypeName]\r\n    } else {\r\n        prototypeBuilder[prototypeName] = parent\r\n    }\r\n\r\n    // the prototype that will be used to make instances\r\n    var prototype = new prototypeBuilder(parent)\r\n    prototype.constructor = ProtoObjectFactory;    // set the constructor property on the prototype\r\n    namePointer.name = prototype.name\r\n\r\n    // if there's no init, assume its inheriting a non-proto class, so default to applying the superclass's constructor.\r\n    if(!prototype[init] && parentIsFunction) {\r\n        prototype[init] = function() {\r\n            parent.apply(this, arguments)\r\n        }\r\n    }\r\n\r\n    // constructor for empty object which will be populated via the constructor\r\n    var F = function() {}\r\n        F[prototypeName] = prototype    // set the prototype for created instances\r\n\r\n    function ProtoObjectFactory() {     // result object factory\r\n        var x = new F()                 // empty object\r\n\r\n        if(prototype[init]) {\r\n            var result = prototype[init].apply(x, arguments)    // populate object via the constructor\r\n            if(result === proto[protoUndefined])\r\n                return undefined\r\n            else if(result !== undefined)\r\n                return result\r\n            else\r\n                return x\r\n        } else {\r\n            return x\r\n        }\r\n    }\r\n\r\n    // add all the prototype properties onto the static class as well (so you can access that class when you want to reference superclass properties)\r\n    for(var n in prototype) {\r\n        addProperty(ProtoObjectFactory, prototype, n)\r\n    }\r\n\r\n    // add properties from parent that don't exist in the static class object yet (to get thing in like\r\n    for(var n in parent) {\r\n        if(Object.hasOwnProperty.call(parent, n) && ProtoObjectFactory[n] === undefined) {\r\n            addProperty(ProtoObjectFactory, parent, n)\r\n        }\r\n    }\r\n\r\n    ProtoObjectFactory[prototypeName] = prototype  // set the prototype on the object factory\r\n\r\n    return ProtoObjectFactory;\r\n}\r\n\r\nproto[protoUndefined] = {} // a special marker for when you want to return undefined from a constructor\r\n\r\nmodule.exports = proto\r\n\r\nfunction normalizeErrorObject(ErrorObject, namePointer) {\r\n    function NormalizedError() {\r\n        var tmp = new ErrorObject(arguments[0])\r\n        tmp.name = namePointer.name\r\n\r\n        this.message = tmp.message\r\n        if(Object.defineProperty) {\r\n            /*this.stack = */Object.defineProperty(this, 'stack', { // getter for more optimizy goodness\r\n                get: function() {\r\n                    return tmp.stack\r\n                }\r\n            })\r\n        } else {\r\n            this.stack = tmp.stack\r\n        }\r\n\r\n        return this\r\n    }\r\n        var IntermediateInheritor = function() {}\r\n            IntermediateInheritor.prototype = ErrorObject.prototype\r\n        NormalizedError.prototype = new IntermediateInheritor()\r\n    return NormalizedError\r\n}\r\n\r\nfunction addProperty(factoryObject, prototype, property) {\r\n    try {\r\n        var info = Object.getOwnPropertyDescriptor(prototype, property)\r\n        if(info.get !== undefined || info.get !== undefined && Object.defineProperty !== undefined) {\r\n            Object.defineProperty(factoryObject, property, info)\r\n        } else {\r\n            factoryObject[property] = prototype[property]\r\n        }\r\n    } catch(e) {\r\n        // do nothing, if a property (like `name`) can't be set, just ignore it\r\n    }\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/observe/~/proto/proto.js\n ** module id = 36\n ** module chunks = 0\n **/"],"sourceRoot":""}